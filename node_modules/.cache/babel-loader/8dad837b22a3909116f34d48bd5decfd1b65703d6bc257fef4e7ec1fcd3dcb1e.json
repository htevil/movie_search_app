{"ast":null,"code":"// src/internal/slot.ts\nvar HasSlotController = class {\n  constructor(host, ...slotNames) {\n    this.slotNames = [];\n    this.handleSlotChange = event => {\n      const slot = event.target;\n      if (this.slotNames.includes(\"[default]\") && !slot.name || slot.name && this.slotNames.includes(slot.name)) {\n        this.host.requestUpdate();\n      }\n    };\n    (this.host = host).addController(this);\n    this.slotNames = slotNames;\n  }\n  hasDefaultSlot() {\n    return [...this.host.childNodes].some(node => {\n      if (node.nodeType === node.TEXT_NODE && node.textContent.trim() !== \"\") {\n        return true;\n      }\n      if (node.nodeType === node.ELEMENT_NODE) {\n        const el = node;\n        const tagName = el.tagName.toLowerCase();\n        if (tagName === \"sl-visually-hidden\") {\n          return false;\n        }\n        if (!el.hasAttribute(\"slot\")) {\n          return true;\n        }\n      }\n      return false;\n    });\n  }\n  hasNamedSlot(name) {\n    return this.host.querySelector(`:scope > [slot=\"${name}\"]`) !== null;\n  }\n  test(slotName) {\n    return slotName === \"[default]\" ? this.hasDefaultSlot() : this.hasNamedSlot(slotName);\n  }\n  hostConnected() {\n    this.host.shadowRoot.addEventListener(\"slotchange\", this.handleSlotChange);\n  }\n  hostDisconnected() {\n    this.host.shadowRoot.removeEventListener(\"slotchange\", this.handleSlotChange);\n  }\n};\nfunction getTextContent(slot) {\n  if (!slot) {\n    return \"\";\n  }\n  const nodes = slot.assignedNodes({\n    flatten: true\n  });\n  let text = \"\";\n  [...nodes].forEach(node => {\n    if (node.nodeType === Node.TEXT_NODE) {\n      text += node.textContent;\n    }\n  });\n  return text;\n}\nexport { HasSlotController, getTextContent };","map":{"version":3,"names":["HasSlotController","constructor","host","slotNames","handleSlotChange","event","slot","target","includes","name","requestUpdate","addController","hasDefaultSlot","childNodes","some","node","nodeType","TEXT_NODE","textContent","trim","ELEMENT_NODE","el","tagName","toLowerCase","hasAttribute","hasNamedSlot","querySelector","test","slotName","hostConnected","shadowRoot","addEventListener","hostDisconnected","removeEventListener","getTextContent","nodes","assignedNodes","flatten","text","forEach","Node"],"sources":["C:/Users/ASUS/Project/Web Project/Greekforgreek_project/React project/movie_search_app/node_modules/@shoelace-style/shoelace/dist/chunks/chunk.NYIIDP5N.js"],"sourcesContent":["// src/internal/slot.ts\nvar HasSlotController = class {\n  constructor(host, ...slotNames) {\n    this.slotNames = [];\n    this.handleSlotChange = (event) => {\n      const slot = event.target;\n      if (this.slotNames.includes(\"[default]\") && !slot.name || slot.name && this.slotNames.includes(slot.name)) {\n        this.host.requestUpdate();\n      }\n    };\n    (this.host = host).addController(this);\n    this.slotNames = slotNames;\n  }\n  hasDefaultSlot() {\n    return [...this.host.childNodes].some((node) => {\n      if (node.nodeType === node.TEXT_NODE && node.textContent.trim() !== \"\") {\n        return true;\n      }\n      if (node.nodeType === node.ELEMENT_NODE) {\n        const el = node;\n        const tagName = el.tagName.toLowerCase();\n        if (tagName === \"sl-visually-hidden\") {\n          return false;\n        }\n        if (!el.hasAttribute(\"slot\")) {\n          return true;\n        }\n      }\n      return false;\n    });\n  }\n  hasNamedSlot(name) {\n    return this.host.querySelector(`:scope > [slot=\"${name}\"]`) !== null;\n  }\n  test(slotName) {\n    return slotName === \"[default]\" ? this.hasDefaultSlot() : this.hasNamedSlot(slotName);\n  }\n  hostConnected() {\n    this.host.shadowRoot.addEventListener(\"slotchange\", this.handleSlotChange);\n  }\n  hostDisconnected() {\n    this.host.shadowRoot.removeEventListener(\"slotchange\", this.handleSlotChange);\n  }\n};\nfunction getTextContent(slot) {\n  if (!slot) {\n    return \"\";\n  }\n  const nodes = slot.assignedNodes({ flatten: true });\n  let text = \"\";\n  [...nodes].forEach((node) => {\n    if (node.nodeType === Node.TEXT_NODE) {\n      text += node.textContent;\n    }\n  });\n  return text;\n}\n\nexport {\n  HasSlotController,\n  getTextContent\n};\n"],"mappings":"AAAA;AACA,IAAIA,iBAAiB,GAAG,MAAM;EAC5BC,WAAWA,CAACC,IAAI,EAAE,GAAGC,SAAS,EAAE;IAC9B,IAAI,CAACA,SAAS,GAAG,EAAE;IACnB,IAAI,CAACC,gBAAgB,GAAIC,KAAK,IAAK;MACjC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM;MACzB,IAAI,IAAI,CAACJ,SAAS,CAACK,QAAQ,CAAC,WAAW,CAAC,IAAI,CAACF,IAAI,CAACG,IAAI,IAAIH,IAAI,CAACG,IAAI,IAAI,IAAI,CAACN,SAAS,CAACK,QAAQ,CAACF,IAAI,CAACG,IAAI,CAAC,EAAE;QACzG,IAAI,CAACP,IAAI,CAACQ,aAAa,CAAC,CAAC;MAC3B;IACF,CAAC;IACD,CAAC,IAAI,CAACR,IAAI,GAAGA,IAAI,EAAES,aAAa,CAAC,IAAI,CAAC;IACtC,IAAI,CAACR,SAAS,GAAGA,SAAS;EAC5B;EACAS,cAAcA,CAAA,EAAG;IACf,OAAO,CAAC,GAAG,IAAI,CAACV,IAAI,CAACW,UAAU,CAAC,CAACC,IAAI,CAAEC,IAAI,IAAK;MAC9C,IAAIA,IAAI,CAACC,QAAQ,KAAKD,IAAI,CAACE,SAAS,IAAIF,IAAI,CAACG,WAAW,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;QACtE,OAAO,IAAI;MACb;MACA,IAAIJ,IAAI,CAACC,QAAQ,KAAKD,IAAI,CAACK,YAAY,EAAE;QACvC,MAAMC,EAAE,GAAGN,IAAI;QACf,MAAMO,OAAO,GAAGD,EAAE,CAACC,OAAO,CAACC,WAAW,CAAC,CAAC;QACxC,IAAID,OAAO,KAAK,oBAAoB,EAAE;UACpC,OAAO,KAAK;QACd;QACA,IAAI,CAACD,EAAE,CAACG,YAAY,CAAC,MAAM,CAAC,EAAE;UAC5B,OAAO,IAAI;QACb;MACF;MACA,OAAO,KAAK;IACd,CAAC,CAAC;EACJ;EACAC,YAAYA,CAAChB,IAAI,EAAE;IACjB,OAAO,IAAI,CAACP,IAAI,CAACwB,aAAa,CAAC,mBAAmBjB,IAAI,IAAI,CAAC,KAAK,IAAI;EACtE;EACAkB,IAAIA,CAACC,QAAQ,EAAE;IACb,OAAOA,QAAQ,KAAK,WAAW,GAAG,IAAI,CAAChB,cAAc,CAAC,CAAC,GAAG,IAAI,CAACa,YAAY,CAACG,QAAQ,CAAC;EACvF;EACAC,aAAaA,CAAA,EAAG;IACd,IAAI,CAAC3B,IAAI,CAAC4B,UAAU,CAACC,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAAC3B,gBAAgB,CAAC;EAC5E;EACA4B,gBAAgBA,CAAA,EAAG;IACjB,IAAI,CAAC9B,IAAI,CAAC4B,UAAU,CAACG,mBAAmB,CAAC,YAAY,EAAE,IAAI,CAAC7B,gBAAgB,CAAC;EAC/E;AACF,CAAC;AACD,SAAS8B,cAAcA,CAAC5B,IAAI,EAAE;EAC5B,IAAI,CAACA,IAAI,EAAE;IACT,OAAO,EAAE;EACX;EACA,MAAM6B,KAAK,GAAG7B,IAAI,CAAC8B,aAAa,CAAC;IAAEC,OAAO,EAAE;EAAK,CAAC,CAAC;EACnD,IAAIC,IAAI,GAAG,EAAE;EACb,CAAC,GAAGH,KAAK,CAAC,CAACI,OAAO,CAAExB,IAAI,IAAK;IAC3B,IAAIA,IAAI,CAACC,QAAQ,KAAKwB,IAAI,CAACvB,SAAS,EAAE;MACpCqB,IAAI,IAAIvB,IAAI,CAACG,WAAW;IAC1B;EACF,CAAC,CAAC;EACF,OAAOoB,IAAI;AACb;AAEA,SACEtC,iBAAiB,EACjBkC,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}