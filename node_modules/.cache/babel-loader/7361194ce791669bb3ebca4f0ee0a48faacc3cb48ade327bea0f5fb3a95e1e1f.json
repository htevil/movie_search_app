{"ast":null,"code":"import { SlVisuallyHidden } from \"./chunk.3N7QX4PF.js\";\nimport { SlInput } from \"./chunk.5LELDSAA.js\";\nimport { drag } from \"./chunk.ESELY2US.js\";\nimport { SlDropdown } from \"./chunk.ZXJUHGOS.js\";\nimport { defaultValue } from \"./chunk.GI7VDIWX.js\";\nimport { color_picker_styles_default } from \"./chunk.O6CEROC7.js\";\nimport { clamp } from \"./chunk.HF7GESMZ.js\";\nimport { SlButton } from \"./chunk.MR6SHCJO.js\";\nimport { FormControlController } from \"./chunk.KWPBDQ6I.js\";\nimport { SlButtonGroup } from \"./chunk.AKN2SAUH.js\";\nimport { LocalizeController } from \"./chunk.WLV3FVBR.js\";\nimport { SlIcon } from \"./chunk.ALSPWWWG.js\";\nimport { watch } from \"./chunk.2FB5TK5H.js\";\nimport { component_styles_default } from \"./chunk.TUVJKY7S.js\";\nimport { ShoelaceElement } from \"./chunk.5THGRZAA.js\";\nimport { __decorateClass } from \"./chunk.IFDWM6P4.js\";\n\n// src/components/color-picker/color-picker.component.ts\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { eventOptions, property, query, state } from \"lit/decorators.js\";\nimport { html } from \"lit\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport { styleMap } from \"lit/directives/style-map.js\";\nimport { TinyColor } from \"@ctrl/tinycolor\";\nvar hasEyeDropper = \"EyeDropper\" in window;\nvar SlColorPicker = class extends ShoelaceElement {\n  constructor() {\n    super();\n    this.formControlController = new FormControlController(this);\n    this.isSafeValue = false;\n    this.localize = new LocalizeController(this);\n    this.hasFocus = false;\n    this.isDraggingGridHandle = false;\n    this.isEmpty = false;\n    this.inputValue = \"\";\n    this.hue = 0;\n    this.saturation = 100;\n    this.brightness = 100;\n    this.alpha = 100;\n    this.value = \"\";\n    this.defaultValue = \"\";\n    this.label = \"\";\n    this.format = \"hex\";\n    this.inline = false;\n    this.size = \"medium\";\n    this.noFormatToggle = false;\n    this.name = \"\";\n    this.disabled = false;\n    this.hoist = false;\n    this.opacity = false;\n    this.uppercase = false;\n    this.swatches = \"\";\n    this.form = \"\";\n    this.required = false;\n    this.handleFocusIn = () => {\n      this.hasFocus = true;\n      this.emit(\"sl-focus\");\n    };\n    this.handleFocusOut = () => {\n      this.hasFocus = false;\n      this.emit(\"sl-blur\");\n    };\n    this.addEventListener(\"focusin\", this.handleFocusIn);\n    this.addEventListener(\"focusout\", this.handleFocusOut);\n  }\n  /** Gets the validity state object */\n  get validity() {\n    return this.input.validity;\n  }\n  /** Gets the validation message */\n  get validationMessage() {\n    return this.input.validationMessage;\n  }\n  firstUpdated() {\n    this.input.updateComplete.then(() => {\n      this.formControlController.updateValidity();\n    });\n  }\n  handleCopy() {\n    this.input.select();\n    document.execCommand(\"copy\");\n    this.previewButton.focus();\n    this.previewButton.classList.add(\"color-picker__preview-color--copied\");\n    this.previewButton.addEventListener(\"animationend\", () => {\n      this.previewButton.classList.remove(\"color-picker__preview-color--copied\");\n    });\n  }\n  handleFormatToggle() {\n    const formats = [\"hex\", \"rgb\", \"hsl\", \"hsv\"];\n    const nextIndex = (formats.indexOf(this.format) + 1) % formats.length;\n    this.format = formats[nextIndex];\n    this.setColor(this.value);\n    this.emit(\"sl-change\");\n    this.emit(\"sl-input\");\n  }\n  handleAlphaDrag(event) {\n    const container = this.shadowRoot.querySelector(\".color-picker__slider.color-picker__alpha\");\n    const handle = container.querySelector(\".color-picker__slider-handle\");\n    const {\n      width\n    } = container.getBoundingClientRect();\n    let initialValue = this.value;\n    let currentValue = this.value;\n    handle.focus();\n    event.preventDefault();\n    drag(container, {\n      onMove: x => {\n        this.alpha = clamp(x / width * 100, 0, 100);\n        this.syncValues();\n        if (this.value !== currentValue) {\n          currentValue = this.value;\n          this.emit(\"sl-input\");\n        }\n      },\n      onStop: () => {\n        if (this.value !== initialValue) {\n          initialValue = this.value;\n          this.emit(\"sl-change\");\n        }\n      },\n      initialEvent: event\n    });\n  }\n  handleHueDrag(event) {\n    const container = this.shadowRoot.querySelector(\".color-picker__slider.color-picker__hue\");\n    const handle = container.querySelector(\".color-picker__slider-handle\");\n    const {\n      width\n    } = container.getBoundingClientRect();\n    let initialValue = this.value;\n    let currentValue = this.value;\n    handle.focus();\n    event.preventDefault();\n    drag(container, {\n      onMove: x => {\n        this.hue = clamp(x / width * 360, 0, 360);\n        this.syncValues();\n        if (this.value !== currentValue) {\n          currentValue = this.value;\n          this.emit(\"sl-input\");\n        }\n      },\n      onStop: () => {\n        if (this.value !== initialValue) {\n          initialValue = this.value;\n          this.emit(\"sl-change\");\n        }\n      },\n      initialEvent: event\n    });\n  }\n  handleGridDrag(event) {\n    const grid = this.shadowRoot.querySelector(\".color-picker__grid\");\n    const handle = grid.querySelector(\".color-picker__grid-handle\");\n    const {\n      width,\n      height\n    } = grid.getBoundingClientRect();\n    let initialValue = this.value;\n    let currentValue = this.value;\n    handle.focus();\n    event.preventDefault();\n    this.isDraggingGridHandle = true;\n    drag(grid, {\n      onMove: (x, y) => {\n        this.saturation = clamp(x / width * 100, 0, 100);\n        this.brightness = clamp(100 - y / height * 100, 0, 100);\n        this.syncValues();\n        if (this.value !== currentValue) {\n          currentValue = this.value;\n          this.emit(\"sl-input\");\n        }\n      },\n      onStop: () => {\n        this.isDraggingGridHandle = false;\n        if (this.value !== initialValue) {\n          initialValue = this.value;\n          this.emit(\"sl-change\");\n        }\n      },\n      initialEvent: event\n    });\n  }\n  handleAlphaKeyDown(event) {\n    const increment = event.shiftKey ? 10 : 1;\n    const oldValue = this.value;\n    if (event.key === \"ArrowLeft\") {\n      event.preventDefault();\n      this.alpha = clamp(this.alpha - increment, 0, 100);\n      this.syncValues();\n    }\n    if (event.key === \"ArrowRight\") {\n      event.preventDefault();\n      this.alpha = clamp(this.alpha + increment, 0, 100);\n      this.syncValues();\n    }\n    if (event.key === \"Home\") {\n      event.preventDefault();\n      this.alpha = 0;\n      this.syncValues();\n    }\n    if (event.key === \"End\") {\n      event.preventDefault();\n      this.alpha = 100;\n      this.syncValues();\n    }\n    if (this.value !== oldValue) {\n      this.emit(\"sl-change\");\n      this.emit(\"sl-input\");\n    }\n  }\n  handleHueKeyDown(event) {\n    const increment = event.shiftKey ? 10 : 1;\n    const oldValue = this.value;\n    if (event.key === \"ArrowLeft\") {\n      event.preventDefault();\n      this.hue = clamp(this.hue - increment, 0, 360);\n      this.syncValues();\n    }\n    if (event.key === \"ArrowRight\") {\n      event.preventDefault();\n      this.hue = clamp(this.hue + increment, 0, 360);\n      this.syncValues();\n    }\n    if (event.key === \"Home\") {\n      event.preventDefault();\n      this.hue = 0;\n      this.syncValues();\n    }\n    if (event.key === \"End\") {\n      event.preventDefault();\n      this.hue = 360;\n      this.syncValues();\n    }\n    if (this.value !== oldValue) {\n      this.emit(\"sl-change\");\n      this.emit(\"sl-input\");\n    }\n  }\n  handleGridKeyDown(event) {\n    const increment = event.shiftKey ? 10 : 1;\n    const oldValue = this.value;\n    if (event.key === \"ArrowLeft\") {\n      event.preventDefault();\n      this.saturation = clamp(this.saturation - increment, 0, 100);\n      this.syncValues();\n    }\n    if (event.key === \"ArrowRight\") {\n      event.preventDefault();\n      this.saturation = clamp(this.saturation + increment, 0, 100);\n      this.syncValues();\n    }\n    if (event.key === \"ArrowUp\") {\n      event.preventDefault();\n      this.brightness = clamp(this.brightness + increment, 0, 100);\n      this.syncValues();\n    }\n    if (event.key === \"ArrowDown\") {\n      event.preventDefault();\n      this.brightness = clamp(this.brightness - increment, 0, 100);\n      this.syncValues();\n    }\n    if (this.value !== oldValue) {\n      this.emit(\"sl-change\");\n      this.emit(\"sl-input\");\n    }\n  }\n  handleInputChange(event) {\n    const target = event.target;\n    const oldValue = this.value;\n    event.stopPropagation();\n    if (this.input.value) {\n      this.setColor(target.value);\n      target.value = this.value;\n    } else {\n      this.value = \"\";\n    }\n    if (this.value !== oldValue) {\n      this.emit(\"sl-change\");\n      this.emit(\"sl-input\");\n    }\n  }\n  handleInputInput(event) {\n    this.formControlController.updateValidity();\n    event.stopPropagation();\n  }\n  handleInputKeyDown(event) {\n    if (event.key === \"Enter\") {\n      const oldValue = this.value;\n      if (this.input.value) {\n        this.setColor(this.input.value);\n        this.input.value = this.value;\n        if (this.value !== oldValue) {\n          this.emit(\"sl-change\");\n          this.emit(\"sl-input\");\n        }\n        setTimeout(() => this.input.select());\n      } else {\n        this.hue = 0;\n      }\n    }\n  }\n  handleInputInvalid(event) {\n    this.formControlController.setValidity(false);\n    this.formControlController.emitInvalidEvent(event);\n  }\n  handleTouchMove(event) {\n    event.preventDefault();\n  }\n  parseColor(colorString) {\n    const color = new TinyColor(colorString);\n    if (!color.isValid) {\n      return null;\n    }\n    const hslColor = color.toHsl();\n    const hsl = {\n      h: hslColor.h,\n      s: hslColor.s * 100,\n      l: hslColor.l * 100,\n      a: hslColor.a\n    };\n    const rgb = color.toRgb();\n    const hex = color.toHexString();\n    const hexa = color.toHex8String();\n    const hsvColor = color.toHsv();\n    const hsv = {\n      h: hsvColor.h,\n      s: hsvColor.s * 100,\n      v: hsvColor.v * 100,\n      a: hsvColor.a\n    };\n    return {\n      hsl: {\n        h: hsl.h,\n        s: hsl.s,\n        l: hsl.l,\n        string: this.setLetterCase(`hsl(${Math.round(hsl.h)}, ${Math.round(hsl.s)}%, ${Math.round(hsl.l)}%)`)\n      },\n      hsla: {\n        h: hsl.h,\n        s: hsl.s,\n        l: hsl.l,\n        a: hsl.a,\n        string: this.setLetterCase(`hsla(${Math.round(hsl.h)}, ${Math.round(hsl.s)}%, ${Math.round(hsl.l)}%, ${hsl.a.toFixed(2).toString()})`)\n      },\n      hsv: {\n        h: hsv.h,\n        s: hsv.s,\n        v: hsv.v,\n        string: this.setLetterCase(`hsv(${Math.round(hsv.h)}, ${Math.round(hsv.s)}%, ${Math.round(hsv.v)}%)`)\n      },\n      hsva: {\n        h: hsv.h,\n        s: hsv.s,\n        v: hsv.v,\n        a: hsv.a,\n        string: this.setLetterCase(`hsva(${Math.round(hsv.h)}, ${Math.round(hsv.s)}%, ${Math.round(hsv.v)}%, ${hsv.a.toFixed(2).toString()})`)\n      },\n      rgb: {\n        r: rgb.r,\n        g: rgb.g,\n        b: rgb.b,\n        string: this.setLetterCase(`rgb(${Math.round(rgb.r)}, ${Math.round(rgb.g)}, ${Math.round(rgb.b)})`)\n      },\n      rgba: {\n        r: rgb.r,\n        g: rgb.g,\n        b: rgb.b,\n        a: rgb.a,\n        string: this.setLetterCase(`rgba(${Math.round(rgb.r)}, ${Math.round(rgb.g)}, ${Math.round(rgb.b)}, ${rgb.a.toFixed(2).toString()})`)\n      },\n      hex: this.setLetterCase(hex),\n      hexa: this.setLetterCase(hexa)\n    };\n  }\n  setColor(colorString) {\n    const newColor = this.parseColor(colorString);\n    if (newColor === null) {\n      return false;\n    }\n    this.hue = newColor.hsva.h;\n    this.saturation = newColor.hsva.s;\n    this.brightness = newColor.hsva.v;\n    this.alpha = this.opacity ? newColor.hsva.a * 100 : 100;\n    this.syncValues();\n    return true;\n  }\n  setLetterCase(string) {\n    if (typeof string !== \"string\") {\n      return \"\";\n    }\n    return this.uppercase ? string.toUpperCase() : string.toLowerCase();\n  }\n  async syncValues() {\n    const currentColor = this.parseColor(`hsva(${this.hue}, ${this.saturation}%, ${this.brightness}%, ${this.alpha / 100})`);\n    if (currentColor === null) {\n      return;\n    }\n    if (this.format === \"hsl\") {\n      this.inputValue = this.opacity ? currentColor.hsla.string : currentColor.hsl.string;\n    } else if (this.format === \"rgb\") {\n      this.inputValue = this.opacity ? currentColor.rgba.string : currentColor.rgb.string;\n    } else if (this.format === \"hsv\") {\n      this.inputValue = this.opacity ? currentColor.hsva.string : currentColor.hsv.string;\n    } else {\n      this.inputValue = this.opacity ? currentColor.hexa : currentColor.hex;\n    }\n    this.isSafeValue = true;\n    this.value = this.inputValue;\n    await this.updateComplete;\n    this.isSafeValue = false;\n  }\n  handleAfterHide() {\n    this.previewButton.classList.remove(\"color-picker__preview-color--copied\");\n  }\n  handleEyeDropper() {\n    if (!hasEyeDropper) {\n      return;\n    }\n    const eyeDropper = new EyeDropper();\n    eyeDropper.open().then(colorSelectionResult => {\n      const oldValue = this.value;\n      this.setColor(colorSelectionResult.sRGBHex);\n      if (this.value !== oldValue) {\n        this.emit(\"sl-change\");\n        this.emit(\"sl-input\");\n      }\n    }).catch(() => {});\n  }\n  selectSwatch(color) {\n    const oldValue = this.value;\n    if (!this.disabled) {\n      this.setColor(color);\n      if (this.value !== oldValue) {\n        this.emit(\"sl-change\");\n        this.emit(\"sl-input\");\n      }\n    }\n  }\n  /** Generates a hex string from HSV values. Hue must be 0-360. All other arguments must be 0-100. */\n  getHexString(hue, saturation, brightness, alpha = 100) {\n    const color = new TinyColor(`hsva(${hue}, ${saturation}%, ${brightness}%, ${alpha / 100})`);\n    if (!color.isValid) {\n      return \"\";\n    }\n    return color.toHex8String();\n  }\n  // Prevents nested components from leaking events\n  stopNestedEventPropagation(event) {\n    event.stopImmediatePropagation();\n  }\n  handleFormatChange() {\n    this.syncValues();\n  }\n  handleOpacityChange() {\n    this.alpha = 100;\n  }\n  handleValueChange(oldValue, newValue) {\n    this.isEmpty = !newValue;\n    if (!newValue) {\n      this.hue = 0;\n      this.saturation = 0;\n      this.brightness = 100;\n      this.alpha = 100;\n    }\n    if (!this.isSafeValue) {\n      const newColor = this.parseColor(newValue);\n      if (newColor !== null) {\n        this.inputValue = this.value;\n        this.hue = newColor.hsva.h;\n        this.saturation = newColor.hsva.s;\n        this.brightness = newColor.hsva.v;\n        this.alpha = newColor.hsva.a * 100;\n        this.syncValues();\n      } else {\n        this.inputValue = oldValue != null ? oldValue : \"\";\n      }\n    }\n  }\n  /** Sets focus on the color picker. */\n  focus(options) {\n    if (this.inline) {\n      this.base.focus(options);\n    } else {\n      this.trigger.focus(options);\n    }\n  }\n  /** Removes focus from the color picker. */\n  blur() {\n    var _a;\n    const elementToBlur = this.inline ? this.base : this.trigger;\n    if (this.hasFocus) {\n      elementToBlur.focus({\n        preventScroll: true\n      });\n      elementToBlur.blur();\n    }\n    if ((_a = this.dropdown) == null ? void 0 : _a.open) {\n      this.dropdown.hide();\n    }\n  }\n  /** Returns the current value as a string in the specified format. */\n  getFormattedValue(format = \"hex\") {\n    const currentColor = this.parseColor(`hsva(${this.hue}, ${this.saturation}%, ${this.brightness}%, ${this.alpha / 100})`);\n    if (currentColor === null) {\n      return \"\";\n    }\n    switch (format) {\n      case \"hex\":\n        return currentColor.hex;\n      case \"hexa\":\n        return currentColor.hexa;\n      case \"rgb\":\n        return currentColor.rgb.string;\n      case \"rgba\":\n        return currentColor.rgba.string;\n      case \"hsl\":\n        return currentColor.hsl.string;\n      case \"hsla\":\n        return currentColor.hsla.string;\n      case \"hsv\":\n        return currentColor.hsv.string;\n      case \"hsva\":\n        return currentColor.hsva.string;\n      default:\n        return \"\";\n    }\n  }\n  /** Checks for validity but does not show a validation message. Returns `true` when valid and `false` when invalid. */\n  checkValidity() {\n    return this.input.checkValidity();\n  }\n  /** Gets the associated form, if one exists. */\n  getForm() {\n    return this.formControlController.getForm();\n  }\n  /** Checks for validity and shows the browser's validation message if the control is invalid. */\n  reportValidity() {\n    if (!this.inline && !this.validity.valid) {\n      this.dropdown.show();\n      this.addEventListener(\"sl-after-show\", () => this.input.reportValidity(), {\n        once: true\n      });\n      if (!this.disabled) {\n        this.formControlController.emitInvalidEvent();\n      }\n      return false;\n    }\n    return this.input.reportValidity();\n  }\n  /** Sets a custom validation message. Pass an empty string to restore validity. */\n  setCustomValidity(message) {\n    this.input.setCustomValidity(message);\n    this.formControlController.updateValidity();\n  }\n  render() {\n    const gridHandleX = this.saturation;\n    const gridHandleY = 100 - this.brightness;\n    const swatches = Array.isArray(this.swatches) ? this.swatches : this.swatches.split(\";\").filter(color => color.trim() !== \"\");\n    const colorPicker = html`\n      <div\n        part=\"base\"\n        class=${classMap({\n      \"color-picker\": true,\n      \"color-picker--inline\": this.inline,\n      \"color-picker--disabled\": this.disabled,\n      \"color-picker--focused\": this.hasFocus\n    })}\n        aria-disabled=${this.disabled ? \"true\" : \"false\"}\n        aria-labelledby=\"label\"\n        tabindex=${this.inline ? \"0\" : \"-1\"}\n      >\n        ${this.inline ? html`\n              <sl-visually-hidden id=\"label\">\n                <slot name=\"label\">${this.label}</slot>\n              </sl-visually-hidden>\n            ` : null}\n\n        <div\n          part=\"grid\"\n          class=\"color-picker__grid\"\n          style=${styleMap({\n      backgroundColor: this.getHexString(this.hue, 100, 100)\n    })}\n          @pointerdown=${this.handleGridDrag}\n          @touchmove=${this.handleTouchMove}\n        >\n          <span\n            part=\"grid-handle\"\n            class=${classMap({\n      \"color-picker__grid-handle\": true,\n      \"color-picker__grid-handle--dragging\": this.isDraggingGridHandle\n    })}\n            style=${styleMap({\n      top: `${gridHandleY}%`,\n      left: `${gridHandleX}%`,\n      backgroundColor: this.getHexString(this.hue, this.saturation, this.brightness, this.alpha)\n    })}\n            role=\"application\"\n            aria-label=\"HSV\"\n            tabindex=${ifDefined(this.disabled ? void 0 : \"0\")}\n            @keydown=${this.handleGridKeyDown}\n          ></span>\n        </div>\n\n        <div class=\"color-picker__controls\">\n          <div class=\"color-picker__sliders\">\n            <div\n              part=\"slider hue-slider\"\n              class=\"color-picker__hue color-picker__slider\"\n              @pointerdown=${this.handleHueDrag}\n              @touchmove=${this.handleTouchMove}\n            >\n              <span\n                part=\"slider-handle hue-slider-handle\"\n                class=\"color-picker__slider-handle\"\n                style=${styleMap({\n      left: `${this.hue === 0 ? 0 : 100 / (360 / this.hue)}%`\n    })}\n                role=\"slider\"\n                aria-label=\"hue\"\n                aria-orientation=\"horizontal\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"360\"\n                aria-valuenow=${`${Math.round(this.hue)}`}\n                tabindex=${ifDefined(this.disabled ? void 0 : \"0\")}\n                @keydown=${this.handleHueKeyDown}\n              ></span>\n            </div>\n\n            ${this.opacity ? html`\n                  <div\n                    part=\"slider opacity-slider\"\n                    class=\"color-picker__alpha color-picker__slider color-picker__transparent-bg\"\n                    @pointerdown=\"${this.handleAlphaDrag}\"\n                    @touchmove=${this.handleTouchMove}\n                  >\n                    <div\n                      class=\"color-picker__alpha-gradient\"\n                      style=${styleMap({\n      backgroundImage: `linear-gradient(\n                          to right,\n                          ${this.getHexString(this.hue, this.saturation, this.brightness, 0)} 0%,\n                          ${this.getHexString(this.hue, this.saturation, this.brightness, 100)} 100%\n                        )`\n    })}\n                    ></div>\n                    <span\n                      part=\"slider-handle opacity-slider-handle\"\n                      class=\"color-picker__slider-handle\"\n                      style=${styleMap({\n      left: `${this.alpha}%`\n    })}\n                      role=\"slider\"\n                      aria-label=\"alpha\"\n                      aria-orientation=\"horizontal\"\n                      aria-valuemin=\"0\"\n                      aria-valuemax=\"100\"\n                      aria-valuenow=${Math.round(this.alpha)}\n                      tabindex=${ifDefined(this.disabled ? void 0 : \"0\")}\n                      @keydown=${this.handleAlphaKeyDown}\n                    ></span>\n                  </div>\n                ` : \"\"}\n          </div>\n\n          <button\n            type=\"button\"\n            part=\"preview\"\n            class=\"color-picker__preview color-picker__transparent-bg\"\n            aria-label=${this.localize.term(\"copy\")}\n            style=${styleMap({\n      \"--preview-color\": this.getHexString(this.hue, this.saturation, this.brightness, this.alpha)\n    })}\n            @click=${this.handleCopy}\n          ></button>\n        </div>\n\n        <div class=\"color-picker__user-input\" aria-live=\"polite\">\n          <sl-input\n            part=\"input\"\n            type=\"text\"\n            name=${this.name}\n            autocomplete=\"off\"\n            autocorrect=\"off\"\n            autocapitalize=\"off\"\n            spellcheck=\"false\"\n            value=${this.isEmpty ? \"\" : this.inputValue}\n            ?required=${this.required}\n            ?disabled=${this.disabled}\n            aria-label=${this.localize.term(\"currentValue\")}\n            @keydown=${this.handleInputKeyDown}\n            @sl-change=${this.handleInputChange}\n            @sl-input=${this.handleInputInput}\n            @sl-invalid=${this.handleInputInvalid}\n            @sl-blur=${this.stopNestedEventPropagation}\n            @sl-focus=${this.stopNestedEventPropagation}\n          ></sl-input>\n\n          <sl-button-group>\n            ${!this.noFormatToggle ? html`\n                  <sl-button\n                    part=\"format-button\"\n                    aria-label=${this.localize.term(\"toggleColorFormat\")}\n                    exportparts=\"\n                      base:format-button__base,\n                      prefix:format-button__prefix,\n                      label:format-button__label,\n                      suffix:format-button__suffix,\n                      caret:format-button__caret\n                    \"\n                    @click=${this.handleFormatToggle}\n                    @sl-blur=${this.stopNestedEventPropagation}\n                    @sl-focus=${this.stopNestedEventPropagation}\n                  >\n                    ${this.setLetterCase(this.format)}\n                  </sl-button>\n                ` : \"\"}\n            ${hasEyeDropper ? html`\n                  <sl-button\n                    part=\"eye-dropper-button\"\n                    exportparts=\"\n                      base:eye-dropper-button__base,\n                      prefix:eye-dropper-button__prefix,\n                      label:eye-dropper-button__label,\n                      suffix:eye-dropper-button__suffix,\n                      caret:eye-dropper-button__caret\n                    \"\n                    @click=${this.handleEyeDropper}\n                    @sl-blur=${this.stopNestedEventPropagation}\n                    @sl-focus=${this.stopNestedEventPropagation}\n                  >\n                    <sl-icon\n                      library=\"system\"\n                      name=\"eyedropper\"\n                      label=${this.localize.term(\"selectAColorFromTheScreen\")}\n                    ></sl-icon>\n                  </sl-button>\n                ` : \"\"}\n          </sl-button-group>\n        </div>\n\n        ${swatches.length > 0 ? html`\n              <div part=\"swatches\" class=\"color-picker__swatches\">\n                ${swatches.map(swatch => {\n      const parsedColor = this.parseColor(swatch);\n      if (!parsedColor) {\n        console.error(`Unable to parse swatch color: \"${swatch}\"`, this);\n        return \"\";\n      }\n      return html`\n                    <div\n                      part=\"swatch\"\n                      class=\"color-picker__swatch color-picker__transparent-bg\"\n                      tabindex=${ifDefined(this.disabled ? void 0 : \"0\")}\n                      role=\"button\"\n                      aria-label=${swatch}\n                      @click=${() => this.selectSwatch(swatch)}\n                      @keydown=${event => !this.disabled && event.key === \"Enter\" && this.setColor(parsedColor.hexa)}\n                    >\n                      <div\n                        class=\"color-picker__swatch-color\"\n                        style=${styleMap({\n        backgroundColor: parsedColor.hexa\n      })}\n                      ></div>\n                    </div>\n                  `;\n    })}\n              </div>\n            ` : \"\"}\n      </div>\n    `;\n    if (this.inline) {\n      return colorPicker;\n    }\n    return html`\n      <sl-dropdown\n        class=\"color-dropdown\"\n        aria-disabled=${this.disabled ? \"true\" : \"false\"}\n        .containing-element=${this}\n        ?disabled=${this.disabled}\n        ?hoist=${this.hoist}\n        @sl-after-hide=${this.handleAfterHide}\n      >\n        <button\n          part=\"trigger\"\n          slot=\"trigger\"\n          class=${classMap({\n      \"color-dropdown__trigger\": true,\n      \"color-dropdown__trigger--disabled\": this.disabled,\n      \"color-dropdown__trigger--small\": this.size === \"small\",\n      \"color-dropdown__trigger--medium\": this.size === \"medium\",\n      \"color-dropdown__trigger--large\": this.size === \"large\",\n      \"color-dropdown__trigger--empty\": this.isEmpty,\n      \"color-dropdown__trigger--focused\": this.hasFocus,\n      \"color-picker__transparent-bg\": true\n    })}\n          style=${styleMap({\n      color: this.getHexString(this.hue, this.saturation, this.brightness, this.alpha)\n    })}\n          type=\"button\"\n        >\n          <sl-visually-hidden>\n            <slot name=\"label\">${this.label}</slot>\n          </sl-visually-hidden>\n        </button>\n        ${colorPicker}\n      </sl-dropdown>\n    `;\n  }\n};\nSlColorPicker.styles = [component_styles_default, color_picker_styles_default];\nSlColorPicker.dependencies = {\n  \"sl-button-group\": SlButtonGroup,\n  \"sl-button\": SlButton,\n  \"sl-dropdown\": SlDropdown,\n  \"sl-icon\": SlIcon,\n  \"sl-input\": SlInput,\n  \"sl-visually-hidden\": SlVisuallyHidden\n};\n__decorateClass([query('[part~=\"base\"]')], SlColorPicker.prototype, \"base\", 2);\n__decorateClass([query('[part~=\"input\"]')], SlColorPicker.prototype, \"input\", 2);\n__decorateClass([query(\".color-dropdown\")], SlColorPicker.prototype, \"dropdown\", 2);\n__decorateClass([query('[part~=\"preview\"]')], SlColorPicker.prototype, \"previewButton\", 2);\n__decorateClass([query('[part~=\"trigger\"]')], SlColorPicker.prototype, \"trigger\", 2);\n__decorateClass([state()], SlColorPicker.prototype, \"hasFocus\", 2);\n__decorateClass([state()], SlColorPicker.prototype, \"isDraggingGridHandle\", 2);\n__decorateClass([state()], SlColorPicker.prototype, \"isEmpty\", 2);\n__decorateClass([state()], SlColorPicker.prototype, \"inputValue\", 2);\n__decorateClass([state()], SlColorPicker.prototype, \"hue\", 2);\n__decorateClass([state()], SlColorPicker.prototype, \"saturation\", 2);\n__decorateClass([state()], SlColorPicker.prototype, \"brightness\", 2);\n__decorateClass([state()], SlColorPicker.prototype, \"alpha\", 2);\n__decorateClass([property()], SlColorPicker.prototype, \"value\", 2);\n__decorateClass([defaultValue()], SlColorPicker.prototype, \"defaultValue\", 2);\n__decorateClass([property()], SlColorPicker.prototype, \"label\", 2);\n__decorateClass([property()], SlColorPicker.prototype, \"format\", 2);\n__decorateClass([property({\n  type: Boolean,\n  reflect: true\n})], SlColorPicker.prototype, \"inline\", 2);\n__decorateClass([property({\n  reflect: true\n})], SlColorPicker.prototype, \"size\", 2);\n__decorateClass([property({\n  attribute: \"no-format-toggle\",\n  type: Boolean\n})], SlColorPicker.prototype, \"noFormatToggle\", 2);\n__decorateClass([property()], SlColorPicker.prototype, \"name\", 2);\n__decorateClass([property({\n  type: Boolean,\n  reflect: true\n})], SlColorPicker.prototype, \"disabled\", 2);\n__decorateClass([property({\n  type: Boolean\n})], SlColorPicker.prototype, \"hoist\", 2);\n__decorateClass([property({\n  type: Boolean\n})], SlColorPicker.prototype, \"opacity\", 2);\n__decorateClass([property({\n  type: Boolean\n})], SlColorPicker.prototype, \"uppercase\", 2);\n__decorateClass([property()], SlColorPicker.prototype, \"swatches\", 2);\n__decorateClass([property({\n  reflect: true\n})], SlColorPicker.prototype, \"form\", 2);\n__decorateClass([property({\n  type: Boolean,\n  reflect: true\n})], SlColorPicker.prototype, \"required\", 2);\n__decorateClass([eventOptions({\n  passive: false\n})], SlColorPicker.prototype, \"handleTouchMove\", 1);\n__decorateClass([watch(\"format\", {\n  waitUntilFirstUpdate: true\n})], SlColorPicker.prototype, \"handleFormatChange\", 1);\n__decorateClass([watch(\"opacity\", {\n  waitUntilFirstUpdate: true\n})], SlColorPicker.prototype, \"handleOpacityChange\", 1);\n__decorateClass([watch(\"value\")], SlColorPicker.prototype, \"handleValueChange\", 1);\nexport { SlColorPicker };","map":{"version":3,"names":["SlVisuallyHidden","SlInput","drag","SlDropdown","defaultValue","color_picker_styles_default","clamp","SlButton","FormControlController","SlButtonGroup","LocalizeController","SlIcon","watch","component_styles_default","ShoelaceElement","__decorateClass","classMap","eventOptions","property","query","state","html","ifDefined","styleMap","TinyColor","hasEyeDropper","window","SlColorPicker","constructor","formControlController","isSafeValue","localize","hasFocus","isDraggingGridHandle","isEmpty","inputValue","hue","saturation","brightness","alpha","value","label","format","inline","size","noFormatToggle","name","disabled","hoist","opacity","uppercase","swatches","form","required","handleFocusIn","emit","handleFocusOut","addEventListener","validity","input","validationMessage","firstUpdated","updateComplete","then","updateValidity","handleCopy","select","document","execCommand","previewButton","focus","classList","add","remove","handleFormatToggle","formats","nextIndex","indexOf","length","setColor","handleAlphaDrag","event","container","shadowRoot","querySelector","handle","width","getBoundingClientRect","initialValue","currentValue","preventDefault","onMove","x","syncValues","onStop","initialEvent","handleHueDrag","handleGridDrag","grid","height","y","handleAlphaKeyDown","increment","shiftKey","oldValue","key","handleHueKeyDown","handleGridKeyDown","handleInputChange","target","stopPropagation","handleInputInput","handleInputKeyDown","setTimeout","handleInputInvalid","setValidity","emitInvalidEvent","handleTouchMove","parseColor","colorString","color","isValid","hslColor","toHsl","hsl","h","s","l","a","rgb","toRgb","hex","toHexString","hexa","toHex8String","hsvColor","toHsv","hsv","v","string","setLetterCase","Math","round","hsla","toFixed","toString","hsva","r","g","b","rgba","newColor","toUpperCase","toLowerCase","currentColor","handleAfterHide","handleEyeDropper","eyeDropper","EyeDropper","open","colorSelectionResult","sRGBHex","catch","selectSwatch","getHexString","stopNestedEventPropagation","stopImmediatePropagation","handleFormatChange","handleOpacityChange","handleValueChange","newValue","options","base","trigger","blur","_a","elementToBlur","preventScroll","dropdown","hide","getFormattedValue","checkValidity","getForm","reportValidity","valid","show","once","setCustomValidity","message","render","gridHandleX","gridHandleY","Array","isArray","split","filter","trim","colorPicker","backgroundColor","top","left","backgroundImage","term","map","swatch","parsedColor","console","error","styles","dependencies","prototype","type","Boolean","reflect","attribute","passive","waitUntilFirstUpdate"],"sources":["C:/Users/ASUS/Project/Web Project/Greekforgreek_project/React project/movie_search_app/node_modules/@shoelace-style/shoelace/dist/chunks/chunk.6UIVKIPN.js"],"sourcesContent":["import {\n  SlVisuallyHidden\n} from \"./chunk.3N7QX4PF.js\";\nimport {\n  SlInput\n} from \"./chunk.5LELDSAA.js\";\nimport {\n  drag\n} from \"./chunk.ESELY2US.js\";\nimport {\n  SlDropdown\n} from \"./chunk.ZXJUHGOS.js\";\nimport {\n  defaultValue\n} from \"./chunk.GI7VDIWX.js\";\nimport {\n  color_picker_styles_default\n} from \"./chunk.O6CEROC7.js\";\nimport {\n  clamp\n} from \"./chunk.HF7GESMZ.js\";\nimport {\n  SlButton\n} from \"./chunk.MR6SHCJO.js\";\nimport {\n  FormControlController\n} from \"./chunk.KWPBDQ6I.js\";\nimport {\n  SlButtonGroup\n} from \"./chunk.AKN2SAUH.js\";\nimport {\n  LocalizeController\n} from \"./chunk.WLV3FVBR.js\";\nimport {\n  SlIcon\n} from \"./chunk.ALSPWWWG.js\";\nimport {\n  watch\n} from \"./chunk.2FB5TK5H.js\";\nimport {\n  component_styles_default\n} from \"./chunk.TUVJKY7S.js\";\nimport {\n  ShoelaceElement\n} from \"./chunk.5THGRZAA.js\";\nimport {\n  __decorateClass\n} from \"./chunk.IFDWM6P4.js\";\n\n// src/components/color-picker/color-picker.component.ts\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { eventOptions, property, query, state } from \"lit/decorators.js\";\nimport { html } from \"lit\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport { styleMap } from \"lit/directives/style-map.js\";\nimport { TinyColor } from \"@ctrl/tinycolor\";\nvar hasEyeDropper = \"EyeDropper\" in window;\nvar SlColorPicker = class extends ShoelaceElement {\n  constructor() {\n    super();\n    this.formControlController = new FormControlController(this);\n    this.isSafeValue = false;\n    this.localize = new LocalizeController(this);\n    this.hasFocus = false;\n    this.isDraggingGridHandle = false;\n    this.isEmpty = false;\n    this.inputValue = \"\";\n    this.hue = 0;\n    this.saturation = 100;\n    this.brightness = 100;\n    this.alpha = 100;\n    this.value = \"\";\n    this.defaultValue = \"\";\n    this.label = \"\";\n    this.format = \"hex\";\n    this.inline = false;\n    this.size = \"medium\";\n    this.noFormatToggle = false;\n    this.name = \"\";\n    this.disabled = false;\n    this.hoist = false;\n    this.opacity = false;\n    this.uppercase = false;\n    this.swatches = \"\";\n    this.form = \"\";\n    this.required = false;\n    this.handleFocusIn = () => {\n      this.hasFocus = true;\n      this.emit(\"sl-focus\");\n    };\n    this.handleFocusOut = () => {\n      this.hasFocus = false;\n      this.emit(\"sl-blur\");\n    };\n    this.addEventListener(\"focusin\", this.handleFocusIn);\n    this.addEventListener(\"focusout\", this.handleFocusOut);\n  }\n  /** Gets the validity state object */\n  get validity() {\n    return this.input.validity;\n  }\n  /** Gets the validation message */\n  get validationMessage() {\n    return this.input.validationMessage;\n  }\n  firstUpdated() {\n    this.input.updateComplete.then(() => {\n      this.formControlController.updateValidity();\n    });\n  }\n  handleCopy() {\n    this.input.select();\n    document.execCommand(\"copy\");\n    this.previewButton.focus();\n    this.previewButton.classList.add(\"color-picker__preview-color--copied\");\n    this.previewButton.addEventListener(\"animationend\", () => {\n      this.previewButton.classList.remove(\"color-picker__preview-color--copied\");\n    });\n  }\n  handleFormatToggle() {\n    const formats = [\"hex\", \"rgb\", \"hsl\", \"hsv\"];\n    const nextIndex = (formats.indexOf(this.format) + 1) % formats.length;\n    this.format = formats[nextIndex];\n    this.setColor(this.value);\n    this.emit(\"sl-change\");\n    this.emit(\"sl-input\");\n  }\n  handleAlphaDrag(event) {\n    const container = this.shadowRoot.querySelector(\".color-picker__slider.color-picker__alpha\");\n    const handle = container.querySelector(\".color-picker__slider-handle\");\n    const { width } = container.getBoundingClientRect();\n    let initialValue = this.value;\n    let currentValue = this.value;\n    handle.focus();\n    event.preventDefault();\n    drag(container, {\n      onMove: (x) => {\n        this.alpha = clamp(x / width * 100, 0, 100);\n        this.syncValues();\n        if (this.value !== currentValue) {\n          currentValue = this.value;\n          this.emit(\"sl-input\");\n        }\n      },\n      onStop: () => {\n        if (this.value !== initialValue) {\n          initialValue = this.value;\n          this.emit(\"sl-change\");\n        }\n      },\n      initialEvent: event\n    });\n  }\n  handleHueDrag(event) {\n    const container = this.shadowRoot.querySelector(\".color-picker__slider.color-picker__hue\");\n    const handle = container.querySelector(\".color-picker__slider-handle\");\n    const { width } = container.getBoundingClientRect();\n    let initialValue = this.value;\n    let currentValue = this.value;\n    handle.focus();\n    event.preventDefault();\n    drag(container, {\n      onMove: (x) => {\n        this.hue = clamp(x / width * 360, 0, 360);\n        this.syncValues();\n        if (this.value !== currentValue) {\n          currentValue = this.value;\n          this.emit(\"sl-input\");\n        }\n      },\n      onStop: () => {\n        if (this.value !== initialValue) {\n          initialValue = this.value;\n          this.emit(\"sl-change\");\n        }\n      },\n      initialEvent: event\n    });\n  }\n  handleGridDrag(event) {\n    const grid = this.shadowRoot.querySelector(\".color-picker__grid\");\n    const handle = grid.querySelector(\".color-picker__grid-handle\");\n    const { width, height } = grid.getBoundingClientRect();\n    let initialValue = this.value;\n    let currentValue = this.value;\n    handle.focus();\n    event.preventDefault();\n    this.isDraggingGridHandle = true;\n    drag(grid, {\n      onMove: (x, y) => {\n        this.saturation = clamp(x / width * 100, 0, 100);\n        this.brightness = clamp(100 - y / height * 100, 0, 100);\n        this.syncValues();\n        if (this.value !== currentValue) {\n          currentValue = this.value;\n          this.emit(\"sl-input\");\n        }\n      },\n      onStop: () => {\n        this.isDraggingGridHandle = false;\n        if (this.value !== initialValue) {\n          initialValue = this.value;\n          this.emit(\"sl-change\");\n        }\n      },\n      initialEvent: event\n    });\n  }\n  handleAlphaKeyDown(event) {\n    const increment = event.shiftKey ? 10 : 1;\n    const oldValue = this.value;\n    if (event.key === \"ArrowLeft\") {\n      event.preventDefault();\n      this.alpha = clamp(this.alpha - increment, 0, 100);\n      this.syncValues();\n    }\n    if (event.key === \"ArrowRight\") {\n      event.preventDefault();\n      this.alpha = clamp(this.alpha + increment, 0, 100);\n      this.syncValues();\n    }\n    if (event.key === \"Home\") {\n      event.preventDefault();\n      this.alpha = 0;\n      this.syncValues();\n    }\n    if (event.key === \"End\") {\n      event.preventDefault();\n      this.alpha = 100;\n      this.syncValues();\n    }\n    if (this.value !== oldValue) {\n      this.emit(\"sl-change\");\n      this.emit(\"sl-input\");\n    }\n  }\n  handleHueKeyDown(event) {\n    const increment = event.shiftKey ? 10 : 1;\n    const oldValue = this.value;\n    if (event.key === \"ArrowLeft\") {\n      event.preventDefault();\n      this.hue = clamp(this.hue - increment, 0, 360);\n      this.syncValues();\n    }\n    if (event.key === \"ArrowRight\") {\n      event.preventDefault();\n      this.hue = clamp(this.hue + increment, 0, 360);\n      this.syncValues();\n    }\n    if (event.key === \"Home\") {\n      event.preventDefault();\n      this.hue = 0;\n      this.syncValues();\n    }\n    if (event.key === \"End\") {\n      event.preventDefault();\n      this.hue = 360;\n      this.syncValues();\n    }\n    if (this.value !== oldValue) {\n      this.emit(\"sl-change\");\n      this.emit(\"sl-input\");\n    }\n  }\n  handleGridKeyDown(event) {\n    const increment = event.shiftKey ? 10 : 1;\n    const oldValue = this.value;\n    if (event.key === \"ArrowLeft\") {\n      event.preventDefault();\n      this.saturation = clamp(this.saturation - increment, 0, 100);\n      this.syncValues();\n    }\n    if (event.key === \"ArrowRight\") {\n      event.preventDefault();\n      this.saturation = clamp(this.saturation + increment, 0, 100);\n      this.syncValues();\n    }\n    if (event.key === \"ArrowUp\") {\n      event.preventDefault();\n      this.brightness = clamp(this.brightness + increment, 0, 100);\n      this.syncValues();\n    }\n    if (event.key === \"ArrowDown\") {\n      event.preventDefault();\n      this.brightness = clamp(this.brightness - increment, 0, 100);\n      this.syncValues();\n    }\n    if (this.value !== oldValue) {\n      this.emit(\"sl-change\");\n      this.emit(\"sl-input\");\n    }\n  }\n  handleInputChange(event) {\n    const target = event.target;\n    const oldValue = this.value;\n    event.stopPropagation();\n    if (this.input.value) {\n      this.setColor(target.value);\n      target.value = this.value;\n    } else {\n      this.value = \"\";\n    }\n    if (this.value !== oldValue) {\n      this.emit(\"sl-change\");\n      this.emit(\"sl-input\");\n    }\n  }\n  handleInputInput(event) {\n    this.formControlController.updateValidity();\n    event.stopPropagation();\n  }\n  handleInputKeyDown(event) {\n    if (event.key === \"Enter\") {\n      const oldValue = this.value;\n      if (this.input.value) {\n        this.setColor(this.input.value);\n        this.input.value = this.value;\n        if (this.value !== oldValue) {\n          this.emit(\"sl-change\");\n          this.emit(\"sl-input\");\n        }\n        setTimeout(() => this.input.select());\n      } else {\n        this.hue = 0;\n      }\n    }\n  }\n  handleInputInvalid(event) {\n    this.formControlController.setValidity(false);\n    this.formControlController.emitInvalidEvent(event);\n  }\n  handleTouchMove(event) {\n    event.preventDefault();\n  }\n  parseColor(colorString) {\n    const color = new TinyColor(colorString);\n    if (!color.isValid) {\n      return null;\n    }\n    const hslColor = color.toHsl();\n    const hsl = {\n      h: hslColor.h,\n      s: hslColor.s * 100,\n      l: hslColor.l * 100,\n      a: hslColor.a\n    };\n    const rgb = color.toRgb();\n    const hex = color.toHexString();\n    const hexa = color.toHex8String();\n    const hsvColor = color.toHsv();\n    const hsv = {\n      h: hsvColor.h,\n      s: hsvColor.s * 100,\n      v: hsvColor.v * 100,\n      a: hsvColor.a\n    };\n    return {\n      hsl: {\n        h: hsl.h,\n        s: hsl.s,\n        l: hsl.l,\n        string: this.setLetterCase(`hsl(${Math.round(hsl.h)}, ${Math.round(hsl.s)}%, ${Math.round(hsl.l)}%)`)\n      },\n      hsla: {\n        h: hsl.h,\n        s: hsl.s,\n        l: hsl.l,\n        a: hsl.a,\n        string: this.setLetterCase(\n          `hsla(${Math.round(hsl.h)}, ${Math.round(hsl.s)}%, ${Math.round(hsl.l)}%, ${hsl.a.toFixed(2).toString()})`\n        )\n      },\n      hsv: {\n        h: hsv.h,\n        s: hsv.s,\n        v: hsv.v,\n        string: this.setLetterCase(`hsv(${Math.round(hsv.h)}, ${Math.round(hsv.s)}%, ${Math.round(hsv.v)}%)`)\n      },\n      hsva: {\n        h: hsv.h,\n        s: hsv.s,\n        v: hsv.v,\n        a: hsv.a,\n        string: this.setLetterCase(\n          `hsva(${Math.round(hsv.h)}, ${Math.round(hsv.s)}%, ${Math.round(hsv.v)}%, ${hsv.a.toFixed(2).toString()})`\n        )\n      },\n      rgb: {\n        r: rgb.r,\n        g: rgb.g,\n        b: rgb.b,\n        string: this.setLetterCase(`rgb(${Math.round(rgb.r)}, ${Math.round(rgb.g)}, ${Math.round(rgb.b)})`)\n      },\n      rgba: {\n        r: rgb.r,\n        g: rgb.g,\n        b: rgb.b,\n        a: rgb.a,\n        string: this.setLetterCase(\n          `rgba(${Math.round(rgb.r)}, ${Math.round(rgb.g)}, ${Math.round(rgb.b)}, ${rgb.a.toFixed(2).toString()})`\n        )\n      },\n      hex: this.setLetterCase(hex),\n      hexa: this.setLetterCase(hexa)\n    };\n  }\n  setColor(colorString) {\n    const newColor = this.parseColor(colorString);\n    if (newColor === null) {\n      return false;\n    }\n    this.hue = newColor.hsva.h;\n    this.saturation = newColor.hsva.s;\n    this.brightness = newColor.hsva.v;\n    this.alpha = this.opacity ? newColor.hsva.a * 100 : 100;\n    this.syncValues();\n    return true;\n  }\n  setLetterCase(string) {\n    if (typeof string !== \"string\") {\n      return \"\";\n    }\n    return this.uppercase ? string.toUpperCase() : string.toLowerCase();\n  }\n  async syncValues() {\n    const currentColor = this.parseColor(\n      `hsva(${this.hue}, ${this.saturation}%, ${this.brightness}%, ${this.alpha / 100})`\n    );\n    if (currentColor === null) {\n      return;\n    }\n    if (this.format === \"hsl\") {\n      this.inputValue = this.opacity ? currentColor.hsla.string : currentColor.hsl.string;\n    } else if (this.format === \"rgb\") {\n      this.inputValue = this.opacity ? currentColor.rgba.string : currentColor.rgb.string;\n    } else if (this.format === \"hsv\") {\n      this.inputValue = this.opacity ? currentColor.hsva.string : currentColor.hsv.string;\n    } else {\n      this.inputValue = this.opacity ? currentColor.hexa : currentColor.hex;\n    }\n    this.isSafeValue = true;\n    this.value = this.inputValue;\n    await this.updateComplete;\n    this.isSafeValue = false;\n  }\n  handleAfterHide() {\n    this.previewButton.classList.remove(\"color-picker__preview-color--copied\");\n  }\n  handleEyeDropper() {\n    if (!hasEyeDropper) {\n      return;\n    }\n    const eyeDropper = new EyeDropper();\n    eyeDropper.open().then((colorSelectionResult) => {\n      const oldValue = this.value;\n      this.setColor(colorSelectionResult.sRGBHex);\n      if (this.value !== oldValue) {\n        this.emit(\"sl-change\");\n        this.emit(\"sl-input\");\n      }\n    }).catch(() => {\n    });\n  }\n  selectSwatch(color) {\n    const oldValue = this.value;\n    if (!this.disabled) {\n      this.setColor(color);\n      if (this.value !== oldValue) {\n        this.emit(\"sl-change\");\n        this.emit(\"sl-input\");\n      }\n    }\n  }\n  /** Generates a hex string from HSV values. Hue must be 0-360. All other arguments must be 0-100. */\n  getHexString(hue, saturation, brightness, alpha = 100) {\n    const color = new TinyColor(`hsva(${hue}, ${saturation}%, ${brightness}%, ${alpha / 100})`);\n    if (!color.isValid) {\n      return \"\";\n    }\n    return color.toHex8String();\n  }\n  // Prevents nested components from leaking events\n  stopNestedEventPropagation(event) {\n    event.stopImmediatePropagation();\n  }\n  handleFormatChange() {\n    this.syncValues();\n  }\n  handleOpacityChange() {\n    this.alpha = 100;\n  }\n  handleValueChange(oldValue, newValue) {\n    this.isEmpty = !newValue;\n    if (!newValue) {\n      this.hue = 0;\n      this.saturation = 0;\n      this.brightness = 100;\n      this.alpha = 100;\n    }\n    if (!this.isSafeValue) {\n      const newColor = this.parseColor(newValue);\n      if (newColor !== null) {\n        this.inputValue = this.value;\n        this.hue = newColor.hsva.h;\n        this.saturation = newColor.hsva.s;\n        this.brightness = newColor.hsva.v;\n        this.alpha = newColor.hsva.a * 100;\n        this.syncValues();\n      } else {\n        this.inputValue = oldValue != null ? oldValue : \"\";\n      }\n    }\n  }\n  /** Sets focus on the color picker. */\n  focus(options) {\n    if (this.inline) {\n      this.base.focus(options);\n    } else {\n      this.trigger.focus(options);\n    }\n  }\n  /** Removes focus from the color picker. */\n  blur() {\n    var _a;\n    const elementToBlur = this.inline ? this.base : this.trigger;\n    if (this.hasFocus) {\n      elementToBlur.focus({ preventScroll: true });\n      elementToBlur.blur();\n    }\n    if ((_a = this.dropdown) == null ? void 0 : _a.open) {\n      this.dropdown.hide();\n    }\n  }\n  /** Returns the current value as a string in the specified format. */\n  getFormattedValue(format = \"hex\") {\n    const currentColor = this.parseColor(\n      `hsva(${this.hue}, ${this.saturation}%, ${this.brightness}%, ${this.alpha / 100})`\n    );\n    if (currentColor === null) {\n      return \"\";\n    }\n    switch (format) {\n      case \"hex\":\n        return currentColor.hex;\n      case \"hexa\":\n        return currentColor.hexa;\n      case \"rgb\":\n        return currentColor.rgb.string;\n      case \"rgba\":\n        return currentColor.rgba.string;\n      case \"hsl\":\n        return currentColor.hsl.string;\n      case \"hsla\":\n        return currentColor.hsla.string;\n      case \"hsv\":\n        return currentColor.hsv.string;\n      case \"hsva\":\n        return currentColor.hsva.string;\n      default:\n        return \"\";\n    }\n  }\n  /** Checks for validity but does not show a validation message. Returns `true` when valid and `false` when invalid. */\n  checkValidity() {\n    return this.input.checkValidity();\n  }\n  /** Gets the associated form, if one exists. */\n  getForm() {\n    return this.formControlController.getForm();\n  }\n  /** Checks for validity and shows the browser's validation message if the control is invalid. */\n  reportValidity() {\n    if (!this.inline && !this.validity.valid) {\n      this.dropdown.show();\n      this.addEventListener(\"sl-after-show\", () => this.input.reportValidity(), { once: true });\n      if (!this.disabled) {\n        this.formControlController.emitInvalidEvent();\n      }\n      return false;\n    }\n    return this.input.reportValidity();\n  }\n  /** Sets a custom validation message. Pass an empty string to restore validity. */\n  setCustomValidity(message) {\n    this.input.setCustomValidity(message);\n    this.formControlController.updateValidity();\n  }\n  render() {\n    const gridHandleX = this.saturation;\n    const gridHandleY = 100 - this.brightness;\n    const swatches = Array.isArray(this.swatches) ? this.swatches : this.swatches.split(\";\").filter((color) => color.trim() !== \"\");\n    const colorPicker = html`\n      <div\n        part=\"base\"\n        class=${classMap({\n      \"color-picker\": true,\n      \"color-picker--inline\": this.inline,\n      \"color-picker--disabled\": this.disabled,\n      \"color-picker--focused\": this.hasFocus\n    })}\n        aria-disabled=${this.disabled ? \"true\" : \"false\"}\n        aria-labelledby=\"label\"\n        tabindex=${this.inline ? \"0\" : \"-1\"}\n      >\n        ${this.inline ? html`\n              <sl-visually-hidden id=\"label\">\n                <slot name=\"label\">${this.label}</slot>\n              </sl-visually-hidden>\n            ` : null}\n\n        <div\n          part=\"grid\"\n          class=\"color-picker__grid\"\n          style=${styleMap({ backgroundColor: this.getHexString(this.hue, 100, 100) })}\n          @pointerdown=${this.handleGridDrag}\n          @touchmove=${this.handleTouchMove}\n        >\n          <span\n            part=\"grid-handle\"\n            class=${classMap({\n      \"color-picker__grid-handle\": true,\n      \"color-picker__grid-handle--dragging\": this.isDraggingGridHandle\n    })}\n            style=${styleMap({\n      top: `${gridHandleY}%`,\n      left: `${gridHandleX}%`,\n      backgroundColor: this.getHexString(this.hue, this.saturation, this.brightness, this.alpha)\n    })}\n            role=\"application\"\n            aria-label=\"HSV\"\n            tabindex=${ifDefined(this.disabled ? void 0 : \"0\")}\n            @keydown=${this.handleGridKeyDown}\n          ></span>\n        </div>\n\n        <div class=\"color-picker__controls\">\n          <div class=\"color-picker__sliders\">\n            <div\n              part=\"slider hue-slider\"\n              class=\"color-picker__hue color-picker__slider\"\n              @pointerdown=${this.handleHueDrag}\n              @touchmove=${this.handleTouchMove}\n            >\n              <span\n                part=\"slider-handle hue-slider-handle\"\n                class=\"color-picker__slider-handle\"\n                style=${styleMap({\n      left: `${this.hue === 0 ? 0 : 100 / (360 / this.hue)}%`\n    })}\n                role=\"slider\"\n                aria-label=\"hue\"\n                aria-orientation=\"horizontal\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"360\"\n                aria-valuenow=${`${Math.round(this.hue)}`}\n                tabindex=${ifDefined(this.disabled ? void 0 : \"0\")}\n                @keydown=${this.handleHueKeyDown}\n              ></span>\n            </div>\n\n            ${this.opacity ? html`\n                  <div\n                    part=\"slider opacity-slider\"\n                    class=\"color-picker__alpha color-picker__slider color-picker__transparent-bg\"\n                    @pointerdown=\"${this.handleAlphaDrag}\"\n                    @touchmove=${this.handleTouchMove}\n                  >\n                    <div\n                      class=\"color-picker__alpha-gradient\"\n                      style=${styleMap({\n      backgroundImage: `linear-gradient(\n                          to right,\n                          ${this.getHexString(this.hue, this.saturation, this.brightness, 0)} 0%,\n                          ${this.getHexString(this.hue, this.saturation, this.brightness, 100)} 100%\n                        )`\n    })}\n                    ></div>\n                    <span\n                      part=\"slider-handle opacity-slider-handle\"\n                      class=\"color-picker__slider-handle\"\n                      style=${styleMap({\n      left: `${this.alpha}%`\n    })}\n                      role=\"slider\"\n                      aria-label=\"alpha\"\n                      aria-orientation=\"horizontal\"\n                      aria-valuemin=\"0\"\n                      aria-valuemax=\"100\"\n                      aria-valuenow=${Math.round(this.alpha)}\n                      tabindex=${ifDefined(this.disabled ? void 0 : \"0\")}\n                      @keydown=${this.handleAlphaKeyDown}\n                    ></span>\n                  </div>\n                ` : \"\"}\n          </div>\n\n          <button\n            type=\"button\"\n            part=\"preview\"\n            class=\"color-picker__preview color-picker__transparent-bg\"\n            aria-label=${this.localize.term(\"copy\")}\n            style=${styleMap({\n      \"--preview-color\": this.getHexString(this.hue, this.saturation, this.brightness, this.alpha)\n    })}\n            @click=${this.handleCopy}\n          ></button>\n        </div>\n\n        <div class=\"color-picker__user-input\" aria-live=\"polite\">\n          <sl-input\n            part=\"input\"\n            type=\"text\"\n            name=${this.name}\n            autocomplete=\"off\"\n            autocorrect=\"off\"\n            autocapitalize=\"off\"\n            spellcheck=\"false\"\n            value=${this.isEmpty ? \"\" : this.inputValue}\n            ?required=${this.required}\n            ?disabled=${this.disabled}\n            aria-label=${this.localize.term(\"currentValue\")}\n            @keydown=${this.handleInputKeyDown}\n            @sl-change=${this.handleInputChange}\n            @sl-input=${this.handleInputInput}\n            @sl-invalid=${this.handleInputInvalid}\n            @sl-blur=${this.stopNestedEventPropagation}\n            @sl-focus=${this.stopNestedEventPropagation}\n          ></sl-input>\n\n          <sl-button-group>\n            ${!this.noFormatToggle ? html`\n                  <sl-button\n                    part=\"format-button\"\n                    aria-label=${this.localize.term(\"toggleColorFormat\")}\n                    exportparts=\"\n                      base:format-button__base,\n                      prefix:format-button__prefix,\n                      label:format-button__label,\n                      suffix:format-button__suffix,\n                      caret:format-button__caret\n                    \"\n                    @click=${this.handleFormatToggle}\n                    @sl-blur=${this.stopNestedEventPropagation}\n                    @sl-focus=${this.stopNestedEventPropagation}\n                  >\n                    ${this.setLetterCase(this.format)}\n                  </sl-button>\n                ` : \"\"}\n            ${hasEyeDropper ? html`\n                  <sl-button\n                    part=\"eye-dropper-button\"\n                    exportparts=\"\n                      base:eye-dropper-button__base,\n                      prefix:eye-dropper-button__prefix,\n                      label:eye-dropper-button__label,\n                      suffix:eye-dropper-button__suffix,\n                      caret:eye-dropper-button__caret\n                    \"\n                    @click=${this.handleEyeDropper}\n                    @sl-blur=${this.stopNestedEventPropagation}\n                    @sl-focus=${this.stopNestedEventPropagation}\n                  >\n                    <sl-icon\n                      library=\"system\"\n                      name=\"eyedropper\"\n                      label=${this.localize.term(\"selectAColorFromTheScreen\")}\n                    ></sl-icon>\n                  </sl-button>\n                ` : \"\"}\n          </sl-button-group>\n        </div>\n\n        ${swatches.length > 0 ? html`\n              <div part=\"swatches\" class=\"color-picker__swatches\">\n                ${swatches.map((swatch) => {\n      const parsedColor = this.parseColor(swatch);\n      if (!parsedColor) {\n        console.error(`Unable to parse swatch color: \"${swatch}\"`, this);\n        return \"\";\n      }\n      return html`\n                    <div\n                      part=\"swatch\"\n                      class=\"color-picker__swatch color-picker__transparent-bg\"\n                      tabindex=${ifDefined(this.disabled ? void 0 : \"0\")}\n                      role=\"button\"\n                      aria-label=${swatch}\n                      @click=${() => this.selectSwatch(swatch)}\n                      @keydown=${(event) => !this.disabled && event.key === \"Enter\" && this.setColor(parsedColor.hexa)}\n                    >\n                      <div\n                        class=\"color-picker__swatch-color\"\n                        style=${styleMap({ backgroundColor: parsedColor.hexa })}\n                      ></div>\n                    </div>\n                  `;\n    })}\n              </div>\n            ` : \"\"}\n      </div>\n    `;\n    if (this.inline) {\n      return colorPicker;\n    }\n    return html`\n      <sl-dropdown\n        class=\"color-dropdown\"\n        aria-disabled=${this.disabled ? \"true\" : \"false\"}\n        .containing-element=${this}\n        ?disabled=${this.disabled}\n        ?hoist=${this.hoist}\n        @sl-after-hide=${this.handleAfterHide}\n      >\n        <button\n          part=\"trigger\"\n          slot=\"trigger\"\n          class=${classMap({\n      \"color-dropdown__trigger\": true,\n      \"color-dropdown__trigger--disabled\": this.disabled,\n      \"color-dropdown__trigger--small\": this.size === \"small\",\n      \"color-dropdown__trigger--medium\": this.size === \"medium\",\n      \"color-dropdown__trigger--large\": this.size === \"large\",\n      \"color-dropdown__trigger--empty\": this.isEmpty,\n      \"color-dropdown__trigger--focused\": this.hasFocus,\n      \"color-picker__transparent-bg\": true\n    })}\n          style=${styleMap({\n      color: this.getHexString(this.hue, this.saturation, this.brightness, this.alpha)\n    })}\n          type=\"button\"\n        >\n          <sl-visually-hidden>\n            <slot name=\"label\">${this.label}</slot>\n          </sl-visually-hidden>\n        </button>\n        ${colorPicker}\n      </sl-dropdown>\n    `;\n  }\n};\nSlColorPicker.styles = [component_styles_default, color_picker_styles_default];\nSlColorPicker.dependencies = {\n  \"sl-button-group\": SlButtonGroup,\n  \"sl-button\": SlButton,\n  \"sl-dropdown\": SlDropdown,\n  \"sl-icon\": SlIcon,\n  \"sl-input\": SlInput,\n  \"sl-visually-hidden\": SlVisuallyHidden\n};\n__decorateClass([\n  query('[part~=\"base\"]')\n], SlColorPicker.prototype, \"base\", 2);\n__decorateClass([\n  query('[part~=\"input\"]')\n], SlColorPicker.prototype, \"input\", 2);\n__decorateClass([\n  query(\".color-dropdown\")\n], SlColorPicker.prototype, \"dropdown\", 2);\n__decorateClass([\n  query('[part~=\"preview\"]')\n], SlColorPicker.prototype, \"previewButton\", 2);\n__decorateClass([\n  query('[part~=\"trigger\"]')\n], SlColorPicker.prototype, \"trigger\", 2);\n__decorateClass([\n  state()\n], SlColorPicker.prototype, \"hasFocus\", 2);\n__decorateClass([\n  state()\n], SlColorPicker.prototype, \"isDraggingGridHandle\", 2);\n__decorateClass([\n  state()\n], SlColorPicker.prototype, \"isEmpty\", 2);\n__decorateClass([\n  state()\n], SlColorPicker.prototype, \"inputValue\", 2);\n__decorateClass([\n  state()\n], SlColorPicker.prototype, \"hue\", 2);\n__decorateClass([\n  state()\n], SlColorPicker.prototype, \"saturation\", 2);\n__decorateClass([\n  state()\n], SlColorPicker.prototype, \"brightness\", 2);\n__decorateClass([\n  state()\n], SlColorPicker.prototype, \"alpha\", 2);\n__decorateClass([\n  property()\n], SlColorPicker.prototype, \"value\", 2);\n__decorateClass([\n  defaultValue()\n], SlColorPicker.prototype, \"defaultValue\", 2);\n__decorateClass([\n  property()\n], SlColorPicker.prototype, \"label\", 2);\n__decorateClass([\n  property()\n], SlColorPicker.prototype, \"format\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], SlColorPicker.prototype, \"inline\", 2);\n__decorateClass([\n  property({ reflect: true })\n], SlColorPicker.prototype, \"size\", 2);\n__decorateClass([\n  property({ attribute: \"no-format-toggle\", type: Boolean })\n], SlColorPicker.prototype, \"noFormatToggle\", 2);\n__decorateClass([\n  property()\n], SlColorPicker.prototype, \"name\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], SlColorPicker.prototype, \"disabled\", 2);\n__decorateClass([\n  property({ type: Boolean })\n], SlColorPicker.prototype, \"hoist\", 2);\n__decorateClass([\n  property({ type: Boolean })\n], SlColorPicker.prototype, \"opacity\", 2);\n__decorateClass([\n  property({ type: Boolean })\n], SlColorPicker.prototype, \"uppercase\", 2);\n__decorateClass([\n  property()\n], SlColorPicker.prototype, \"swatches\", 2);\n__decorateClass([\n  property({ reflect: true })\n], SlColorPicker.prototype, \"form\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], SlColorPicker.prototype, \"required\", 2);\n__decorateClass([\n  eventOptions({ passive: false })\n], SlColorPicker.prototype, \"handleTouchMove\", 1);\n__decorateClass([\n  watch(\"format\", { waitUntilFirstUpdate: true })\n], SlColorPicker.prototype, \"handleFormatChange\", 1);\n__decorateClass([\n  watch(\"opacity\", { waitUntilFirstUpdate: true })\n], SlColorPicker.prototype, \"handleOpacityChange\", 1);\n__decorateClass([\n  watch(\"value\")\n], SlColorPicker.prototype, \"handleValueChange\", 1);\n\nexport {\n  SlColorPicker\n};\n"],"mappings":"AAAA,SACEA,gBAAgB,QACX,qBAAqB;AAC5B,SACEC,OAAO,QACF,qBAAqB;AAC5B,SACEC,IAAI,QACC,qBAAqB;AAC5B,SACEC,UAAU,QACL,qBAAqB;AAC5B,SACEC,YAAY,QACP,qBAAqB;AAC5B,SACEC,2BAA2B,QACtB,qBAAqB;AAC5B,SACEC,KAAK,QACA,qBAAqB;AAC5B,SACEC,QAAQ,QACH,qBAAqB;AAC5B,SACEC,qBAAqB,QAChB,qBAAqB;AAC5B,SACEC,aAAa,QACR,qBAAqB;AAC5B,SACEC,kBAAkB,QACb,qBAAqB;AAC5B,SACEC,MAAM,QACD,qBAAqB;AAC5B,SACEC,KAAK,QACA,qBAAqB;AAC5B,SACEC,wBAAwB,QACnB,qBAAqB;AAC5B,SACEC,eAAe,QACV,qBAAqB;AAC5B,SACEC,eAAe,QACV,qBAAqB;;AAE5B;AACA,SAASC,QAAQ,QAAQ,6BAA6B;AACtD,SAASC,YAAY,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,KAAK,QAAQ,mBAAmB;AACxE,SAASC,IAAI,QAAQ,KAAK;AAC1B,SAASC,SAAS,QAAQ,8BAA8B;AACxD,SAASC,QAAQ,QAAQ,6BAA6B;AACtD,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,IAAIC,aAAa,GAAG,YAAY,IAAIC,MAAM;AAC1C,IAAIC,aAAa,GAAG,cAAcb,eAAe,CAAC;EAChDc,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,qBAAqB,GAAG,IAAIrB,qBAAqB,CAAC,IAAI,CAAC;IAC5D,IAAI,CAACsB,WAAW,GAAG,KAAK;IACxB,IAAI,CAACC,QAAQ,GAAG,IAAIrB,kBAAkB,CAAC,IAAI,CAAC;IAC5C,IAAI,CAACsB,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACC,oBAAoB,GAAG,KAAK;IACjC,IAAI,CAACC,OAAO,GAAG,KAAK;IACpB,IAAI,CAACC,UAAU,GAAG,EAAE;IACpB,IAAI,CAACC,GAAG,GAAG,CAAC;IACZ,IAAI,CAACC,UAAU,GAAG,GAAG;IACrB,IAAI,CAACC,UAAU,GAAG,GAAG;IACrB,IAAI,CAACC,KAAK,GAAG,GAAG;IAChB,IAAI,CAACC,KAAK,GAAG,EAAE;IACf,IAAI,CAACpC,YAAY,GAAG,EAAE;IACtB,IAAI,CAACqC,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,MAAM,GAAG,KAAK;IACnB,IAAI,CAACC,MAAM,GAAG,KAAK;IACnB,IAAI,CAACC,IAAI,GAAG,QAAQ;IACpB,IAAI,CAACC,cAAc,GAAG,KAAK;IAC3B,IAAI,CAACC,IAAI,GAAG,EAAE;IACd,IAAI,CAACC,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACC,KAAK,GAAG,KAAK;IAClB,IAAI,CAACC,OAAO,GAAG,KAAK;IACpB,IAAI,CAACC,SAAS,GAAG,KAAK;IACtB,IAAI,CAACC,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACC,IAAI,GAAG,EAAE;IACd,IAAI,CAACC,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACC,aAAa,GAAG,MAAM;MACzB,IAAI,CAACtB,QAAQ,GAAG,IAAI;MACpB,IAAI,CAACuB,IAAI,CAAC,UAAU,CAAC;IACvB,CAAC;IACD,IAAI,CAACC,cAAc,GAAG,MAAM;MAC1B,IAAI,CAACxB,QAAQ,GAAG,KAAK;MACrB,IAAI,CAACuB,IAAI,CAAC,SAAS,CAAC;IACtB,CAAC;IACD,IAAI,CAACE,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAACH,aAAa,CAAC;IACpD,IAAI,CAACG,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAACD,cAAc,CAAC;EACxD;EACA;EACA,IAAIE,QAAQA,CAAA,EAAG;IACb,OAAO,IAAI,CAACC,KAAK,CAACD,QAAQ;EAC5B;EACA;EACA,IAAIE,iBAAiBA,CAAA,EAAG;IACtB,OAAO,IAAI,CAACD,KAAK,CAACC,iBAAiB;EACrC;EACAC,YAAYA,CAAA,EAAG;IACb,IAAI,CAACF,KAAK,CAACG,cAAc,CAACC,IAAI,CAAC,MAAM;MACnC,IAAI,CAAClC,qBAAqB,CAACmC,cAAc,CAAC,CAAC;IAC7C,CAAC,CAAC;EACJ;EACAC,UAAUA,CAAA,EAAG;IACX,IAAI,CAACN,KAAK,CAACO,MAAM,CAAC,CAAC;IACnBC,QAAQ,CAACC,WAAW,CAAC,MAAM,CAAC;IAC5B,IAAI,CAACC,aAAa,CAACC,KAAK,CAAC,CAAC;IAC1B,IAAI,CAACD,aAAa,CAACE,SAAS,CAACC,GAAG,CAAC,qCAAqC,CAAC;IACvE,IAAI,CAACH,aAAa,CAACZ,gBAAgB,CAAC,cAAc,EAAE,MAAM;MACxD,IAAI,CAACY,aAAa,CAACE,SAAS,CAACE,MAAM,CAAC,qCAAqC,CAAC;IAC5E,CAAC,CAAC;EACJ;EACAC,kBAAkBA,CAAA,EAAG;IACnB,MAAMC,OAAO,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IAC5C,MAAMC,SAAS,GAAG,CAACD,OAAO,CAACE,OAAO,CAAC,IAAI,CAACnC,MAAM,CAAC,GAAG,CAAC,IAAIiC,OAAO,CAACG,MAAM;IACrE,IAAI,CAACpC,MAAM,GAAGiC,OAAO,CAACC,SAAS,CAAC;IAChC,IAAI,CAACG,QAAQ,CAAC,IAAI,CAACvC,KAAK,CAAC;IACzB,IAAI,CAACe,IAAI,CAAC,WAAW,CAAC;IACtB,IAAI,CAACA,IAAI,CAAC,UAAU,CAAC;EACvB;EACAyB,eAAeA,CAACC,KAAK,EAAE;IACrB,MAAMC,SAAS,GAAG,IAAI,CAACC,UAAU,CAACC,aAAa,CAAC,2CAA2C,CAAC;IAC5F,MAAMC,MAAM,GAAGH,SAAS,CAACE,aAAa,CAAC,8BAA8B,CAAC;IACtE,MAAM;MAAEE;IAAM,CAAC,GAAGJ,SAAS,CAACK,qBAAqB,CAAC,CAAC;IACnD,IAAIC,YAAY,GAAG,IAAI,CAAChD,KAAK;IAC7B,IAAIiD,YAAY,GAAG,IAAI,CAACjD,KAAK;IAC7B6C,MAAM,CAACf,KAAK,CAAC,CAAC;IACdW,KAAK,CAACS,cAAc,CAAC,CAAC;IACtBxF,IAAI,CAACgF,SAAS,EAAE;MACdS,MAAM,EAAGC,CAAC,IAAK;QACb,IAAI,CAACrD,KAAK,GAAGjC,KAAK,CAACsF,CAAC,GAAGN,KAAK,GAAG,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC;QAC3C,IAAI,CAACO,UAAU,CAAC,CAAC;QACjB,IAAI,IAAI,CAACrD,KAAK,KAAKiD,YAAY,EAAE;UAC/BA,YAAY,GAAG,IAAI,CAACjD,KAAK;UACzB,IAAI,CAACe,IAAI,CAAC,UAAU,CAAC;QACvB;MACF,CAAC;MACDuC,MAAM,EAAEA,CAAA,KAAM;QACZ,IAAI,IAAI,CAACtD,KAAK,KAAKgD,YAAY,EAAE;UAC/BA,YAAY,GAAG,IAAI,CAAChD,KAAK;UACzB,IAAI,CAACe,IAAI,CAAC,WAAW,CAAC;QACxB;MACF,CAAC;MACDwC,YAAY,EAAEd;IAChB,CAAC,CAAC;EACJ;EACAe,aAAaA,CAACf,KAAK,EAAE;IACnB,MAAMC,SAAS,GAAG,IAAI,CAACC,UAAU,CAACC,aAAa,CAAC,yCAAyC,CAAC;IAC1F,MAAMC,MAAM,GAAGH,SAAS,CAACE,aAAa,CAAC,8BAA8B,CAAC;IACtE,MAAM;MAAEE;IAAM,CAAC,GAAGJ,SAAS,CAACK,qBAAqB,CAAC,CAAC;IACnD,IAAIC,YAAY,GAAG,IAAI,CAAChD,KAAK;IAC7B,IAAIiD,YAAY,GAAG,IAAI,CAACjD,KAAK;IAC7B6C,MAAM,CAACf,KAAK,CAAC,CAAC;IACdW,KAAK,CAACS,cAAc,CAAC,CAAC;IACtBxF,IAAI,CAACgF,SAAS,EAAE;MACdS,MAAM,EAAGC,CAAC,IAAK;QACb,IAAI,CAACxD,GAAG,GAAG9B,KAAK,CAACsF,CAAC,GAAGN,KAAK,GAAG,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC;QACzC,IAAI,CAACO,UAAU,CAAC,CAAC;QACjB,IAAI,IAAI,CAACrD,KAAK,KAAKiD,YAAY,EAAE;UAC/BA,YAAY,GAAG,IAAI,CAACjD,KAAK;UACzB,IAAI,CAACe,IAAI,CAAC,UAAU,CAAC;QACvB;MACF,CAAC;MACDuC,MAAM,EAAEA,CAAA,KAAM;QACZ,IAAI,IAAI,CAACtD,KAAK,KAAKgD,YAAY,EAAE;UAC/BA,YAAY,GAAG,IAAI,CAAChD,KAAK;UACzB,IAAI,CAACe,IAAI,CAAC,WAAW,CAAC;QACxB;MACF,CAAC;MACDwC,YAAY,EAAEd;IAChB,CAAC,CAAC;EACJ;EACAgB,cAAcA,CAAChB,KAAK,EAAE;IACpB,MAAMiB,IAAI,GAAG,IAAI,CAACf,UAAU,CAACC,aAAa,CAAC,qBAAqB,CAAC;IACjE,MAAMC,MAAM,GAAGa,IAAI,CAACd,aAAa,CAAC,4BAA4B,CAAC;IAC/D,MAAM;MAAEE,KAAK;MAAEa;IAAO,CAAC,GAAGD,IAAI,CAACX,qBAAqB,CAAC,CAAC;IACtD,IAAIC,YAAY,GAAG,IAAI,CAAChD,KAAK;IAC7B,IAAIiD,YAAY,GAAG,IAAI,CAACjD,KAAK;IAC7B6C,MAAM,CAACf,KAAK,CAAC,CAAC;IACdW,KAAK,CAACS,cAAc,CAAC,CAAC;IACtB,IAAI,CAACzD,oBAAoB,GAAG,IAAI;IAChC/B,IAAI,CAACgG,IAAI,EAAE;MACTP,MAAM,EAAEA,CAACC,CAAC,EAAEQ,CAAC,KAAK;QAChB,IAAI,CAAC/D,UAAU,GAAG/B,KAAK,CAACsF,CAAC,GAAGN,KAAK,GAAG,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC;QAChD,IAAI,CAAChD,UAAU,GAAGhC,KAAK,CAAC,GAAG,GAAG8F,CAAC,GAAGD,MAAM,GAAG,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC;QACvD,IAAI,CAACN,UAAU,CAAC,CAAC;QACjB,IAAI,IAAI,CAACrD,KAAK,KAAKiD,YAAY,EAAE;UAC/BA,YAAY,GAAG,IAAI,CAACjD,KAAK;UACzB,IAAI,CAACe,IAAI,CAAC,UAAU,CAAC;QACvB;MACF,CAAC;MACDuC,MAAM,EAAEA,CAAA,KAAM;QACZ,IAAI,CAAC7D,oBAAoB,GAAG,KAAK;QACjC,IAAI,IAAI,CAACO,KAAK,KAAKgD,YAAY,EAAE;UAC/BA,YAAY,GAAG,IAAI,CAAChD,KAAK;UACzB,IAAI,CAACe,IAAI,CAAC,WAAW,CAAC;QACxB;MACF,CAAC;MACDwC,YAAY,EAAEd;IAChB,CAAC,CAAC;EACJ;EACAoB,kBAAkBA,CAACpB,KAAK,EAAE;IACxB,MAAMqB,SAAS,GAAGrB,KAAK,CAACsB,QAAQ,GAAG,EAAE,GAAG,CAAC;IACzC,MAAMC,QAAQ,GAAG,IAAI,CAAChE,KAAK;IAC3B,IAAIyC,KAAK,CAACwB,GAAG,KAAK,WAAW,EAAE;MAC7BxB,KAAK,CAACS,cAAc,CAAC,CAAC;MACtB,IAAI,CAACnD,KAAK,GAAGjC,KAAK,CAAC,IAAI,CAACiC,KAAK,GAAG+D,SAAS,EAAE,CAAC,EAAE,GAAG,CAAC;MAClD,IAAI,CAACT,UAAU,CAAC,CAAC;IACnB;IACA,IAAIZ,KAAK,CAACwB,GAAG,KAAK,YAAY,EAAE;MAC9BxB,KAAK,CAACS,cAAc,CAAC,CAAC;MACtB,IAAI,CAACnD,KAAK,GAAGjC,KAAK,CAAC,IAAI,CAACiC,KAAK,GAAG+D,SAAS,EAAE,CAAC,EAAE,GAAG,CAAC;MAClD,IAAI,CAACT,UAAU,CAAC,CAAC;IACnB;IACA,IAAIZ,KAAK,CAACwB,GAAG,KAAK,MAAM,EAAE;MACxBxB,KAAK,CAACS,cAAc,CAAC,CAAC;MACtB,IAAI,CAACnD,KAAK,GAAG,CAAC;MACd,IAAI,CAACsD,UAAU,CAAC,CAAC;IACnB;IACA,IAAIZ,KAAK,CAACwB,GAAG,KAAK,KAAK,EAAE;MACvBxB,KAAK,CAACS,cAAc,CAAC,CAAC;MACtB,IAAI,CAACnD,KAAK,GAAG,GAAG;MAChB,IAAI,CAACsD,UAAU,CAAC,CAAC;IACnB;IACA,IAAI,IAAI,CAACrD,KAAK,KAAKgE,QAAQ,EAAE;MAC3B,IAAI,CAACjD,IAAI,CAAC,WAAW,CAAC;MACtB,IAAI,CAACA,IAAI,CAAC,UAAU,CAAC;IACvB;EACF;EACAmD,gBAAgBA,CAACzB,KAAK,EAAE;IACtB,MAAMqB,SAAS,GAAGrB,KAAK,CAACsB,QAAQ,GAAG,EAAE,GAAG,CAAC;IACzC,MAAMC,QAAQ,GAAG,IAAI,CAAChE,KAAK;IAC3B,IAAIyC,KAAK,CAACwB,GAAG,KAAK,WAAW,EAAE;MAC7BxB,KAAK,CAACS,cAAc,CAAC,CAAC;MACtB,IAAI,CAACtD,GAAG,GAAG9B,KAAK,CAAC,IAAI,CAAC8B,GAAG,GAAGkE,SAAS,EAAE,CAAC,EAAE,GAAG,CAAC;MAC9C,IAAI,CAACT,UAAU,CAAC,CAAC;IACnB;IACA,IAAIZ,KAAK,CAACwB,GAAG,KAAK,YAAY,EAAE;MAC9BxB,KAAK,CAACS,cAAc,CAAC,CAAC;MACtB,IAAI,CAACtD,GAAG,GAAG9B,KAAK,CAAC,IAAI,CAAC8B,GAAG,GAAGkE,SAAS,EAAE,CAAC,EAAE,GAAG,CAAC;MAC9C,IAAI,CAACT,UAAU,CAAC,CAAC;IACnB;IACA,IAAIZ,KAAK,CAACwB,GAAG,KAAK,MAAM,EAAE;MACxBxB,KAAK,CAACS,cAAc,CAAC,CAAC;MACtB,IAAI,CAACtD,GAAG,GAAG,CAAC;MACZ,IAAI,CAACyD,UAAU,CAAC,CAAC;IACnB;IACA,IAAIZ,KAAK,CAACwB,GAAG,KAAK,KAAK,EAAE;MACvBxB,KAAK,CAACS,cAAc,CAAC,CAAC;MACtB,IAAI,CAACtD,GAAG,GAAG,GAAG;MACd,IAAI,CAACyD,UAAU,CAAC,CAAC;IACnB;IACA,IAAI,IAAI,CAACrD,KAAK,KAAKgE,QAAQ,EAAE;MAC3B,IAAI,CAACjD,IAAI,CAAC,WAAW,CAAC;MACtB,IAAI,CAACA,IAAI,CAAC,UAAU,CAAC;IACvB;EACF;EACAoD,iBAAiBA,CAAC1B,KAAK,EAAE;IACvB,MAAMqB,SAAS,GAAGrB,KAAK,CAACsB,QAAQ,GAAG,EAAE,GAAG,CAAC;IACzC,MAAMC,QAAQ,GAAG,IAAI,CAAChE,KAAK;IAC3B,IAAIyC,KAAK,CAACwB,GAAG,KAAK,WAAW,EAAE;MAC7BxB,KAAK,CAACS,cAAc,CAAC,CAAC;MACtB,IAAI,CAACrD,UAAU,GAAG/B,KAAK,CAAC,IAAI,CAAC+B,UAAU,GAAGiE,SAAS,EAAE,CAAC,EAAE,GAAG,CAAC;MAC5D,IAAI,CAACT,UAAU,CAAC,CAAC;IACnB;IACA,IAAIZ,KAAK,CAACwB,GAAG,KAAK,YAAY,EAAE;MAC9BxB,KAAK,CAACS,cAAc,CAAC,CAAC;MACtB,IAAI,CAACrD,UAAU,GAAG/B,KAAK,CAAC,IAAI,CAAC+B,UAAU,GAAGiE,SAAS,EAAE,CAAC,EAAE,GAAG,CAAC;MAC5D,IAAI,CAACT,UAAU,CAAC,CAAC;IACnB;IACA,IAAIZ,KAAK,CAACwB,GAAG,KAAK,SAAS,EAAE;MAC3BxB,KAAK,CAACS,cAAc,CAAC,CAAC;MACtB,IAAI,CAACpD,UAAU,GAAGhC,KAAK,CAAC,IAAI,CAACgC,UAAU,GAAGgE,SAAS,EAAE,CAAC,EAAE,GAAG,CAAC;MAC5D,IAAI,CAACT,UAAU,CAAC,CAAC;IACnB;IACA,IAAIZ,KAAK,CAACwB,GAAG,KAAK,WAAW,EAAE;MAC7BxB,KAAK,CAACS,cAAc,CAAC,CAAC;MACtB,IAAI,CAACpD,UAAU,GAAGhC,KAAK,CAAC,IAAI,CAACgC,UAAU,GAAGgE,SAAS,EAAE,CAAC,EAAE,GAAG,CAAC;MAC5D,IAAI,CAACT,UAAU,CAAC,CAAC;IACnB;IACA,IAAI,IAAI,CAACrD,KAAK,KAAKgE,QAAQ,EAAE;MAC3B,IAAI,CAACjD,IAAI,CAAC,WAAW,CAAC;MACtB,IAAI,CAACA,IAAI,CAAC,UAAU,CAAC;IACvB;EACF;EACAqD,iBAAiBA,CAAC3B,KAAK,EAAE;IACvB,MAAM4B,MAAM,GAAG5B,KAAK,CAAC4B,MAAM;IAC3B,MAAML,QAAQ,GAAG,IAAI,CAAChE,KAAK;IAC3ByC,KAAK,CAAC6B,eAAe,CAAC,CAAC;IACvB,IAAI,IAAI,CAACnD,KAAK,CAACnB,KAAK,EAAE;MACpB,IAAI,CAACuC,QAAQ,CAAC8B,MAAM,CAACrE,KAAK,CAAC;MAC3BqE,MAAM,CAACrE,KAAK,GAAG,IAAI,CAACA,KAAK;IAC3B,CAAC,MAAM;MACL,IAAI,CAACA,KAAK,GAAG,EAAE;IACjB;IACA,IAAI,IAAI,CAACA,KAAK,KAAKgE,QAAQ,EAAE;MAC3B,IAAI,CAACjD,IAAI,CAAC,WAAW,CAAC;MACtB,IAAI,CAACA,IAAI,CAAC,UAAU,CAAC;IACvB;EACF;EACAwD,gBAAgBA,CAAC9B,KAAK,EAAE;IACtB,IAAI,CAACpD,qBAAqB,CAACmC,cAAc,CAAC,CAAC;IAC3CiB,KAAK,CAAC6B,eAAe,CAAC,CAAC;EACzB;EACAE,kBAAkBA,CAAC/B,KAAK,EAAE;IACxB,IAAIA,KAAK,CAACwB,GAAG,KAAK,OAAO,EAAE;MACzB,MAAMD,QAAQ,GAAG,IAAI,CAAChE,KAAK;MAC3B,IAAI,IAAI,CAACmB,KAAK,CAACnB,KAAK,EAAE;QACpB,IAAI,CAACuC,QAAQ,CAAC,IAAI,CAACpB,KAAK,CAACnB,KAAK,CAAC;QAC/B,IAAI,CAACmB,KAAK,CAACnB,KAAK,GAAG,IAAI,CAACA,KAAK;QAC7B,IAAI,IAAI,CAACA,KAAK,KAAKgE,QAAQ,EAAE;UAC3B,IAAI,CAACjD,IAAI,CAAC,WAAW,CAAC;UACtB,IAAI,CAACA,IAAI,CAAC,UAAU,CAAC;QACvB;QACA0D,UAAU,CAAC,MAAM,IAAI,CAACtD,KAAK,CAACO,MAAM,CAAC,CAAC,CAAC;MACvC,CAAC,MAAM;QACL,IAAI,CAAC9B,GAAG,GAAG,CAAC;MACd;IACF;EACF;EACA8E,kBAAkBA,CAACjC,KAAK,EAAE;IACxB,IAAI,CAACpD,qBAAqB,CAACsF,WAAW,CAAC,KAAK,CAAC;IAC7C,IAAI,CAACtF,qBAAqB,CAACuF,gBAAgB,CAACnC,KAAK,CAAC;EACpD;EACAoC,eAAeA,CAACpC,KAAK,EAAE;IACrBA,KAAK,CAACS,cAAc,CAAC,CAAC;EACxB;EACA4B,UAAUA,CAACC,WAAW,EAAE;IACtB,MAAMC,KAAK,GAAG,IAAIhG,SAAS,CAAC+F,WAAW,CAAC;IACxC,IAAI,CAACC,KAAK,CAACC,OAAO,EAAE;MAClB,OAAO,IAAI;IACb;IACA,MAAMC,QAAQ,GAAGF,KAAK,CAACG,KAAK,CAAC,CAAC;IAC9B,MAAMC,GAAG,GAAG;MACVC,CAAC,EAAEH,QAAQ,CAACG,CAAC;MACbC,CAAC,EAAEJ,QAAQ,CAACI,CAAC,GAAG,GAAG;MACnBC,CAAC,EAAEL,QAAQ,CAACK,CAAC,GAAG,GAAG;MACnBC,CAAC,EAAEN,QAAQ,CAACM;IACd,CAAC;IACD,MAAMC,GAAG,GAAGT,KAAK,CAACU,KAAK,CAAC,CAAC;IACzB,MAAMC,GAAG,GAAGX,KAAK,CAACY,WAAW,CAAC,CAAC;IAC/B,MAAMC,IAAI,GAAGb,KAAK,CAACc,YAAY,CAAC,CAAC;IACjC,MAAMC,QAAQ,GAAGf,KAAK,CAACgB,KAAK,CAAC,CAAC;IAC9B,MAAMC,GAAG,GAAG;MACVZ,CAAC,EAAEU,QAAQ,CAACV,CAAC;MACbC,CAAC,EAAES,QAAQ,CAACT,CAAC,GAAG,GAAG;MACnBY,CAAC,EAAEH,QAAQ,CAACG,CAAC,GAAG,GAAG;MACnBV,CAAC,EAAEO,QAAQ,CAACP;IACd,CAAC;IACD,OAAO;MACLJ,GAAG,EAAE;QACHC,CAAC,EAAED,GAAG,CAACC,CAAC;QACRC,CAAC,EAAEF,GAAG,CAACE,CAAC;QACRC,CAAC,EAAEH,GAAG,CAACG,CAAC;QACRY,MAAM,EAAE,IAAI,CAACC,aAAa,CAAC,OAAOC,IAAI,CAACC,KAAK,CAAClB,GAAG,CAACC,CAAC,CAAC,KAAKgB,IAAI,CAACC,KAAK,CAAClB,GAAG,CAACE,CAAC,CAAC,MAAMe,IAAI,CAACC,KAAK,CAAClB,GAAG,CAACG,CAAC,CAAC,IAAI;MACtG,CAAC;MACDgB,IAAI,EAAE;QACJlB,CAAC,EAAED,GAAG,CAACC,CAAC;QACRC,CAAC,EAAEF,GAAG,CAACE,CAAC;QACRC,CAAC,EAAEH,GAAG,CAACG,CAAC;QACRC,CAAC,EAAEJ,GAAG,CAACI,CAAC;QACRW,MAAM,EAAE,IAAI,CAACC,aAAa,CACxB,QAAQC,IAAI,CAACC,KAAK,CAAClB,GAAG,CAACC,CAAC,CAAC,KAAKgB,IAAI,CAACC,KAAK,CAAClB,GAAG,CAACE,CAAC,CAAC,MAAMe,IAAI,CAACC,KAAK,CAAClB,GAAG,CAACG,CAAC,CAAC,MAAMH,GAAG,CAACI,CAAC,CAACgB,OAAO,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,GACzG;MACF,CAAC;MACDR,GAAG,EAAE;QACHZ,CAAC,EAAEY,GAAG,CAACZ,CAAC;QACRC,CAAC,EAAEW,GAAG,CAACX,CAAC;QACRY,CAAC,EAAED,GAAG,CAACC,CAAC;QACRC,MAAM,EAAE,IAAI,CAACC,aAAa,CAAC,OAAOC,IAAI,CAACC,KAAK,CAACL,GAAG,CAACZ,CAAC,CAAC,KAAKgB,IAAI,CAACC,KAAK,CAACL,GAAG,CAACX,CAAC,CAAC,MAAMe,IAAI,CAACC,KAAK,CAACL,GAAG,CAACC,CAAC,CAAC,IAAI;MACtG,CAAC;MACDQ,IAAI,EAAE;QACJrB,CAAC,EAAEY,GAAG,CAACZ,CAAC;QACRC,CAAC,EAAEW,GAAG,CAACX,CAAC;QACRY,CAAC,EAAED,GAAG,CAACC,CAAC;QACRV,CAAC,EAAES,GAAG,CAACT,CAAC;QACRW,MAAM,EAAE,IAAI,CAACC,aAAa,CACxB,QAAQC,IAAI,CAACC,KAAK,CAACL,GAAG,CAACZ,CAAC,CAAC,KAAKgB,IAAI,CAACC,KAAK,CAACL,GAAG,CAACX,CAAC,CAAC,MAAMe,IAAI,CAACC,KAAK,CAACL,GAAG,CAACC,CAAC,CAAC,MAAMD,GAAG,CAACT,CAAC,CAACgB,OAAO,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,GACzG;MACF,CAAC;MACDhB,GAAG,EAAE;QACHkB,CAAC,EAAElB,GAAG,CAACkB,CAAC;QACRC,CAAC,EAAEnB,GAAG,CAACmB,CAAC;QACRC,CAAC,EAAEpB,GAAG,CAACoB,CAAC;QACRV,MAAM,EAAE,IAAI,CAACC,aAAa,CAAC,OAAOC,IAAI,CAACC,KAAK,CAACb,GAAG,CAACkB,CAAC,CAAC,KAAKN,IAAI,CAACC,KAAK,CAACb,GAAG,CAACmB,CAAC,CAAC,KAAKP,IAAI,CAACC,KAAK,CAACb,GAAG,CAACoB,CAAC,CAAC,GAAG;MACpG,CAAC;MACDC,IAAI,EAAE;QACJH,CAAC,EAAElB,GAAG,CAACkB,CAAC;QACRC,CAAC,EAAEnB,GAAG,CAACmB,CAAC;QACRC,CAAC,EAAEpB,GAAG,CAACoB,CAAC;QACRrB,CAAC,EAAEC,GAAG,CAACD,CAAC;QACRW,MAAM,EAAE,IAAI,CAACC,aAAa,CACxB,QAAQC,IAAI,CAACC,KAAK,CAACb,GAAG,CAACkB,CAAC,CAAC,KAAKN,IAAI,CAACC,KAAK,CAACb,GAAG,CAACmB,CAAC,CAAC,KAAKP,IAAI,CAACC,KAAK,CAACb,GAAG,CAACoB,CAAC,CAAC,KAAKpB,GAAG,CAACD,CAAC,CAACgB,OAAO,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,GACvG;MACF,CAAC;MACDd,GAAG,EAAE,IAAI,CAACS,aAAa,CAACT,GAAG,CAAC;MAC5BE,IAAI,EAAE,IAAI,CAACO,aAAa,CAACP,IAAI;IAC/B,CAAC;EACH;EACAtD,QAAQA,CAACwC,WAAW,EAAE;IACpB,MAAMgC,QAAQ,GAAG,IAAI,CAACjC,UAAU,CAACC,WAAW,CAAC;IAC7C,IAAIgC,QAAQ,KAAK,IAAI,EAAE;MACrB,OAAO,KAAK;IACd;IACA,IAAI,CAACnH,GAAG,GAAGmH,QAAQ,CAACL,IAAI,CAACrB,CAAC;IAC1B,IAAI,CAACxF,UAAU,GAAGkH,QAAQ,CAACL,IAAI,CAACpB,CAAC;IACjC,IAAI,CAACxF,UAAU,GAAGiH,QAAQ,CAACL,IAAI,CAACR,CAAC;IACjC,IAAI,CAACnG,KAAK,GAAG,IAAI,CAACU,OAAO,GAAGsG,QAAQ,CAACL,IAAI,CAAClB,CAAC,GAAG,GAAG,GAAG,GAAG;IACvD,IAAI,CAACnC,UAAU,CAAC,CAAC;IACjB,OAAO,IAAI;EACb;EACA+C,aAAaA,CAACD,MAAM,EAAE;IACpB,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;MAC9B,OAAO,EAAE;IACX;IACA,OAAO,IAAI,CAACzF,SAAS,GAAGyF,MAAM,CAACa,WAAW,CAAC,CAAC,GAAGb,MAAM,CAACc,WAAW,CAAC,CAAC;EACrE;EACA,MAAM5D,UAAUA,CAAA,EAAG;IACjB,MAAM6D,YAAY,GAAG,IAAI,CAACpC,UAAU,CAClC,QAAQ,IAAI,CAAClF,GAAG,KAAK,IAAI,CAACC,UAAU,MAAM,IAAI,CAACC,UAAU,MAAM,IAAI,CAACC,KAAK,GAAG,GAAG,GACjF,CAAC;IACD,IAAImH,YAAY,KAAK,IAAI,EAAE;MACzB;IACF;IACA,IAAI,IAAI,CAAChH,MAAM,KAAK,KAAK,EAAE;MACzB,IAAI,CAACP,UAAU,GAAG,IAAI,CAACc,OAAO,GAAGyG,YAAY,CAACX,IAAI,CAACJ,MAAM,GAAGe,YAAY,CAAC9B,GAAG,CAACe,MAAM;IACrF,CAAC,MAAM,IAAI,IAAI,CAACjG,MAAM,KAAK,KAAK,EAAE;MAChC,IAAI,CAACP,UAAU,GAAG,IAAI,CAACc,OAAO,GAAGyG,YAAY,CAACJ,IAAI,CAACX,MAAM,GAAGe,YAAY,CAACzB,GAAG,CAACU,MAAM;IACrF,CAAC,MAAM,IAAI,IAAI,CAACjG,MAAM,KAAK,KAAK,EAAE;MAChC,IAAI,CAACP,UAAU,GAAG,IAAI,CAACc,OAAO,GAAGyG,YAAY,CAACR,IAAI,CAACP,MAAM,GAAGe,YAAY,CAACjB,GAAG,CAACE,MAAM;IACrF,CAAC,MAAM;MACL,IAAI,CAACxG,UAAU,GAAG,IAAI,CAACc,OAAO,GAAGyG,YAAY,CAACrB,IAAI,GAAGqB,YAAY,CAACvB,GAAG;IACvE;IACA,IAAI,CAACrG,WAAW,GAAG,IAAI;IACvB,IAAI,CAACU,KAAK,GAAG,IAAI,CAACL,UAAU;IAC5B,MAAM,IAAI,CAAC2B,cAAc;IACzB,IAAI,CAAChC,WAAW,GAAG,KAAK;EAC1B;EACA6H,eAAeA,CAAA,EAAG;IAChB,IAAI,CAACtF,aAAa,CAACE,SAAS,CAACE,MAAM,CAAC,qCAAqC,CAAC;EAC5E;EACAmF,gBAAgBA,CAAA,EAAG;IACjB,IAAI,CAACnI,aAAa,EAAE;MAClB;IACF;IACA,MAAMoI,UAAU,GAAG,IAAIC,UAAU,CAAC,CAAC;IACnCD,UAAU,CAACE,IAAI,CAAC,CAAC,CAAChG,IAAI,CAAEiG,oBAAoB,IAAK;MAC/C,MAAMxD,QAAQ,GAAG,IAAI,CAAChE,KAAK;MAC3B,IAAI,CAACuC,QAAQ,CAACiF,oBAAoB,CAACC,OAAO,CAAC;MAC3C,IAAI,IAAI,CAACzH,KAAK,KAAKgE,QAAQ,EAAE;QAC3B,IAAI,CAACjD,IAAI,CAAC,WAAW,CAAC;QACtB,IAAI,CAACA,IAAI,CAAC,UAAU,CAAC;MACvB;IACF,CAAC,CAAC,CAAC2G,KAAK,CAAC,MAAM,CACf,CAAC,CAAC;EACJ;EACAC,YAAYA,CAAC3C,KAAK,EAAE;IAClB,MAAMhB,QAAQ,GAAG,IAAI,CAAChE,KAAK;IAC3B,IAAI,CAAC,IAAI,CAACO,QAAQ,EAAE;MAClB,IAAI,CAACgC,QAAQ,CAACyC,KAAK,CAAC;MACpB,IAAI,IAAI,CAAChF,KAAK,KAAKgE,QAAQ,EAAE;QAC3B,IAAI,CAACjD,IAAI,CAAC,WAAW,CAAC;QACtB,IAAI,CAACA,IAAI,CAAC,UAAU,CAAC;MACvB;IACF;EACF;EACA;EACA6G,YAAYA,CAAChI,GAAG,EAAEC,UAAU,EAAEC,UAAU,EAAEC,KAAK,GAAG,GAAG,EAAE;IACrD,MAAMiF,KAAK,GAAG,IAAIhG,SAAS,CAAC,QAAQY,GAAG,KAAKC,UAAU,MAAMC,UAAU,MAAMC,KAAK,GAAG,GAAG,GAAG,CAAC;IAC3F,IAAI,CAACiF,KAAK,CAACC,OAAO,EAAE;MAClB,OAAO,EAAE;IACX;IACA,OAAOD,KAAK,CAACc,YAAY,CAAC,CAAC;EAC7B;EACA;EACA+B,0BAA0BA,CAACpF,KAAK,EAAE;IAChCA,KAAK,CAACqF,wBAAwB,CAAC,CAAC;EAClC;EACAC,kBAAkBA,CAAA,EAAG;IACnB,IAAI,CAAC1E,UAAU,CAAC,CAAC;EACnB;EACA2E,mBAAmBA,CAAA,EAAG;IACpB,IAAI,CAACjI,KAAK,GAAG,GAAG;EAClB;EACAkI,iBAAiBA,CAACjE,QAAQ,EAAEkE,QAAQ,EAAE;IACpC,IAAI,CAACxI,OAAO,GAAG,CAACwI,QAAQ;IACxB,IAAI,CAACA,QAAQ,EAAE;MACb,IAAI,CAACtI,GAAG,GAAG,CAAC;MACZ,IAAI,CAACC,UAAU,GAAG,CAAC;MACnB,IAAI,CAACC,UAAU,GAAG,GAAG;MACrB,IAAI,CAACC,KAAK,GAAG,GAAG;IAClB;IACA,IAAI,CAAC,IAAI,CAACT,WAAW,EAAE;MACrB,MAAMyH,QAAQ,GAAG,IAAI,CAACjC,UAAU,CAACoD,QAAQ,CAAC;MAC1C,IAAInB,QAAQ,KAAK,IAAI,EAAE;QACrB,IAAI,CAACpH,UAAU,GAAG,IAAI,CAACK,KAAK;QAC5B,IAAI,CAACJ,GAAG,GAAGmH,QAAQ,CAACL,IAAI,CAACrB,CAAC;QAC1B,IAAI,CAACxF,UAAU,GAAGkH,QAAQ,CAACL,IAAI,CAACpB,CAAC;QACjC,IAAI,CAACxF,UAAU,GAAGiH,QAAQ,CAACL,IAAI,CAACR,CAAC;QACjC,IAAI,CAACnG,KAAK,GAAGgH,QAAQ,CAACL,IAAI,CAAClB,CAAC,GAAG,GAAG;QAClC,IAAI,CAACnC,UAAU,CAAC,CAAC;MACnB,CAAC,MAAM;QACL,IAAI,CAAC1D,UAAU,GAAGqE,QAAQ,IAAI,IAAI,GAAGA,QAAQ,GAAG,EAAE;MACpD;IACF;EACF;EACA;EACAlC,KAAKA,CAACqG,OAAO,EAAE;IACb,IAAI,IAAI,CAAChI,MAAM,EAAE;MACf,IAAI,CAACiI,IAAI,CAACtG,KAAK,CAACqG,OAAO,CAAC;IAC1B,CAAC,MAAM;MACL,IAAI,CAACE,OAAO,CAACvG,KAAK,CAACqG,OAAO,CAAC;IAC7B;EACF;EACA;EACAG,IAAIA,CAAA,EAAG;IACL,IAAIC,EAAE;IACN,MAAMC,aAAa,GAAG,IAAI,CAACrI,MAAM,GAAG,IAAI,CAACiI,IAAI,GAAG,IAAI,CAACC,OAAO;IAC5D,IAAI,IAAI,CAAC7I,QAAQ,EAAE;MACjBgJ,aAAa,CAAC1G,KAAK,CAAC;QAAE2G,aAAa,EAAE;MAAK,CAAC,CAAC;MAC5CD,aAAa,CAACF,IAAI,CAAC,CAAC;IACtB;IACA,IAAI,CAACC,EAAE,GAAG,IAAI,CAACG,QAAQ,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGH,EAAE,CAAChB,IAAI,EAAE;MACnD,IAAI,CAACmB,QAAQ,CAACC,IAAI,CAAC,CAAC;IACtB;EACF;EACA;EACAC,iBAAiBA,CAAC1I,MAAM,GAAG,KAAK,EAAE;IAChC,MAAMgH,YAAY,GAAG,IAAI,CAACpC,UAAU,CAClC,QAAQ,IAAI,CAAClF,GAAG,KAAK,IAAI,CAACC,UAAU,MAAM,IAAI,CAACC,UAAU,MAAM,IAAI,CAACC,KAAK,GAAG,GAAG,GACjF,CAAC;IACD,IAAImH,YAAY,KAAK,IAAI,EAAE;MACzB,OAAO,EAAE;IACX;IACA,QAAQhH,MAAM;MACZ,KAAK,KAAK;QACR,OAAOgH,YAAY,CAACvB,GAAG;MACzB,KAAK,MAAM;QACT,OAAOuB,YAAY,CAACrB,IAAI;MAC1B,KAAK,KAAK;QACR,OAAOqB,YAAY,CAACzB,GAAG,CAACU,MAAM;MAChC,KAAK,MAAM;QACT,OAAOe,YAAY,CAACJ,IAAI,CAACX,MAAM;MACjC,KAAK,KAAK;QACR,OAAOe,YAAY,CAAC9B,GAAG,CAACe,MAAM;MAChC,KAAK,MAAM;QACT,OAAOe,YAAY,CAACX,IAAI,CAACJ,MAAM;MACjC,KAAK,KAAK;QACR,OAAOe,YAAY,CAACjB,GAAG,CAACE,MAAM;MAChC,KAAK,MAAM;QACT,OAAOe,YAAY,CAACR,IAAI,CAACP,MAAM;MACjC;QACE,OAAO,EAAE;IACb;EACF;EACA;EACA0C,aAAaA,CAAA,EAAG;IACd,OAAO,IAAI,CAAC1H,KAAK,CAAC0H,aAAa,CAAC,CAAC;EACnC;EACA;EACAC,OAAOA,CAAA,EAAG;IACR,OAAO,IAAI,CAACzJ,qBAAqB,CAACyJ,OAAO,CAAC,CAAC;EAC7C;EACA;EACAC,cAAcA,CAAA,EAAG;IACf,IAAI,CAAC,IAAI,CAAC5I,MAAM,IAAI,CAAC,IAAI,CAACe,QAAQ,CAAC8H,KAAK,EAAE;MACxC,IAAI,CAACN,QAAQ,CAACO,IAAI,CAAC,CAAC;MACpB,IAAI,CAAChI,gBAAgB,CAAC,eAAe,EAAE,MAAM,IAAI,CAACE,KAAK,CAAC4H,cAAc,CAAC,CAAC,EAAE;QAAEG,IAAI,EAAE;MAAK,CAAC,CAAC;MACzF,IAAI,CAAC,IAAI,CAAC3I,QAAQ,EAAE;QAClB,IAAI,CAAClB,qBAAqB,CAACuF,gBAAgB,CAAC,CAAC;MAC/C;MACA,OAAO,KAAK;IACd;IACA,OAAO,IAAI,CAACzD,KAAK,CAAC4H,cAAc,CAAC,CAAC;EACpC;EACA;EACAI,iBAAiBA,CAACC,OAAO,EAAE;IACzB,IAAI,CAACjI,KAAK,CAACgI,iBAAiB,CAACC,OAAO,CAAC;IACrC,IAAI,CAAC/J,qBAAqB,CAACmC,cAAc,CAAC,CAAC;EAC7C;EACA6H,MAAMA,CAAA,EAAG;IACP,MAAMC,WAAW,GAAG,IAAI,CAACzJ,UAAU;IACnC,MAAM0J,WAAW,GAAG,GAAG,GAAG,IAAI,CAACzJ,UAAU;IACzC,MAAMa,QAAQ,GAAG6I,KAAK,CAACC,OAAO,CAAC,IAAI,CAAC9I,QAAQ,CAAC,GAAG,IAAI,CAACA,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAAC+I,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAAE3E,KAAK,IAAKA,KAAK,CAAC4E,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;IAC/H,MAAMC,WAAW,GAAGhL,IAAI;AAC5B;AACA;AACA,gBAAgBL,QAAQ,CAAC;MACnB,cAAc,EAAE,IAAI;MACpB,sBAAsB,EAAE,IAAI,CAAC2B,MAAM;MACnC,wBAAwB,EAAE,IAAI,CAACI,QAAQ;MACvC,uBAAuB,EAAE,IAAI,CAACf;IAChC,CAAC,CAAC;AACN,wBAAwB,IAAI,CAACe,QAAQ,GAAG,MAAM,GAAG,OAAO;AACxD;AACA,mBAAmB,IAAI,CAACJ,MAAM,GAAG,GAAG,GAAG,IAAI;AAC3C;AACA,UAAU,IAAI,CAACA,MAAM,GAAGtB,IAAI;AAC5B;AACA,qCAAqC,IAAI,CAACoB,KAAK;AAC/C;AACA,aAAa,GAAG,IAAI;AACpB;AACA;AACA;AACA;AACA,kBAAkBlB,QAAQ,CAAC;MAAE+K,eAAe,EAAE,IAAI,CAAClC,YAAY,CAAC,IAAI,CAAChI,GAAG,EAAE,GAAG,EAAE,GAAG;IAAE,CAAC,CAAC;AACtF,yBAAyB,IAAI,CAAC6D,cAAc;AAC5C,uBAAuB,IAAI,CAACoB,eAAe;AAC3C;AACA;AACA;AACA,oBAAoBrG,QAAQ,CAAC;MACvB,2BAA2B,EAAE,IAAI;MACjC,qCAAqC,EAAE,IAAI,CAACiB;IAC9C,CAAC,CAAC;AACN,oBAAoBV,QAAQ,CAAC;MACvBgL,GAAG,EAAE,GAAGR,WAAW,GAAG;MACtBS,IAAI,EAAE,GAAGV,WAAW,GAAG;MACvBQ,eAAe,EAAE,IAAI,CAAClC,YAAY,CAAC,IAAI,CAAChI,GAAG,EAAE,IAAI,CAACC,UAAU,EAAE,IAAI,CAACC,UAAU,EAAE,IAAI,CAACC,KAAK;IAC3F,CAAC,CAAC;AACN;AACA;AACA,uBAAuBjB,SAAS,CAAC,IAAI,CAACyB,QAAQ,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC;AAC9D,uBAAuB,IAAI,CAAC4D,iBAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,IAAI,CAACX,aAAa;AAC/C,2BAA2B,IAAI,CAACqB,eAAe;AAC/C;AACA;AACA;AACA;AACA,wBAAwB9F,QAAQ,CAAC;MAC3BiL,IAAI,EAAE,GAAG,IAAI,CAACpK,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,CAACA,GAAG,CAAC;IACtD,CAAC,CAAC;AACN;AACA;AACA;AACA;AACA;AACA,gCAAgC,GAAGyG,IAAI,CAACC,KAAK,CAAC,IAAI,CAAC1G,GAAG,CAAC,EAAE;AACzD,2BAA2Bd,SAAS,CAAC,IAAI,CAACyB,QAAQ,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC;AAClE,2BAA2B,IAAI,CAAC2D,gBAAgB;AAChD;AACA;AACA;AACA,cAAc,IAAI,CAACzD,OAAO,GAAG5B,IAAI;AACjC;AACA;AACA;AACA,oCAAoC,IAAI,CAAC2D,eAAe;AACxD,iCAAiC,IAAI,CAACqC,eAAe;AACrD;AACA;AACA;AACA,8BAA8B9F,QAAQ,CAAC;MACjCkL,eAAe,EAAE;AACvB;AACA,4BAA4B,IAAI,CAACrC,YAAY,CAAC,IAAI,CAAChI,GAAG,EAAE,IAAI,CAACC,UAAU,EAAE,IAAI,CAACC,UAAU,EAAE,CAAC,CAAC;AAC5F,4BAA4B,IAAI,CAAC8H,YAAY,CAAC,IAAI,CAAChI,GAAG,EAAE,IAAI,CAACC,UAAU,EAAE,IAAI,CAACC,UAAU,EAAE,GAAG,CAAC;AAC9F;IACI,CAAC,CAAC;AACN;AACA;AACA;AACA;AACA,8BAA8Bf,QAAQ,CAAC;MACjCiL,IAAI,EAAE,GAAG,IAAI,CAACjK,KAAK;IACrB,CAAC,CAAC;AACN;AACA;AACA;AACA;AACA;AACA,sCAAsCsG,IAAI,CAACC,KAAK,CAAC,IAAI,CAACvG,KAAK,CAAC;AAC5D,iCAAiCjB,SAAS,CAAC,IAAI,CAACyB,QAAQ,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC;AACxE,iCAAiC,IAAI,CAACsD,kBAAkB;AACxD;AACA;AACA,iBAAiB,GAAG,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,IAAI,CAACtE,QAAQ,CAAC2K,IAAI,CAAC,MAAM,CAAC;AACnD,oBAAoBnL,QAAQ,CAAC;MACvB,iBAAiB,EAAE,IAAI,CAAC6I,YAAY,CAAC,IAAI,CAAChI,GAAG,EAAE,IAAI,CAACC,UAAU,EAAE,IAAI,CAACC,UAAU,EAAE,IAAI,CAACC,KAAK;IAC7F,CAAC,CAAC;AACN,qBAAqB,IAAI,CAAC0B,UAAU;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,IAAI,CAACnB,IAAI;AAC5B;AACA;AACA;AACA;AACA,oBAAoB,IAAI,CAACZ,OAAO,GAAG,EAAE,GAAG,IAAI,CAACC,UAAU;AACvD,wBAAwB,IAAI,CAACkB,QAAQ;AACrC,wBAAwB,IAAI,CAACN,QAAQ;AACrC,yBAAyB,IAAI,CAAChB,QAAQ,CAAC2K,IAAI,CAAC,cAAc,CAAC;AAC3D,uBAAuB,IAAI,CAAC1F,kBAAkB;AAC9C,yBAAyB,IAAI,CAACJ,iBAAiB;AAC/C,wBAAwB,IAAI,CAACG,gBAAgB;AAC7C,0BAA0B,IAAI,CAACG,kBAAkB;AACjD,uBAAuB,IAAI,CAACmD,0BAA0B;AACtD,wBAAwB,IAAI,CAACA,0BAA0B;AACvD;AACA;AACA;AACA,cAAc,CAAC,IAAI,CAACxH,cAAc,GAAGxB,IAAI;AACzC;AACA;AACA,iCAAiC,IAAI,CAACU,QAAQ,CAAC2K,IAAI,CAAC,mBAAmB,CAAC;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,IAAI,CAAChI,kBAAkB;AACpD,+BAA+B,IAAI,CAAC2F,0BAA0B;AAC9D,gCAAgC,IAAI,CAACA,0BAA0B;AAC/D;AACA,sBAAsB,IAAI,CAACzB,aAAa,CAAC,IAAI,CAAClG,MAAM,CAAC;AACrD;AACA,iBAAiB,GAAG,EAAE;AACtB,cAAcjB,aAAa,GAAGJ,IAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,IAAI,CAACuI,gBAAgB;AAClD,+BAA+B,IAAI,CAACS,0BAA0B;AAC9D,gCAAgC,IAAI,CAACA,0BAA0B;AAC/D;AACA;AACA;AACA;AACA,8BAA8B,IAAI,CAACtI,QAAQ,CAAC2K,IAAI,CAAC,2BAA2B,CAAC;AAC7E;AACA;AACA,iBAAiB,GAAG,EAAE;AACtB;AACA;AACA;AACA,UAAUvJ,QAAQ,CAAC2B,MAAM,GAAG,CAAC,GAAGzD,IAAI;AACpC;AACA,kBAAkB8B,QAAQ,CAACwJ,GAAG,CAAEC,MAAM,IAAK;MACrC,MAAMC,WAAW,GAAG,IAAI,CAACvF,UAAU,CAACsF,MAAM,CAAC;MAC3C,IAAI,CAACC,WAAW,EAAE;QAChBC,OAAO,CAACC,KAAK,CAAC,kCAAkCH,MAAM,GAAG,EAAE,IAAI,CAAC;QAChE,OAAO,EAAE;MACX;MACA,OAAOvL,IAAI;AACjB;AACA;AACA;AACA,iCAAiCC,SAAS,CAAC,IAAI,CAACyB,QAAQ,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC;AACxE;AACA,mCAAmC6J,MAAM;AACzC,+BAA+B,MAAM,IAAI,CAACzC,YAAY,CAACyC,MAAM,CAAC;AAC9D,iCAAkC3H,KAAK,IAAK,CAAC,IAAI,CAAClC,QAAQ,IAAIkC,KAAK,CAACwB,GAAG,KAAK,OAAO,IAAI,IAAI,CAAC1B,QAAQ,CAAC8H,WAAW,CAACxE,IAAI,CAAC;AACtH;AACA;AACA;AACA,gCAAgC9G,QAAQ,CAAC;QAAE+K,eAAe,EAAEO,WAAW,CAACxE;MAAK,CAAC,CAAC;AAC/E;AACA;AACA,mBAAmB;IACf,CAAC,CAAC;AACN;AACA,aAAa,GAAG,EAAE;AAClB;AACA,KAAK;IACD,IAAI,IAAI,CAAC1F,MAAM,EAAE;MACf,OAAO0J,WAAW;IACpB;IACA,OAAOhL,IAAI;AACf;AACA;AACA,wBAAwB,IAAI,CAAC0B,QAAQ,GAAG,MAAM,GAAG,OAAO;AACxD,8BAA8B,IAAI;AAClC,oBAAoB,IAAI,CAACA,QAAQ;AACjC,iBAAiB,IAAI,CAACC,KAAK;AAC3B,yBAAyB,IAAI,CAAC2G,eAAe;AAC7C;AACA;AACA;AACA;AACA,kBAAkB3I,QAAQ,CAAC;MACrB,yBAAyB,EAAE,IAAI;MAC/B,mCAAmC,EAAE,IAAI,CAAC+B,QAAQ;MAClD,gCAAgC,EAAE,IAAI,CAACH,IAAI,KAAK,OAAO;MACvD,iCAAiC,EAAE,IAAI,CAACA,IAAI,KAAK,QAAQ;MACzD,gCAAgC,EAAE,IAAI,CAACA,IAAI,KAAK,OAAO;MACvD,gCAAgC,EAAE,IAAI,CAACV,OAAO;MAC9C,kCAAkC,EAAE,IAAI,CAACF,QAAQ;MACjD,8BAA8B,EAAE;IAClC,CAAC,CAAC;AACN,kBAAkBT,QAAQ,CAAC;MACrBiG,KAAK,EAAE,IAAI,CAAC4C,YAAY,CAAC,IAAI,CAAChI,GAAG,EAAE,IAAI,CAACC,UAAU,EAAE,IAAI,CAACC,UAAU,EAAE,IAAI,CAACC,KAAK;IACjF,CAAC,CAAC;AACN;AACA;AACA;AACA,iCAAiC,IAAI,CAACE,KAAK;AAC3C;AACA;AACA,UAAU4J,WAAW;AACrB;AACA,KAAK;EACH;AACF,CAAC;AACD1K,aAAa,CAACqL,MAAM,GAAG,CAACnM,wBAAwB,EAAER,2BAA2B,CAAC;AAC9EsB,aAAa,CAACsL,YAAY,GAAG;EAC3B,iBAAiB,EAAExM,aAAa;EAChC,WAAW,EAAEF,QAAQ;EACrB,aAAa,EAAEJ,UAAU;EACzB,SAAS,EAAEQ,MAAM;EACjB,UAAU,EAAEV,OAAO;EACnB,oBAAoB,EAAED;AACxB,CAAC;AACDe,eAAe,CAAC,CACdI,KAAK,CAAC,gBAAgB,CAAC,CACxB,EAAEQ,aAAa,CAACuL,SAAS,EAAE,MAAM,EAAE,CAAC,CAAC;AACtCnM,eAAe,CAAC,CACdI,KAAK,CAAC,iBAAiB,CAAC,CACzB,EAAEQ,aAAa,CAACuL,SAAS,EAAE,OAAO,EAAE,CAAC,CAAC;AACvCnM,eAAe,CAAC,CACdI,KAAK,CAAC,iBAAiB,CAAC,CACzB,EAAEQ,aAAa,CAACuL,SAAS,EAAE,UAAU,EAAE,CAAC,CAAC;AAC1CnM,eAAe,CAAC,CACdI,KAAK,CAAC,mBAAmB,CAAC,CAC3B,EAAEQ,aAAa,CAACuL,SAAS,EAAE,eAAe,EAAE,CAAC,CAAC;AAC/CnM,eAAe,CAAC,CACdI,KAAK,CAAC,mBAAmB,CAAC,CAC3B,EAAEQ,aAAa,CAACuL,SAAS,EAAE,SAAS,EAAE,CAAC,CAAC;AACzCnM,eAAe,CAAC,CACdK,KAAK,CAAC,CAAC,CACR,EAAEO,aAAa,CAACuL,SAAS,EAAE,UAAU,EAAE,CAAC,CAAC;AAC1CnM,eAAe,CAAC,CACdK,KAAK,CAAC,CAAC,CACR,EAAEO,aAAa,CAACuL,SAAS,EAAE,sBAAsB,EAAE,CAAC,CAAC;AACtDnM,eAAe,CAAC,CACdK,KAAK,CAAC,CAAC,CACR,EAAEO,aAAa,CAACuL,SAAS,EAAE,SAAS,EAAE,CAAC,CAAC;AACzCnM,eAAe,CAAC,CACdK,KAAK,CAAC,CAAC,CACR,EAAEO,aAAa,CAACuL,SAAS,EAAE,YAAY,EAAE,CAAC,CAAC;AAC5CnM,eAAe,CAAC,CACdK,KAAK,CAAC,CAAC,CACR,EAAEO,aAAa,CAACuL,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;AACrCnM,eAAe,CAAC,CACdK,KAAK,CAAC,CAAC,CACR,EAAEO,aAAa,CAACuL,SAAS,EAAE,YAAY,EAAE,CAAC,CAAC;AAC5CnM,eAAe,CAAC,CACdK,KAAK,CAAC,CAAC,CACR,EAAEO,aAAa,CAACuL,SAAS,EAAE,YAAY,EAAE,CAAC,CAAC;AAC5CnM,eAAe,CAAC,CACdK,KAAK,CAAC,CAAC,CACR,EAAEO,aAAa,CAACuL,SAAS,EAAE,OAAO,EAAE,CAAC,CAAC;AACvCnM,eAAe,CAAC,CACdG,QAAQ,CAAC,CAAC,CACX,EAAES,aAAa,CAACuL,SAAS,EAAE,OAAO,EAAE,CAAC,CAAC;AACvCnM,eAAe,CAAC,CACdX,YAAY,CAAC,CAAC,CACf,EAAEuB,aAAa,CAACuL,SAAS,EAAE,cAAc,EAAE,CAAC,CAAC;AAC9CnM,eAAe,CAAC,CACdG,QAAQ,CAAC,CAAC,CACX,EAAES,aAAa,CAACuL,SAAS,EAAE,OAAO,EAAE,CAAC,CAAC;AACvCnM,eAAe,CAAC,CACdG,QAAQ,CAAC,CAAC,CACX,EAAES,aAAa,CAACuL,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC;AACxCnM,eAAe,CAAC,CACdG,QAAQ,CAAC;EAAEiM,IAAI,EAAEC,OAAO;EAAEC,OAAO,EAAE;AAAK,CAAC,CAAC,CAC3C,EAAE1L,aAAa,CAACuL,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC;AACxCnM,eAAe,CAAC,CACdG,QAAQ,CAAC;EAAEmM,OAAO,EAAE;AAAK,CAAC,CAAC,CAC5B,EAAE1L,aAAa,CAACuL,SAAS,EAAE,MAAM,EAAE,CAAC,CAAC;AACtCnM,eAAe,CAAC,CACdG,QAAQ,CAAC;EAAEoM,SAAS,EAAE,kBAAkB;EAAEH,IAAI,EAAEC;AAAQ,CAAC,CAAC,CAC3D,EAAEzL,aAAa,CAACuL,SAAS,EAAE,gBAAgB,EAAE,CAAC,CAAC;AAChDnM,eAAe,CAAC,CACdG,QAAQ,CAAC,CAAC,CACX,EAAES,aAAa,CAACuL,SAAS,EAAE,MAAM,EAAE,CAAC,CAAC;AACtCnM,eAAe,CAAC,CACdG,QAAQ,CAAC;EAAEiM,IAAI,EAAEC,OAAO;EAAEC,OAAO,EAAE;AAAK,CAAC,CAAC,CAC3C,EAAE1L,aAAa,CAACuL,SAAS,EAAE,UAAU,EAAE,CAAC,CAAC;AAC1CnM,eAAe,CAAC,CACdG,QAAQ,CAAC;EAAEiM,IAAI,EAAEC;AAAQ,CAAC,CAAC,CAC5B,EAAEzL,aAAa,CAACuL,SAAS,EAAE,OAAO,EAAE,CAAC,CAAC;AACvCnM,eAAe,CAAC,CACdG,QAAQ,CAAC;EAAEiM,IAAI,EAAEC;AAAQ,CAAC,CAAC,CAC5B,EAAEzL,aAAa,CAACuL,SAAS,EAAE,SAAS,EAAE,CAAC,CAAC;AACzCnM,eAAe,CAAC,CACdG,QAAQ,CAAC;EAAEiM,IAAI,EAAEC;AAAQ,CAAC,CAAC,CAC5B,EAAEzL,aAAa,CAACuL,SAAS,EAAE,WAAW,EAAE,CAAC,CAAC;AAC3CnM,eAAe,CAAC,CACdG,QAAQ,CAAC,CAAC,CACX,EAAES,aAAa,CAACuL,SAAS,EAAE,UAAU,EAAE,CAAC,CAAC;AAC1CnM,eAAe,CAAC,CACdG,QAAQ,CAAC;EAAEmM,OAAO,EAAE;AAAK,CAAC,CAAC,CAC5B,EAAE1L,aAAa,CAACuL,SAAS,EAAE,MAAM,EAAE,CAAC,CAAC;AACtCnM,eAAe,CAAC,CACdG,QAAQ,CAAC;EAAEiM,IAAI,EAAEC,OAAO;EAAEC,OAAO,EAAE;AAAK,CAAC,CAAC,CAC3C,EAAE1L,aAAa,CAACuL,SAAS,EAAE,UAAU,EAAE,CAAC,CAAC;AAC1CnM,eAAe,CAAC,CACdE,YAAY,CAAC;EAAEsM,OAAO,EAAE;AAAM,CAAC,CAAC,CACjC,EAAE5L,aAAa,CAACuL,SAAS,EAAE,iBAAiB,EAAE,CAAC,CAAC;AACjDnM,eAAe,CAAC,CACdH,KAAK,CAAC,QAAQ,EAAE;EAAE4M,oBAAoB,EAAE;AAAK,CAAC,CAAC,CAChD,EAAE7L,aAAa,CAACuL,SAAS,EAAE,oBAAoB,EAAE,CAAC,CAAC;AACpDnM,eAAe,CAAC,CACdH,KAAK,CAAC,SAAS,EAAE;EAAE4M,oBAAoB,EAAE;AAAK,CAAC,CAAC,CACjD,EAAE7L,aAAa,CAACuL,SAAS,EAAE,qBAAqB,EAAE,CAAC,CAAC;AACrDnM,eAAe,CAAC,CACdH,KAAK,CAAC,OAAO,CAAC,CACf,EAAEe,aAAa,CAACuL,SAAS,EAAE,mBAAmB,EAAE,CAAC,CAAC;AAEnD,SACEvL,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}