{"ast":null,"code":"import { tree_styles_default } from \"./chunk.G7B7WU5W.js\";\nimport { SlTreeItem } from \"./chunk.CMCE2D3S.js\";\nimport { clamp } from \"./chunk.HF7GESMZ.js\";\nimport { watch } from \"./chunk.2FB5TK5H.js\";\nimport { component_styles_default } from \"./chunk.TUVJKY7S.js\";\nimport { ShoelaceElement } from \"./chunk.5THGRZAA.js\";\nimport { __decorateClass } from \"./chunk.IFDWM6P4.js\";\n\n// src/components/tree/tree.component.ts\nimport { html } from \"lit\";\nimport { property, query } from \"lit/decorators.js\";\nfunction syncCheckboxes(changedTreeItem, initialSync = false) {\n  function syncParentItem(treeItem) {\n    const children = treeItem.getChildrenItems({\n      includeDisabled: false\n    });\n    if (children.length) {\n      const allChecked = children.every(item => item.selected);\n      const allUnchecked = children.every(item => !item.selected && !item.indeterminate);\n      treeItem.selected = allChecked;\n      treeItem.indeterminate = !allChecked && !allUnchecked;\n    }\n  }\n  function syncAncestors(treeItem) {\n    const parentItem = treeItem.parentElement;\n    if (SlTreeItem.isTreeItem(parentItem)) {\n      syncParentItem(parentItem);\n      syncAncestors(parentItem);\n    }\n  }\n  function syncDescendants(treeItem) {\n    for (const childItem of treeItem.getChildrenItems()) {\n      childItem.selected = initialSync ? treeItem.selected || childItem.selected : !childItem.disabled && treeItem.selected;\n      syncDescendants(childItem);\n    }\n    if (initialSync) {\n      syncParentItem(treeItem);\n    }\n  }\n  syncDescendants(changedTreeItem);\n  syncAncestors(changedTreeItem);\n}\nvar SlTree = class extends ShoelaceElement {\n  constructor() {\n    super();\n    this.selection = \"single\";\n    this.clickTarget = null;\n    // Initializes new items by setting the `selectable` property and the expanded/collapsed icons if any\n    this.initTreeItem = item => {\n      item.selectable = this.selection === \"multiple\";\n      [\"expand\", \"collapse\"].filter(status => !!this.querySelector(`[slot=\"${status}-icon\"]`)).forEach(status => {\n        const existingIcon = item.querySelector(`[slot=\"${status}-icon\"]`);\n        const expandButtonIcon = this.getExpandButtonIcon(status);\n        if (!expandButtonIcon) return;\n        if (existingIcon === null) {\n          item.append(expandButtonIcon);\n        } else if (existingIcon.hasAttribute(\"data-default\")) {\n          existingIcon.replaceWith(expandButtonIcon);\n        } else {}\n      });\n    };\n    this.handleTreeChanged = mutations => {\n      for (const mutation of mutations) {\n        const addedNodes = [...mutation.addedNodes].filter(SlTreeItem.isTreeItem);\n        const removedNodes = [...mutation.removedNodes].filter(SlTreeItem.isTreeItem);\n        addedNodes.forEach(this.initTreeItem);\n        if (this.lastFocusedItem && removedNodes.includes(this.lastFocusedItem)) {\n          this.lastFocusedItem = null;\n        }\n      }\n    };\n    this.handleFocusOut = event => {\n      const relatedTarget = event.relatedTarget;\n      if (!relatedTarget || !this.contains(relatedTarget)) {\n        this.tabIndex = 0;\n      }\n    };\n    this.handleFocusIn = event => {\n      const target = event.target;\n      if (event.target === this) {\n        this.focusItem(this.lastFocusedItem || this.getAllTreeItems()[0]);\n      }\n      if (SlTreeItem.isTreeItem(target) && !target.disabled) {\n        if (this.lastFocusedItem) {\n          this.lastFocusedItem.tabIndex = -1;\n        }\n        this.lastFocusedItem = target;\n        this.tabIndex = -1;\n        target.tabIndex = 0;\n      }\n    };\n    this.addEventListener(\"focusin\", this.handleFocusIn);\n    this.addEventListener(\"focusout\", this.handleFocusOut);\n    this.addEventListener(\"sl-lazy-change\", this.handleSlotChange);\n  }\n  async connectedCallback() {\n    super.connectedCallback();\n    this.setAttribute(\"role\", \"tree\");\n    this.setAttribute(\"tabindex\", \"0\");\n    await this.updateComplete;\n    this.mutationObserver = new MutationObserver(this.handleTreeChanged);\n    this.mutationObserver.observe(this, {\n      childList: true,\n      subtree: true\n    });\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.mutationObserver.disconnect();\n  }\n  // Generates a clone of the expand icon element to use for each tree item\n  getExpandButtonIcon(status) {\n    const slot = status === \"expand\" ? this.expandedIconSlot : this.collapsedIconSlot;\n    const icon = slot.assignedElements({\n      flatten: true\n    })[0];\n    if (icon) {\n      const clone = icon.cloneNode(true);\n      [clone, ...clone.querySelectorAll(\"[id]\")].forEach(el => el.removeAttribute(\"id\"));\n      clone.setAttribute(\"data-default\", \"\");\n      clone.slot = `${status}-icon`;\n      return clone;\n    }\n    return null;\n  }\n  selectItem(selectedItem) {\n    const previousSelection = [...this.selectedItems];\n    if (this.selection === \"multiple\") {\n      selectedItem.selected = !selectedItem.selected;\n      if (selectedItem.lazy) {\n        selectedItem.expanded = true;\n      }\n      syncCheckboxes(selectedItem);\n    } else if (this.selection === \"single\" || selectedItem.isLeaf) {\n      const items = this.getAllTreeItems();\n      for (const item of items) {\n        item.selected = item === selectedItem;\n      }\n    } else if (this.selection === \"leaf\") {\n      selectedItem.expanded = !selectedItem.expanded;\n    }\n    const nextSelection = this.selectedItems;\n    if (previousSelection.length !== nextSelection.length || nextSelection.some(item => !previousSelection.includes(item))) {\n      Promise.all(nextSelection.map(el => el.updateComplete)).then(() => {\n        this.emit(\"sl-selection-change\", {\n          detail: {\n            selection: nextSelection\n          }\n        });\n      });\n    }\n  }\n  getAllTreeItems() {\n    return [...this.querySelectorAll(\"sl-tree-item\")];\n  }\n  focusItem(item) {\n    item == null ? void 0 : item.focus();\n  }\n  handleKeyDown(event) {\n    if (![\"ArrowDown\", \"ArrowUp\", \"ArrowRight\", \"ArrowLeft\", \"Home\", \"End\", \"Enter\", \" \"].includes(event.key)) {\n      return;\n    }\n    if (event.composedPath().some(el => {\n      var _a;\n      return [\"input\", \"textarea\"].includes((_a = el == null ? void 0 : el.tagName) == null ? void 0 : _a.toLowerCase());\n    })) {\n      return;\n    }\n    const items = this.getFocusableItems();\n    const isLtr = this.matches(\":dir(ltr)\");\n    const isRtl = this.matches(\":dir(rtl)\");\n    if (items.length > 0) {\n      event.preventDefault();\n      const activeItemIndex = items.findIndex(item => item.matches(\":focus\"));\n      const activeItem = items[activeItemIndex];\n      const focusItemAt = index => {\n        const item = items[clamp(index, 0, items.length - 1)];\n        this.focusItem(item);\n      };\n      const toggleExpand = expanded => {\n        activeItem.expanded = expanded;\n      };\n      if (event.key === \"ArrowDown\") {\n        focusItemAt(activeItemIndex + 1);\n      } else if (event.key === \"ArrowUp\") {\n        focusItemAt(activeItemIndex - 1);\n      } else if (isLtr && event.key === \"ArrowRight\" || isRtl && event.key === \"ArrowLeft\") {\n        if (!activeItem || activeItem.disabled || activeItem.expanded || activeItem.isLeaf && !activeItem.lazy) {\n          focusItemAt(activeItemIndex + 1);\n        } else {\n          toggleExpand(true);\n        }\n      } else if (isLtr && event.key === \"ArrowLeft\" || isRtl && event.key === \"ArrowRight\") {\n        if (!activeItem || activeItem.disabled || activeItem.isLeaf || !activeItem.expanded) {\n          focusItemAt(activeItemIndex - 1);\n        } else {\n          toggleExpand(false);\n        }\n      } else if (event.key === \"Home\") {\n        focusItemAt(0);\n      } else if (event.key === \"End\") {\n        focusItemAt(items.length - 1);\n      } else if (event.key === \"Enter\" || event.key === \" \") {\n        if (!activeItem.disabled) {\n          this.selectItem(activeItem);\n        }\n      }\n    }\n  }\n  handleClick(event) {\n    const target = event.target;\n    const treeItem = target.closest(\"sl-tree-item\");\n    const isExpandButton = event.composedPath().some(el => {\n      var _a;\n      return (_a = el == null ? void 0 : el.classList) == null ? void 0 : _a.contains(\"tree-item__expand-button\");\n    });\n    if (!treeItem || treeItem.disabled || target !== this.clickTarget) {\n      return;\n    }\n    if (isExpandButton) {\n      treeItem.expanded = !treeItem.expanded;\n    } else {\n      this.selectItem(treeItem);\n    }\n  }\n  handleMouseDown(event) {\n    this.clickTarget = event.target;\n  }\n  handleSlotChange() {\n    const items = this.getAllTreeItems();\n    items.forEach(this.initTreeItem);\n  }\n  async handleSelectionChange() {\n    const isSelectionMultiple = this.selection === \"multiple\";\n    const items = this.getAllTreeItems();\n    this.setAttribute(\"aria-multiselectable\", isSelectionMultiple ? \"true\" : \"false\");\n    for (const item of items) {\n      item.selectable = isSelectionMultiple;\n    }\n    if (isSelectionMultiple) {\n      await this.updateComplete;\n      [...this.querySelectorAll(\":scope > sl-tree-item\")].forEach(treeItem => syncCheckboxes(treeItem, true));\n    }\n  }\n  /** @internal Returns the list of tree items that are selected in the tree. */\n  get selectedItems() {\n    const items = this.getAllTreeItems();\n    const isSelected = item => item.selected;\n    return items.filter(isSelected);\n  }\n  /** @internal Gets focusable tree items in the tree. */\n  getFocusableItems() {\n    const items = this.getAllTreeItems();\n    const collapsedItems = /* @__PURE__ */new Set();\n    return items.filter(item => {\n      var _a;\n      if (item.disabled) return false;\n      const parent = (_a = item.parentElement) == null ? void 0 : _a.closest(\"[role=treeitem]\");\n      if (parent && (!parent.expanded || parent.loading || collapsedItems.has(parent))) {\n        collapsedItems.add(item);\n      }\n      return !collapsedItems.has(item);\n    });\n  }\n  render() {\n    return html`\n      <div\n        part=\"base\"\n        class=\"tree\"\n        @click=${this.handleClick}\n        @keydown=${this.handleKeyDown}\n        @mousedown=${this.handleMouseDown}\n      >\n        <slot @slotchange=${this.handleSlotChange}></slot>\n        <span hidden aria-hidden=\"true\"><slot name=\"expand-icon\"></slot></span>\n        <span hidden aria-hidden=\"true\"><slot name=\"collapse-icon\"></slot></span>\n      </div>\n    `;\n  }\n};\nSlTree.styles = [component_styles_default, tree_styles_default];\n__decorateClass([query(\"slot:not([name])\")], SlTree.prototype, \"defaultSlot\", 2);\n__decorateClass([query(\"slot[name=expand-icon]\")], SlTree.prototype, \"expandedIconSlot\", 2);\n__decorateClass([query(\"slot[name=collapse-icon]\")], SlTree.prototype, \"collapsedIconSlot\", 2);\n__decorateClass([property()], SlTree.prototype, \"selection\", 2);\n__decorateClass([watch(\"selection\")], SlTree.prototype, \"handleSelectionChange\", 1);\nexport { SlTree };","map":{"version":3,"names":["tree_styles_default","SlTreeItem","clamp","watch","component_styles_default","ShoelaceElement","__decorateClass","html","property","query","syncCheckboxes","changedTreeItem","initialSync","syncParentItem","treeItem","children","getChildrenItems","includeDisabled","length","allChecked","every","item","selected","allUnchecked","indeterminate","syncAncestors","parentItem","parentElement","isTreeItem","syncDescendants","childItem","disabled","SlTree","constructor","selection","clickTarget","initTreeItem","selectable","filter","status","querySelector","forEach","existingIcon","expandButtonIcon","getExpandButtonIcon","append","hasAttribute","replaceWith","handleTreeChanged","mutations","mutation","addedNodes","removedNodes","lastFocusedItem","includes","handleFocusOut","event","relatedTarget","contains","tabIndex","handleFocusIn","target","focusItem","getAllTreeItems","addEventListener","handleSlotChange","connectedCallback","setAttribute","updateComplete","mutationObserver","MutationObserver","observe","childList","subtree","disconnectedCallback","disconnect","slot","expandedIconSlot","collapsedIconSlot","icon","assignedElements","flatten","clone","cloneNode","querySelectorAll","el","removeAttribute","selectItem","selectedItem","previousSelection","selectedItems","lazy","expanded","isLeaf","items","nextSelection","some","Promise","all","map","then","emit","detail","focus","handleKeyDown","key","composedPath","_a","tagName","toLowerCase","getFocusableItems","isLtr","matches","isRtl","preventDefault","activeItemIndex","findIndex","activeItem","focusItemAt","index","toggleExpand","handleClick","closest","isExpandButton","classList","handleMouseDown","handleSelectionChange","isSelectionMultiple","isSelected","collapsedItems","Set","parent","loading","has","add","render","styles","prototype"],"sources":["C:/Users/ASUS/Project/Web Project/Greekforgreek_project/React project/movie_search_app/node_modules/@shoelace-style/shoelace/dist/chunks/chunk.HWE2L2VL.js"],"sourcesContent":["import {\n  tree_styles_default\n} from \"./chunk.G7B7WU5W.js\";\nimport {\n  SlTreeItem\n} from \"./chunk.CMCE2D3S.js\";\nimport {\n  clamp\n} from \"./chunk.HF7GESMZ.js\";\nimport {\n  watch\n} from \"./chunk.2FB5TK5H.js\";\nimport {\n  component_styles_default\n} from \"./chunk.TUVJKY7S.js\";\nimport {\n  ShoelaceElement\n} from \"./chunk.5THGRZAA.js\";\nimport {\n  __decorateClass\n} from \"./chunk.IFDWM6P4.js\";\n\n// src/components/tree/tree.component.ts\nimport { html } from \"lit\";\nimport { property, query } from \"lit/decorators.js\";\nfunction syncCheckboxes(changedTreeItem, initialSync = false) {\n  function syncParentItem(treeItem) {\n    const children = treeItem.getChildrenItems({ includeDisabled: false });\n    if (children.length) {\n      const allChecked = children.every((item) => item.selected);\n      const allUnchecked = children.every((item) => !item.selected && !item.indeterminate);\n      treeItem.selected = allChecked;\n      treeItem.indeterminate = !allChecked && !allUnchecked;\n    }\n  }\n  function syncAncestors(treeItem) {\n    const parentItem = treeItem.parentElement;\n    if (SlTreeItem.isTreeItem(parentItem)) {\n      syncParentItem(parentItem);\n      syncAncestors(parentItem);\n    }\n  }\n  function syncDescendants(treeItem) {\n    for (const childItem of treeItem.getChildrenItems()) {\n      childItem.selected = initialSync ? treeItem.selected || childItem.selected : !childItem.disabled && treeItem.selected;\n      syncDescendants(childItem);\n    }\n    if (initialSync) {\n      syncParentItem(treeItem);\n    }\n  }\n  syncDescendants(changedTreeItem);\n  syncAncestors(changedTreeItem);\n}\nvar SlTree = class extends ShoelaceElement {\n  constructor() {\n    super();\n    this.selection = \"single\";\n    this.clickTarget = null;\n    // Initializes new items by setting the `selectable` property and the expanded/collapsed icons if any\n    this.initTreeItem = (item) => {\n      item.selectable = this.selection === \"multiple\";\n      [\"expand\", \"collapse\"].filter((status) => !!this.querySelector(`[slot=\"${status}-icon\"]`)).forEach((status) => {\n        const existingIcon = item.querySelector(`[slot=\"${status}-icon\"]`);\n        const expandButtonIcon = this.getExpandButtonIcon(status);\n        if (!expandButtonIcon)\n          return;\n        if (existingIcon === null) {\n          item.append(expandButtonIcon);\n        } else if (existingIcon.hasAttribute(\"data-default\")) {\n          existingIcon.replaceWith(expandButtonIcon);\n        } else {\n        }\n      });\n    };\n    this.handleTreeChanged = (mutations) => {\n      for (const mutation of mutations) {\n        const addedNodes = [...mutation.addedNodes].filter(SlTreeItem.isTreeItem);\n        const removedNodes = [...mutation.removedNodes].filter(SlTreeItem.isTreeItem);\n        addedNodes.forEach(this.initTreeItem);\n        if (this.lastFocusedItem && removedNodes.includes(this.lastFocusedItem)) {\n          this.lastFocusedItem = null;\n        }\n      }\n    };\n    this.handleFocusOut = (event) => {\n      const relatedTarget = event.relatedTarget;\n      if (!relatedTarget || !this.contains(relatedTarget)) {\n        this.tabIndex = 0;\n      }\n    };\n    this.handleFocusIn = (event) => {\n      const target = event.target;\n      if (event.target === this) {\n        this.focusItem(this.lastFocusedItem || this.getAllTreeItems()[0]);\n      }\n      if (SlTreeItem.isTreeItem(target) && !target.disabled) {\n        if (this.lastFocusedItem) {\n          this.lastFocusedItem.tabIndex = -1;\n        }\n        this.lastFocusedItem = target;\n        this.tabIndex = -1;\n        target.tabIndex = 0;\n      }\n    };\n    this.addEventListener(\"focusin\", this.handleFocusIn);\n    this.addEventListener(\"focusout\", this.handleFocusOut);\n    this.addEventListener(\"sl-lazy-change\", this.handleSlotChange);\n  }\n  async connectedCallback() {\n    super.connectedCallback();\n    this.setAttribute(\"role\", \"tree\");\n    this.setAttribute(\"tabindex\", \"0\");\n    await this.updateComplete;\n    this.mutationObserver = new MutationObserver(this.handleTreeChanged);\n    this.mutationObserver.observe(this, { childList: true, subtree: true });\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.mutationObserver.disconnect();\n  }\n  // Generates a clone of the expand icon element to use for each tree item\n  getExpandButtonIcon(status) {\n    const slot = status === \"expand\" ? this.expandedIconSlot : this.collapsedIconSlot;\n    const icon = slot.assignedElements({ flatten: true })[0];\n    if (icon) {\n      const clone = icon.cloneNode(true);\n      [clone, ...clone.querySelectorAll(\"[id]\")].forEach((el) => el.removeAttribute(\"id\"));\n      clone.setAttribute(\"data-default\", \"\");\n      clone.slot = `${status}-icon`;\n      return clone;\n    }\n    return null;\n  }\n  selectItem(selectedItem) {\n    const previousSelection = [...this.selectedItems];\n    if (this.selection === \"multiple\") {\n      selectedItem.selected = !selectedItem.selected;\n      if (selectedItem.lazy) {\n        selectedItem.expanded = true;\n      }\n      syncCheckboxes(selectedItem);\n    } else if (this.selection === \"single\" || selectedItem.isLeaf) {\n      const items = this.getAllTreeItems();\n      for (const item of items) {\n        item.selected = item === selectedItem;\n      }\n    } else if (this.selection === \"leaf\") {\n      selectedItem.expanded = !selectedItem.expanded;\n    }\n    const nextSelection = this.selectedItems;\n    if (previousSelection.length !== nextSelection.length || nextSelection.some((item) => !previousSelection.includes(item))) {\n      Promise.all(nextSelection.map((el) => el.updateComplete)).then(() => {\n        this.emit(\"sl-selection-change\", { detail: { selection: nextSelection } });\n      });\n    }\n  }\n  getAllTreeItems() {\n    return [...this.querySelectorAll(\"sl-tree-item\")];\n  }\n  focusItem(item) {\n    item == null ? void 0 : item.focus();\n  }\n  handleKeyDown(event) {\n    if (![\"ArrowDown\", \"ArrowUp\", \"ArrowRight\", \"ArrowLeft\", \"Home\", \"End\", \"Enter\", \" \"].includes(event.key)) {\n      return;\n    }\n    if (event.composedPath().some((el) => {\n      var _a;\n      return [\"input\", \"textarea\"].includes((_a = el == null ? void 0 : el.tagName) == null ? void 0 : _a.toLowerCase());\n    })) {\n      return;\n    }\n    const items = this.getFocusableItems();\n    const isLtr = this.matches(\":dir(ltr)\");\n    const isRtl = this.matches(\":dir(rtl)\");\n    if (items.length > 0) {\n      event.preventDefault();\n      const activeItemIndex = items.findIndex((item) => item.matches(\":focus\"));\n      const activeItem = items[activeItemIndex];\n      const focusItemAt = (index) => {\n        const item = items[clamp(index, 0, items.length - 1)];\n        this.focusItem(item);\n      };\n      const toggleExpand = (expanded) => {\n        activeItem.expanded = expanded;\n      };\n      if (event.key === \"ArrowDown\") {\n        focusItemAt(activeItemIndex + 1);\n      } else if (event.key === \"ArrowUp\") {\n        focusItemAt(activeItemIndex - 1);\n      } else if (isLtr && event.key === \"ArrowRight\" || isRtl && event.key === \"ArrowLeft\") {\n        if (!activeItem || activeItem.disabled || activeItem.expanded || activeItem.isLeaf && !activeItem.lazy) {\n          focusItemAt(activeItemIndex + 1);\n        } else {\n          toggleExpand(true);\n        }\n      } else if (isLtr && event.key === \"ArrowLeft\" || isRtl && event.key === \"ArrowRight\") {\n        if (!activeItem || activeItem.disabled || activeItem.isLeaf || !activeItem.expanded) {\n          focusItemAt(activeItemIndex - 1);\n        } else {\n          toggleExpand(false);\n        }\n      } else if (event.key === \"Home\") {\n        focusItemAt(0);\n      } else if (event.key === \"End\") {\n        focusItemAt(items.length - 1);\n      } else if (event.key === \"Enter\" || event.key === \" \") {\n        if (!activeItem.disabled) {\n          this.selectItem(activeItem);\n        }\n      }\n    }\n  }\n  handleClick(event) {\n    const target = event.target;\n    const treeItem = target.closest(\"sl-tree-item\");\n    const isExpandButton = event.composedPath().some((el) => {\n      var _a;\n      return (_a = el == null ? void 0 : el.classList) == null ? void 0 : _a.contains(\"tree-item__expand-button\");\n    });\n    if (!treeItem || treeItem.disabled || target !== this.clickTarget) {\n      return;\n    }\n    if (isExpandButton) {\n      treeItem.expanded = !treeItem.expanded;\n    } else {\n      this.selectItem(treeItem);\n    }\n  }\n  handleMouseDown(event) {\n    this.clickTarget = event.target;\n  }\n  handleSlotChange() {\n    const items = this.getAllTreeItems();\n    items.forEach(this.initTreeItem);\n  }\n  async handleSelectionChange() {\n    const isSelectionMultiple = this.selection === \"multiple\";\n    const items = this.getAllTreeItems();\n    this.setAttribute(\"aria-multiselectable\", isSelectionMultiple ? \"true\" : \"false\");\n    for (const item of items) {\n      item.selectable = isSelectionMultiple;\n    }\n    if (isSelectionMultiple) {\n      await this.updateComplete;\n      [...this.querySelectorAll(\":scope > sl-tree-item\")].forEach(\n        (treeItem) => syncCheckboxes(treeItem, true)\n      );\n    }\n  }\n  /** @internal Returns the list of tree items that are selected in the tree. */\n  get selectedItems() {\n    const items = this.getAllTreeItems();\n    const isSelected = (item) => item.selected;\n    return items.filter(isSelected);\n  }\n  /** @internal Gets focusable tree items in the tree. */\n  getFocusableItems() {\n    const items = this.getAllTreeItems();\n    const collapsedItems = /* @__PURE__ */ new Set();\n    return items.filter((item) => {\n      var _a;\n      if (item.disabled)\n        return false;\n      const parent = (_a = item.parentElement) == null ? void 0 : _a.closest(\"[role=treeitem]\");\n      if (parent && (!parent.expanded || parent.loading || collapsedItems.has(parent))) {\n        collapsedItems.add(item);\n      }\n      return !collapsedItems.has(item);\n    });\n  }\n  render() {\n    return html`\n      <div\n        part=\"base\"\n        class=\"tree\"\n        @click=${this.handleClick}\n        @keydown=${this.handleKeyDown}\n        @mousedown=${this.handleMouseDown}\n      >\n        <slot @slotchange=${this.handleSlotChange}></slot>\n        <span hidden aria-hidden=\"true\"><slot name=\"expand-icon\"></slot></span>\n        <span hidden aria-hidden=\"true\"><slot name=\"collapse-icon\"></slot></span>\n      </div>\n    `;\n  }\n};\nSlTree.styles = [component_styles_default, tree_styles_default];\n__decorateClass([\n  query(\"slot:not([name])\")\n], SlTree.prototype, \"defaultSlot\", 2);\n__decorateClass([\n  query(\"slot[name=expand-icon]\")\n], SlTree.prototype, \"expandedIconSlot\", 2);\n__decorateClass([\n  query(\"slot[name=collapse-icon]\")\n], SlTree.prototype, \"collapsedIconSlot\", 2);\n__decorateClass([\n  property()\n], SlTree.prototype, \"selection\", 2);\n__decorateClass([\n  watch(\"selection\")\n], SlTree.prototype, \"handleSelectionChange\", 1);\n\nexport {\n  SlTree\n};\n"],"mappings":"AAAA,SACEA,mBAAmB,QACd,qBAAqB;AAC5B,SACEC,UAAU,QACL,qBAAqB;AAC5B,SACEC,KAAK,QACA,qBAAqB;AAC5B,SACEC,KAAK,QACA,qBAAqB;AAC5B,SACEC,wBAAwB,QACnB,qBAAqB;AAC5B,SACEC,eAAe,QACV,qBAAqB;AAC5B,SACEC,eAAe,QACV,qBAAqB;;AAE5B;AACA,SAASC,IAAI,QAAQ,KAAK;AAC1B,SAASC,QAAQ,EAAEC,KAAK,QAAQ,mBAAmB;AACnD,SAASC,cAAcA,CAACC,eAAe,EAAEC,WAAW,GAAG,KAAK,EAAE;EAC5D,SAASC,cAAcA,CAACC,QAAQ,EAAE;IAChC,MAAMC,QAAQ,GAAGD,QAAQ,CAACE,gBAAgB,CAAC;MAAEC,eAAe,EAAE;IAAM,CAAC,CAAC;IACtE,IAAIF,QAAQ,CAACG,MAAM,EAAE;MACnB,MAAMC,UAAU,GAAGJ,QAAQ,CAACK,KAAK,CAAEC,IAAI,IAAKA,IAAI,CAACC,QAAQ,CAAC;MAC1D,MAAMC,YAAY,GAAGR,QAAQ,CAACK,KAAK,CAAEC,IAAI,IAAK,CAACA,IAAI,CAACC,QAAQ,IAAI,CAACD,IAAI,CAACG,aAAa,CAAC;MACpFV,QAAQ,CAACQ,QAAQ,GAAGH,UAAU;MAC9BL,QAAQ,CAACU,aAAa,GAAG,CAACL,UAAU,IAAI,CAACI,YAAY;IACvD;EACF;EACA,SAASE,aAAaA,CAACX,QAAQ,EAAE;IAC/B,MAAMY,UAAU,GAAGZ,QAAQ,CAACa,aAAa;IACzC,IAAI1B,UAAU,CAAC2B,UAAU,CAACF,UAAU,CAAC,EAAE;MACrCb,cAAc,CAACa,UAAU,CAAC;MAC1BD,aAAa,CAACC,UAAU,CAAC;IAC3B;EACF;EACA,SAASG,eAAeA,CAACf,QAAQ,EAAE;IACjC,KAAK,MAAMgB,SAAS,IAAIhB,QAAQ,CAACE,gBAAgB,CAAC,CAAC,EAAE;MACnDc,SAAS,CAACR,QAAQ,GAAGV,WAAW,GAAGE,QAAQ,CAACQ,QAAQ,IAAIQ,SAAS,CAACR,QAAQ,GAAG,CAACQ,SAAS,CAACC,QAAQ,IAAIjB,QAAQ,CAACQ,QAAQ;MACrHO,eAAe,CAACC,SAAS,CAAC;IAC5B;IACA,IAAIlB,WAAW,EAAE;MACfC,cAAc,CAACC,QAAQ,CAAC;IAC1B;EACF;EACAe,eAAe,CAAClB,eAAe,CAAC;EAChCc,aAAa,CAACd,eAAe,CAAC;AAChC;AACA,IAAIqB,MAAM,GAAG,cAAc3B,eAAe,CAAC;EACzC4B,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,SAAS,GAAG,QAAQ;IACzB,IAAI,CAACC,WAAW,GAAG,IAAI;IACvB;IACA,IAAI,CAACC,YAAY,GAAIf,IAAI,IAAK;MAC5BA,IAAI,CAACgB,UAAU,GAAG,IAAI,CAACH,SAAS,KAAK,UAAU;MAC/C,CAAC,QAAQ,EAAE,UAAU,CAAC,CAACI,MAAM,CAAEC,MAAM,IAAK,CAAC,CAAC,IAAI,CAACC,aAAa,CAAC,UAAUD,MAAM,SAAS,CAAC,CAAC,CAACE,OAAO,CAAEF,MAAM,IAAK;QAC7G,MAAMG,YAAY,GAAGrB,IAAI,CAACmB,aAAa,CAAC,UAAUD,MAAM,SAAS,CAAC;QAClE,MAAMI,gBAAgB,GAAG,IAAI,CAACC,mBAAmB,CAACL,MAAM,CAAC;QACzD,IAAI,CAACI,gBAAgB,EACnB;QACF,IAAID,YAAY,KAAK,IAAI,EAAE;UACzBrB,IAAI,CAACwB,MAAM,CAACF,gBAAgB,CAAC;QAC/B,CAAC,MAAM,IAAID,YAAY,CAACI,YAAY,CAAC,cAAc,CAAC,EAAE;UACpDJ,YAAY,CAACK,WAAW,CAACJ,gBAAgB,CAAC;QAC5C,CAAC,MAAM,CACP;MACF,CAAC,CAAC;IACJ,CAAC;IACD,IAAI,CAACK,iBAAiB,GAAIC,SAAS,IAAK;MACtC,KAAK,MAAMC,QAAQ,IAAID,SAAS,EAAE;QAChC,MAAME,UAAU,GAAG,CAAC,GAAGD,QAAQ,CAACC,UAAU,CAAC,CAACb,MAAM,CAACrC,UAAU,CAAC2B,UAAU,CAAC;QACzE,MAAMwB,YAAY,GAAG,CAAC,GAAGF,QAAQ,CAACE,YAAY,CAAC,CAACd,MAAM,CAACrC,UAAU,CAAC2B,UAAU,CAAC;QAC7EuB,UAAU,CAACV,OAAO,CAAC,IAAI,CAACL,YAAY,CAAC;QACrC,IAAI,IAAI,CAACiB,eAAe,IAAID,YAAY,CAACE,QAAQ,CAAC,IAAI,CAACD,eAAe,CAAC,EAAE;UACvE,IAAI,CAACA,eAAe,GAAG,IAAI;QAC7B;MACF;IACF,CAAC;IACD,IAAI,CAACE,cAAc,GAAIC,KAAK,IAAK;MAC/B,MAAMC,aAAa,GAAGD,KAAK,CAACC,aAAa;MACzC,IAAI,CAACA,aAAa,IAAI,CAAC,IAAI,CAACC,QAAQ,CAACD,aAAa,CAAC,EAAE;QACnD,IAAI,CAACE,QAAQ,GAAG,CAAC;MACnB;IACF,CAAC;IACD,IAAI,CAACC,aAAa,GAAIJ,KAAK,IAAK;MAC9B,MAAMK,MAAM,GAAGL,KAAK,CAACK,MAAM;MAC3B,IAAIL,KAAK,CAACK,MAAM,KAAK,IAAI,EAAE;QACzB,IAAI,CAACC,SAAS,CAAC,IAAI,CAACT,eAAe,IAAI,IAAI,CAACU,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACnE;MACA,IAAI9D,UAAU,CAAC2B,UAAU,CAACiC,MAAM,CAAC,IAAI,CAACA,MAAM,CAAC9B,QAAQ,EAAE;QACrD,IAAI,IAAI,CAACsB,eAAe,EAAE;UACxB,IAAI,CAACA,eAAe,CAACM,QAAQ,GAAG,CAAC,CAAC;QACpC;QACA,IAAI,CAACN,eAAe,GAAGQ,MAAM;QAC7B,IAAI,CAACF,QAAQ,GAAG,CAAC,CAAC;QAClBE,MAAM,CAACF,QAAQ,GAAG,CAAC;MACrB;IACF,CAAC;IACD,IAAI,CAACK,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAACJ,aAAa,CAAC;IACpD,IAAI,CAACI,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAACT,cAAc,CAAC;IACtD,IAAI,CAACS,gBAAgB,CAAC,gBAAgB,EAAE,IAAI,CAACC,gBAAgB,CAAC;EAChE;EACA,MAAMC,iBAAiBA,CAAA,EAAG;IACxB,KAAK,CAACA,iBAAiB,CAAC,CAAC;IACzB,IAAI,CAACC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC;IACjC,IAAI,CAACA,YAAY,CAAC,UAAU,EAAE,GAAG,CAAC;IAClC,MAAM,IAAI,CAACC,cAAc;IACzB,IAAI,CAACC,gBAAgB,GAAG,IAAIC,gBAAgB,CAAC,IAAI,CAACtB,iBAAiB,CAAC;IACpE,IAAI,CAACqB,gBAAgB,CAACE,OAAO,CAAC,IAAI,EAAE;MAAEC,SAAS,EAAE,IAAI;MAAEC,OAAO,EAAE;IAAK,CAAC,CAAC;EACzE;EACAC,oBAAoBA,CAAA,EAAG;IACrB,KAAK,CAACA,oBAAoB,CAAC,CAAC;IAC5B,IAAI,CAACL,gBAAgB,CAACM,UAAU,CAAC,CAAC;EACpC;EACA;EACA/B,mBAAmBA,CAACL,MAAM,EAAE;IAC1B,MAAMqC,IAAI,GAAGrC,MAAM,KAAK,QAAQ,GAAG,IAAI,CAACsC,gBAAgB,GAAG,IAAI,CAACC,iBAAiB;IACjF,MAAMC,IAAI,GAAGH,IAAI,CAACI,gBAAgB,CAAC;MAAEC,OAAO,EAAE;IAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACxD,IAAIF,IAAI,EAAE;MACR,MAAMG,KAAK,GAAGH,IAAI,CAACI,SAAS,CAAC,IAAI,CAAC;MAClC,CAACD,KAAK,EAAE,GAAGA,KAAK,CAACE,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC3C,OAAO,CAAE4C,EAAE,IAAKA,EAAE,CAACC,eAAe,CAAC,IAAI,CAAC,CAAC;MACpFJ,KAAK,CAACf,YAAY,CAAC,cAAc,EAAE,EAAE,CAAC;MACtCe,KAAK,CAACN,IAAI,GAAG,GAAGrC,MAAM,OAAO;MAC7B,OAAO2C,KAAK;IACd;IACA,OAAO,IAAI;EACb;EACAK,UAAUA,CAACC,YAAY,EAAE;IACvB,MAAMC,iBAAiB,GAAG,CAAC,GAAG,IAAI,CAACC,aAAa,CAAC;IACjD,IAAI,IAAI,CAACxD,SAAS,KAAK,UAAU,EAAE;MACjCsD,YAAY,CAAClE,QAAQ,GAAG,CAACkE,YAAY,CAAClE,QAAQ;MAC9C,IAAIkE,YAAY,CAACG,IAAI,EAAE;QACrBH,YAAY,CAACI,QAAQ,GAAG,IAAI;MAC9B;MACAlF,cAAc,CAAC8E,YAAY,CAAC;IAC9B,CAAC,MAAM,IAAI,IAAI,CAACtD,SAAS,KAAK,QAAQ,IAAIsD,YAAY,CAACK,MAAM,EAAE;MAC7D,MAAMC,KAAK,GAAG,IAAI,CAAC/B,eAAe,CAAC,CAAC;MACpC,KAAK,MAAM1C,IAAI,IAAIyE,KAAK,EAAE;QACxBzE,IAAI,CAACC,QAAQ,GAAGD,IAAI,KAAKmE,YAAY;MACvC;IACF,CAAC,MAAM,IAAI,IAAI,CAACtD,SAAS,KAAK,MAAM,EAAE;MACpCsD,YAAY,CAACI,QAAQ,GAAG,CAACJ,YAAY,CAACI,QAAQ;IAChD;IACA,MAAMG,aAAa,GAAG,IAAI,CAACL,aAAa;IACxC,IAAID,iBAAiB,CAACvE,MAAM,KAAK6E,aAAa,CAAC7E,MAAM,IAAI6E,aAAa,CAACC,IAAI,CAAE3E,IAAI,IAAK,CAACoE,iBAAiB,CAACnC,QAAQ,CAACjC,IAAI,CAAC,CAAC,EAAE;MACxH4E,OAAO,CAACC,GAAG,CAACH,aAAa,CAACI,GAAG,CAAEd,EAAE,IAAKA,EAAE,CAACjB,cAAc,CAAC,CAAC,CAACgC,IAAI,CAAC,MAAM;QACnE,IAAI,CAACC,IAAI,CAAC,qBAAqB,EAAE;UAAEC,MAAM,EAAE;YAAEpE,SAAS,EAAE6D;UAAc;QAAE,CAAC,CAAC;MAC5E,CAAC,CAAC;IACJ;EACF;EACAhC,eAAeA,CAAA,EAAG;IAChB,OAAO,CAAC,GAAG,IAAI,CAACqB,gBAAgB,CAAC,cAAc,CAAC,CAAC;EACnD;EACAtB,SAASA,CAACzC,IAAI,EAAE;IACdA,IAAI,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACkF,KAAK,CAAC,CAAC;EACtC;EACAC,aAAaA,CAAChD,KAAK,EAAE;IACnB,IAAI,CAAC,CAAC,WAAW,EAAE,SAAS,EAAE,YAAY,EAAE,WAAW,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,CAAC,CAACF,QAAQ,CAACE,KAAK,CAACiD,GAAG,CAAC,EAAE;MACzG;IACF;IACA,IAAIjD,KAAK,CAACkD,YAAY,CAAC,CAAC,CAACV,IAAI,CAAEX,EAAE,IAAK;MACpC,IAAIsB,EAAE;MACN,OAAO,CAAC,OAAO,EAAE,UAAU,CAAC,CAACrD,QAAQ,CAAC,CAACqD,EAAE,GAAGtB,EAAE,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACuB,OAAO,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGD,EAAE,CAACE,WAAW,CAAC,CAAC,CAAC;IACpH,CAAC,CAAC,EAAE;MACF;IACF;IACA,MAAMf,KAAK,GAAG,IAAI,CAACgB,iBAAiB,CAAC,CAAC;IACtC,MAAMC,KAAK,GAAG,IAAI,CAACC,OAAO,CAAC,WAAW,CAAC;IACvC,MAAMC,KAAK,GAAG,IAAI,CAACD,OAAO,CAAC,WAAW,CAAC;IACvC,IAAIlB,KAAK,CAAC5E,MAAM,GAAG,CAAC,EAAE;MACpBsC,KAAK,CAAC0D,cAAc,CAAC,CAAC;MACtB,MAAMC,eAAe,GAAGrB,KAAK,CAACsB,SAAS,CAAE/F,IAAI,IAAKA,IAAI,CAAC2F,OAAO,CAAC,QAAQ,CAAC,CAAC;MACzE,MAAMK,UAAU,GAAGvB,KAAK,CAACqB,eAAe,CAAC;MACzC,MAAMG,WAAW,GAAIC,KAAK,IAAK;QAC7B,MAAMlG,IAAI,GAAGyE,KAAK,CAAC5F,KAAK,CAACqH,KAAK,EAAE,CAAC,EAAEzB,KAAK,CAAC5E,MAAM,GAAG,CAAC,CAAC,CAAC;QACrD,IAAI,CAAC4C,SAAS,CAACzC,IAAI,CAAC;MACtB,CAAC;MACD,MAAMmG,YAAY,GAAI5B,QAAQ,IAAK;QACjCyB,UAAU,CAACzB,QAAQ,GAAGA,QAAQ;MAChC,CAAC;MACD,IAAIpC,KAAK,CAACiD,GAAG,KAAK,WAAW,EAAE;QAC7Ba,WAAW,CAACH,eAAe,GAAG,CAAC,CAAC;MAClC,CAAC,MAAM,IAAI3D,KAAK,CAACiD,GAAG,KAAK,SAAS,EAAE;QAClCa,WAAW,CAACH,eAAe,GAAG,CAAC,CAAC;MAClC,CAAC,MAAM,IAAIJ,KAAK,IAAIvD,KAAK,CAACiD,GAAG,KAAK,YAAY,IAAIQ,KAAK,IAAIzD,KAAK,CAACiD,GAAG,KAAK,WAAW,EAAE;QACpF,IAAI,CAACY,UAAU,IAAIA,UAAU,CAACtF,QAAQ,IAAIsF,UAAU,CAACzB,QAAQ,IAAIyB,UAAU,CAACxB,MAAM,IAAI,CAACwB,UAAU,CAAC1B,IAAI,EAAE;UACtG2B,WAAW,CAACH,eAAe,GAAG,CAAC,CAAC;QAClC,CAAC,MAAM;UACLK,YAAY,CAAC,IAAI,CAAC;QACpB;MACF,CAAC,MAAM,IAAIT,KAAK,IAAIvD,KAAK,CAACiD,GAAG,KAAK,WAAW,IAAIQ,KAAK,IAAIzD,KAAK,CAACiD,GAAG,KAAK,YAAY,EAAE;QACpF,IAAI,CAACY,UAAU,IAAIA,UAAU,CAACtF,QAAQ,IAAIsF,UAAU,CAACxB,MAAM,IAAI,CAACwB,UAAU,CAACzB,QAAQ,EAAE;UACnF0B,WAAW,CAACH,eAAe,GAAG,CAAC,CAAC;QAClC,CAAC,MAAM;UACLK,YAAY,CAAC,KAAK,CAAC;QACrB;MACF,CAAC,MAAM,IAAIhE,KAAK,CAACiD,GAAG,KAAK,MAAM,EAAE;QAC/Ba,WAAW,CAAC,CAAC,CAAC;MAChB,CAAC,MAAM,IAAI9D,KAAK,CAACiD,GAAG,KAAK,KAAK,EAAE;QAC9Ba,WAAW,CAACxB,KAAK,CAAC5E,MAAM,GAAG,CAAC,CAAC;MAC/B,CAAC,MAAM,IAAIsC,KAAK,CAACiD,GAAG,KAAK,OAAO,IAAIjD,KAAK,CAACiD,GAAG,KAAK,GAAG,EAAE;QACrD,IAAI,CAACY,UAAU,CAACtF,QAAQ,EAAE;UACxB,IAAI,CAACwD,UAAU,CAAC8B,UAAU,CAAC;QAC7B;MACF;IACF;EACF;EACAI,WAAWA,CAACjE,KAAK,EAAE;IACjB,MAAMK,MAAM,GAAGL,KAAK,CAACK,MAAM;IAC3B,MAAM/C,QAAQ,GAAG+C,MAAM,CAAC6D,OAAO,CAAC,cAAc,CAAC;IAC/C,MAAMC,cAAc,GAAGnE,KAAK,CAACkD,YAAY,CAAC,CAAC,CAACV,IAAI,CAAEX,EAAE,IAAK;MACvD,IAAIsB,EAAE;MACN,OAAO,CAACA,EAAE,GAAGtB,EAAE,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACuC,SAAS,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGjB,EAAE,CAACjD,QAAQ,CAAC,0BAA0B,CAAC;IAC7G,CAAC,CAAC;IACF,IAAI,CAAC5C,QAAQ,IAAIA,QAAQ,CAACiB,QAAQ,IAAI8B,MAAM,KAAK,IAAI,CAAC1B,WAAW,EAAE;MACjE;IACF;IACA,IAAIwF,cAAc,EAAE;MAClB7G,QAAQ,CAAC8E,QAAQ,GAAG,CAAC9E,QAAQ,CAAC8E,QAAQ;IACxC,CAAC,MAAM;MACL,IAAI,CAACL,UAAU,CAACzE,QAAQ,CAAC;IAC3B;EACF;EACA+G,eAAeA,CAACrE,KAAK,EAAE;IACrB,IAAI,CAACrB,WAAW,GAAGqB,KAAK,CAACK,MAAM;EACjC;EACAI,gBAAgBA,CAAA,EAAG;IACjB,MAAM6B,KAAK,GAAG,IAAI,CAAC/B,eAAe,CAAC,CAAC;IACpC+B,KAAK,CAACrD,OAAO,CAAC,IAAI,CAACL,YAAY,CAAC;EAClC;EACA,MAAM0F,qBAAqBA,CAAA,EAAG;IAC5B,MAAMC,mBAAmB,GAAG,IAAI,CAAC7F,SAAS,KAAK,UAAU;IACzD,MAAM4D,KAAK,GAAG,IAAI,CAAC/B,eAAe,CAAC,CAAC;IACpC,IAAI,CAACI,YAAY,CAAC,sBAAsB,EAAE4D,mBAAmB,GAAG,MAAM,GAAG,OAAO,CAAC;IACjF,KAAK,MAAM1G,IAAI,IAAIyE,KAAK,EAAE;MACxBzE,IAAI,CAACgB,UAAU,GAAG0F,mBAAmB;IACvC;IACA,IAAIA,mBAAmB,EAAE;MACvB,MAAM,IAAI,CAAC3D,cAAc;MACzB,CAAC,GAAG,IAAI,CAACgB,gBAAgB,CAAC,uBAAuB,CAAC,CAAC,CAAC3C,OAAO,CACxD3B,QAAQ,IAAKJ,cAAc,CAACI,QAAQ,EAAE,IAAI,CAC7C,CAAC;IACH;EACF;EACA;EACA,IAAI4E,aAAaA,CAAA,EAAG;IAClB,MAAMI,KAAK,GAAG,IAAI,CAAC/B,eAAe,CAAC,CAAC;IACpC,MAAMiE,UAAU,GAAI3G,IAAI,IAAKA,IAAI,CAACC,QAAQ;IAC1C,OAAOwE,KAAK,CAACxD,MAAM,CAAC0F,UAAU,CAAC;EACjC;EACA;EACAlB,iBAAiBA,CAAA,EAAG;IAClB,MAAMhB,KAAK,GAAG,IAAI,CAAC/B,eAAe,CAAC,CAAC;IACpC,MAAMkE,cAAc,GAAG,eAAgB,IAAIC,GAAG,CAAC,CAAC;IAChD,OAAOpC,KAAK,CAACxD,MAAM,CAAEjB,IAAI,IAAK;MAC5B,IAAIsF,EAAE;MACN,IAAItF,IAAI,CAACU,QAAQ,EACf,OAAO,KAAK;MACd,MAAMoG,MAAM,GAAG,CAACxB,EAAE,GAAGtF,IAAI,CAACM,aAAa,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGgF,EAAE,CAACe,OAAO,CAAC,iBAAiB,CAAC;MACzF,IAAIS,MAAM,KAAK,CAACA,MAAM,CAACvC,QAAQ,IAAIuC,MAAM,CAACC,OAAO,IAAIH,cAAc,CAACI,GAAG,CAACF,MAAM,CAAC,CAAC,EAAE;QAChFF,cAAc,CAACK,GAAG,CAACjH,IAAI,CAAC;MAC1B;MACA,OAAO,CAAC4G,cAAc,CAACI,GAAG,CAAChH,IAAI,CAAC;IAClC,CAAC,CAAC;EACJ;EACAkH,MAAMA,CAAA,EAAG;IACP,OAAOhI,IAAI;AACf;AACA;AACA;AACA,iBAAiB,IAAI,CAACkH,WAAW;AACjC,mBAAmB,IAAI,CAACjB,aAAa;AACrC,qBAAqB,IAAI,CAACqB,eAAe;AACzC;AACA,4BAA4B,IAAI,CAAC5D,gBAAgB;AACjD;AACA;AACA;AACA,KAAK;EACH;AACF,CAAC;AACDjC,MAAM,CAACwG,MAAM,GAAG,CAACpI,wBAAwB,EAAEJ,mBAAmB,CAAC;AAC/DM,eAAe,CAAC,CACdG,KAAK,CAAC,kBAAkB,CAAC,CAC1B,EAAEuB,MAAM,CAACyG,SAAS,EAAE,aAAa,EAAE,CAAC,CAAC;AACtCnI,eAAe,CAAC,CACdG,KAAK,CAAC,wBAAwB,CAAC,CAChC,EAAEuB,MAAM,CAACyG,SAAS,EAAE,kBAAkB,EAAE,CAAC,CAAC;AAC3CnI,eAAe,CAAC,CACdG,KAAK,CAAC,0BAA0B,CAAC,CAClC,EAAEuB,MAAM,CAACyG,SAAS,EAAE,mBAAmB,EAAE,CAAC,CAAC;AAC5CnI,eAAe,CAAC,CACdE,QAAQ,CAAC,CAAC,CACX,EAAEwB,MAAM,CAACyG,SAAS,EAAE,WAAW,EAAE,CAAC,CAAC;AACpCnI,eAAe,CAAC,CACdH,KAAK,CAAC,WAAW,CAAC,CACnB,EAAE6B,MAAM,CAACyG,SAAS,EAAE,uBAAuB,EAAE,CAAC,CAAC;AAEhD,SACEzG,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}