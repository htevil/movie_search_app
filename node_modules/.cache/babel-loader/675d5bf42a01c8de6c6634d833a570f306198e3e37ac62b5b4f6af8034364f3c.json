{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _overrides = require(\"../helpers/overrides\");\nvar _constants = require(\"./constants\");\nvar _styledComponents = require(\"./styled-components\");\nvar _utils = require(\"./utils\");\nvar _hide = _interopRequireDefault(require(\"../icon/hide\"));\nvar _show = _interopRequireDefault(require(\"../icon/show\"));\nvar _createEvent = _interopRequireDefault(require(\"../utils/create-event\"));\nvar _focusVisible = require(\"../utils/focusVisible\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _getRequireWildcardCache(e) {\n  if (\"function\" != typeof WeakMap) return null;\n  var r = new WeakMap(),\n    t = new WeakMap();\n  return (_getRequireWildcardCache = function (e) {\n    return e ? t : r;\n  })(e);\n}\nfunction _interopRequireWildcard(e, r) {\n  if (!r && e && e.__esModule) return e;\n  if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n    default: e\n  };\n  var t = _getRequireWildcardCache(r);\n  if (t && t.has(e)) return t.get(e);\n  var n = {\n      __proto__: null\n    },\n    a = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) {\n    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;\n    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];\n  }\n  return n.default = e, t && t.set(e, n), n;\n}\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : String(i);\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n} /*\n  Copyright (c) Uber Technologies, Inc.\n  This source code is licensed under the MIT license found in the\n  LICENSE file in the root directory of this source tree.\n  */ // eslint-disable-next-line @typescript-eslint/no-unused-vars\n/* global window */\n// @ts-ignore\nconst NullComponent = () => null;\nclass BaseInput extends React.Component {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"inputRef\", this.props.inputRef || /*#__PURE__*/React.createRef());\n    _defineProperty(this, \"state\", {\n      isFocused: this.props.autoFocus || false,\n      isMasked: this.props.type === 'password',\n      initialType: this.props.type,\n      isFocusVisibleForClear: false,\n      isFocusVisibleForMaskToggle: false\n    });\n    _defineProperty(this, \"onInputKeyDown\", e => {\n      if (this.props.clearOnEscape && e.key === 'Escape' && this.inputRef.current && !this.props.readOnly) {\n        this.clearValue();\n        // prevent event from closing modal or doing something unexpected\n        e.stopPropagation();\n      }\n    });\n    _defineProperty(this, \"onClearIconClick\", () => {\n      if (this.inputRef.current) this.clearValue();\n      // return focus to the input after click\n      if (this.inputRef.current) this.inputRef.current.focus();\n    });\n    _defineProperty(this, \"onFocus\", e => {\n      this.setState({\n        isFocused: true\n      });\n      // @ts-ignore\n      this.props.onFocus(e);\n    });\n    _defineProperty(this, \"onBlur\", e => {\n      this.setState({\n        isFocused: false\n      });\n      // @ts-ignore\n      this.props.onBlur(e);\n    });\n    _defineProperty(this, \"handleFocusForMaskToggle\", event => {\n      if ((0, _focusVisible.isFocusVisible)(event)) {\n        this.setState({\n          isFocusVisibleForMaskToggle: true\n        });\n      }\n    });\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _defineProperty(this, \"handleBlurForMaskToggle\", event => {\n      if (this.state.isFocusVisibleForMaskToggle !== false) {\n        this.setState({\n          isFocusVisibleForMaskToggle: false\n        });\n      }\n    });\n    _defineProperty(this, \"handleFocusForClear\", event => {\n      if ((0, _focusVisible.isFocusVisible)(event)) {\n        this.setState({\n          isFocusVisibleForClear: true\n        });\n      }\n    });\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _defineProperty(this, \"handleBlurForClear\", event => {\n      if (this.state.isFocusVisibleForClear !== false) {\n        this.setState({\n          isFocusVisibleForClear: false\n        });\n      }\n    });\n  }\n  componentDidMount() {\n    const {\n      autoFocus,\n      clearable\n    } = this.props;\n    if (this.inputRef.current) {\n      if (autoFocus) {\n        this.inputRef.current.focus();\n      }\n      if (clearable) {\n        // @ts-ignore\n        this.inputRef.current.addEventListener('keydown', this.onInputKeyDown);\n      }\n    }\n  }\n  componentWillUnmount() {\n    const {\n      clearable\n    } = this.props;\n    if (clearable && this.inputRef.current) {\n      // @ts-ignore\n      this.inputRef.current.removeEventListener('keydown', this.onInputKeyDown);\n    }\n  }\n  clearValue() {\n    // trigger a fake input change event (as if all text was deleted)\n    const input = this.inputRef.current;\n    if (input) {\n      const nativeInputValue = Object.getOwnPropertyDescriptor(this.props.type === _constants.CUSTOM_INPUT_TYPE.textarea ?\n      // todo(flow->ts): globals, not props of window object\n      HTMLTextAreaElement.prototype : HTMLInputElement.prototype, 'value');\n      if (nativeInputValue) {\n        const nativeInputValueSetter = nativeInputValue.set;\n        if (nativeInputValueSetter) {\n          nativeInputValueSetter.call(input, '');\n          const event = (0, _createEvent.default)('input');\n          input.dispatchEvent(event);\n        }\n      }\n    }\n  }\n  getInputType() {\n    // If the type prop is equal to \"password\" we allow the user to toggle between\n    // masked and non masked text. Internally, we toggle between type \"password\"\n    // and \"text\".\n    if (this.props.type === 'password') {\n      return this.state.isMasked ? 'password' : 'text';\n    } else {\n      return this.props.type;\n    }\n  }\n  renderMaskToggle() {\n    if (this.props.type !== 'password') return null;\n    const [MaskToggleButton, maskToggleButtonProps] = (0, _overrides.getOverrides)(\n    // @ts-ignore\n    this.props.overrides.MaskToggleButton, _styledComponents.StyledMaskToggleButton);\n    const [MaskToggleShowIcon, maskToggleIconShowProps] = (0, _overrides.getOverrides)(\n    // @ts-ignore\n    this.props.overrides.MaskToggleShowIcon, _show.default);\n    const [MaskToggleHideIcon, maskToggleIconHideProps] = (0, _overrides.getOverrides)(\n    // @ts-ignore\n    this.props.overrides.MaskToggleHideIcon, _hide.default);\n    const label = this.state.isMasked ? 'Show password text' : 'Hide password text';\n    const iconSize = {\n      [_constants.SIZE.mini]: '12px',\n      [_constants.SIZE.compact]: '16px',\n      [_constants.SIZE.default]: '20px',\n      [_constants.SIZE.large]: '24px'\n      // @ts-ignore\n    }[this.props.size];\n    return /*#__PURE__*/React.createElement(MaskToggleButton, _extends({\n      $size: this.props.size,\n      $isFocusVisible: this.state.isFocusVisibleForMaskToggle,\n      \"aria-label\": label,\n      onClick: () => this.setState(state => ({\n        isMasked: !state.isMasked\n      })),\n      title: label,\n      type: \"button\"\n    }, maskToggleButtonProps, {\n      onFocus: (0, _focusVisible.forkFocus)(maskToggleButtonProps, this.handleFocusForMaskToggle),\n      onBlur: (0, _focusVisible.forkBlur)(maskToggleButtonProps, this.handleBlurForMaskToggle)\n    }), this.state.isMasked ? /*#__PURE__*/React.createElement(MaskToggleShowIcon, _extends({\n      size: iconSize,\n      title: label\n    }, maskToggleIconShowProps)) : /*#__PURE__*/React.createElement(MaskToggleHideIcon, _extends({\n      size: iconSize,\n      title: label\n    }, maskToggleIconHideProps)));\n  }\n  renderClear() {\n    const {\n      clearable,\n      value,\n      disabled,\n      readOnly,\n      overrides = {}\n    } = this.props;\n    if (disabled || readOnly || !clearable || value == null || typeof value === 'string' && value.length === 0) {\n      return null;\n    }\n    const [ClearIconContainer, clearIconContainerProps] = (0, _overrides.getOverrides)(overrides.ClearIconContainer, _styledComponents.StyledClearIconContainer);\n    const [ClearIcon, clearIconProps] = (0, _overrides.getOverrides)(overrides.ClearIcon, _styledComponents.StyledClearIcon);\n    const ariaLabel = 'Clear value';\n    const sharedProps = (0, _utils.getSharedProps)(this.props, this.state);\n    const iconSize = {\n      [_constants.SIZE.mini]: '14px',\n      [_constants.SIZE.compact]: '14px',\n      [_constants.SIZE.default]: '16px',\n      [_constants.SIZE.large]: '22px'\n      // @ts-ignore\n    }[this.props.size];\n    return /*#__PURE__*/React.createElement(ClearIconContainer, _extends({\n      $alignTop: this.props.type === _constants.CUSTOM_INPUT_TYPE.textarea\n    }, sharedProps, clearIconContainerProps), /*#__PURE__*/React.createElement(ClearIcon, _extends({\n      size: iconSize,\n      tabIndex: 0,\n      title: ariaLabel,\n      \"aria-label\": ariaLabel,\n      onClick: this.onClearIconClick\n      // @ts-ignore\n      ,\n\n      onKeyDown: event => {\n        if (event.key && (event.key === 'Enter' || event.key === ' ')) {\n          event.preventDefault();\n          this.onClearIconClick();\n        }\n      },\n      role: \"button\",\n      $isFocusVisible: this.state.isFocusVisibleForClear\n    }, sharedProps, clearIconProps, {\n      onFocus: (0, _focusVisible.forkFocus)(clearIconProps, this.handleFocusForClear),\n      onBlur: (0, _focusVisible.forkBlur)(clearIconProps, this.handleBlurForClear)\n    })));\n  }\n  render() {\n    const {\n      overrides: {\n        // @ts-ignore\n        InputContainer: InputContainerOverride,\n        // @ts-ignore\n        Input: InputOverride,\n        // @ts-ignore\n        Before: BeforeOverride,\n        // @ts-ignore\n        After: AfterOverride\n      }\n    } = this.props;\n\n    // more here https://developer.mozilla.org/en-US/docs/Web/Security/Securing_your_site/Turning_off_form_autocompletion#Preventing_autofilling_with_autocompletenew-password\n    const autoComplete = this.state.initialType === 'password' && this.props.autoComplete === BaseInput.defaultProps.autoComplete ? 'new-password' : this.props.autoComplete;\n    const sharedProps = (0, _utils.getSharedProps)(this.props, this.state);\n    const [InputContainer, inputContainerProps] = (0, _overrides.getOverrides)(InputContainerOverride, _styledComponents.InputContainer);\n    const [Input, inputProps] = (0, _overrides.getOverrides)(InputOverride, _styledComponents.Input);\n    const [Before, beforeProps] = (0, _overrides.getOverrides)(BeforeOverride, NullComponent);\n    const [After, afterProps] = (0, _overrides.getOverrides)(AfterOverride, NullComponent);\n    return /*#__PURE__*/React.createElement(InputContainer, _extends({\n      \"data-baseweb\": this.props['data-baseweb'] || 'base-input'\n    }, sharedProps, inputContainerProps), /*#__PURE__*/React.createElement(Before, _extends({}, sharedProps, beforeProps)), /*#__PURE__*/React.createElement(Input, _extends({\n      ref: this.inputRef,\n      \"aria-activedescendant\": this.props['aria-activedescendant'],\n      \"aria-autocomplete\": this.props['aria-autocomplete'],\n      \"aria-controls\": this.props['aria-controls'],\n      \"aria-errormessage\": this.props['aria-errormessage'],\n      \"aria-haspopup\": this.props['aria-haspopup'],\n      \"aria-label\": this.props['aria-label'],\n      \"aria-labelledby\": this.props['aria-labelledby'],\n      \"aria-describedby\": this.props['aria-describedby'],\n      \"aria-invalid\": this.props.error,\n      \"aria-required\": this.props.required,\n      autoComplete: autoComplete,\n      disabled: this.props.disabled,\n      readOnly: this.props.readOnly,\n      id: this.props.id,\n      inputMode: this.props.inputMode,\n      maxLength: this.props.maxLength,\n      name: this.props.name,\n      onBlur: this.onBlur,\n      onChange: this.props.onChange,\n      onFocus: this.onFocus,\n      onKeyDown: this.props.onKeyDown,\n      onKeyPress: this.props.onKeyPress,\n      onKeyUp: this.props.onKeyUp,\n      pattern: this.props.pattern,\n      placeholder: this.props.placeholder,\n      type: this.getInputType(),\n      required: this.props.required,\n      role: this.props.role,\n      value: this.props.value,\n      min: this.props.min,\n      max: this.props.max,\n      step: this.props.step,\n      rows: this.props.type === _constants.CUSTOM_INPUT_TYPE.textarea ? this.props.rows : null\n    }, sharedProps, inputProps)), this.renderClear(), this.renderMaskToggle(), /*#__PURE__*/React.createElement(After, _extends({}, sharedProps, afterProps)));\n  }\n}\n_defineProperty(BaseInput, \"defaultProps\", {\n  // @ts-ignore\n  'aria-activedescendant': null,\n  // @ts-ignore\n  'aria-autocomplete': null,\n  // @ts-ignore\n  'aria-controls': null,\n  // @ts-ignore\n  'aria-errormessage': null,\n  // @ts-ignore\n  'aria-haspopup': null,\n  // @ts-ignore\n  'aria-label': null,\n  // @ts-ignore\n  'aria-labelledby': null,\n  // @ts-ignore\n  'aria-describedby': null,\n  adjoined: _constants.ADJOINED.none,\n  autoComplete: 'on',\n  autoFocus: false,\n  disabled: false,\n  error: false,\n  positive: false,\n  name: '',\n  inputMode: 'text',\n  onBlur: () => {},\n  onChange: () => {},\n  onKeyDown: () => {},\n  onKeyPress: () => {},\n  onKeyUp: () => {},\n  onFocus: () => {},\n  onClear: () => {},\n  clearable: false,\n  clearOnEscape: true,\n  overrides: {},\n  // @ts-ignore\n  pattern: null,\n  placeholder: '',\n  required: false,\n  // @ts-ignore\n  role: null,\n  size: _constants.SIZE.default,\n  type: 'text',\n  readOnly: false\n});\nvar _default = exports.default = BaseInput;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","React","_interopRequireWildcard","require","_overrides","_constants","_styledComponents","_utils","_hide","_interopRequireDefault","_show","_createEvent","_focusVisible","obj","__esModule","_getRequireWildcardCache","e","WeakMap","r","t","has","get","n","__proto__","a","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_extends","assign","bind","target","arguments","length","source","key","apply","_defineProperty","_toPropertyKey","enumerable","configurable","writable","_toPrimitive","String","Symbol","toPrimitive","TypeError","Number","NullComponent","BaseInput","Component","constructor","args","props","inputRef","createRef","isFocused","autoFocus","isMasked","type","initialType","isFocusVisibleForClear","isFocusVisibleForMaskToggle","clearOnEscape","current","readOnly","clearValue","stopPropagation","focus","setState","onFocus","onBlur","event","isFocusVisible","state","componentDidMount","clearable","addEventListener","onInputKeyDown","componentWillUnmount","removeEventListener","input","nativeInputValue","CUSTOM_INPUT_TYPE","textarea","HTMLTextAreaElement","HTMLInputElement","nativeInputValueSetter","dispatchEvent","getInputType","renderMaskToggle","MaskToggleButton","maskToggleButtonProps","getOverrides","overrides","StyledMaskToggleButton","MaskToggleShowIcon","maskToggleIconShowProps","MaskToggleHideIcon","maskToggleIconHideProps","label","iconSize","SIZE","mini","compact","large","size","createElement","$size","$isFocusVisible","onClick","title","forkFocus","handleFocusForMaskToggle","forkBlur","handleBlurForMaskToggle","renderClear","disabled","ClearIconContainer","clearIconContainerProps","StyledClearIconContainer","ClearIcon","clearIconProps","StyledClearIcon","ariaLabel","sharedProps","getSharedProps","$alignTop","tabIndex","onClearIconClick","onKeyDown","preventDefault","role","handleFocusForClear","handleBlurForClear","render","InputContainer","InputContainerOverride","Input","InputOverride","Before","BeforeOverride","After","AfterOverride","autoComplete","defaultProps","inputContainerProps","inputProps","beforeProps","afterProps","ref","error","required","id","inputMode","maxLength","name","onChange","onKeyPress","onKeyUp","pattern","placeholder","min","max","step","rows","adjoined","ADJOINED","none","positive","onClear","_default"],"sources":["C:/Users/ASUS/Project/Web Project/Greekforgreek_project/React project/movie_search_app/node_modules/baseui/input/base-input.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _overrides = require(\"../helpers/overrides\");\nvar _constants = require(\"./constants\");\nvar _styledComponents = require(\"./styled-components\");\nvar _utils = require(\"./utils\");\nvar _hide = _interopRequireDefault(require(\"../icon/hide\"));\nvar _show = _interopRequireDefault(require(\"../icon/show\"));\nvar _createEvent = _interopRequireDefault(require(\"../utils/create-event\"));\nvar _focusVisible = require(\"../utils/focusVisible\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); } /*\nCopyright (c) Uber Technologies, Inc.\n\nThis source code is licensed under the MIT license found in the\nLICENSE file in the root directory of this source tree.\n*/ // eslint-disable-next-line @typescript-eslint/no-unused-vars\n/* global window */\n// @ts-ignore\nconst NullComponent = () => null;\nclass BaseInput extends React.Component {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"inputRef\", this.props.inputRef || /*#__PURE__*/React.createRef());\n    _defineProperty(this, \"state\", {\n      isFocused: this.props.autoFocus || false,\n      isMasked: this.props.type === 'password',\n      initialType: this.props.type,\n      isFocusVisibleForClear: false,\n      isFocusVisibleForMaskToggle: false\n    });\n    _defineProperty(this, \"onInputKeyDown\", e => {\n      if (this.props.clearOnEscape && e.key === 'Escape' && this.inputRef.current && !this.props.readOnly) {\n        this.clearValue();\n        // prevent event from closing modal or doing something unexpected\n        e.stopPropagation();\n      }\n    });\n    _defineProperty(this, \"onClearIconClick\", () => {\n      if (this.inputRef.current) this.clearValue();\n      // return focus to the input after click\n      if (this.inputRef.current) this.inputRef.current.focus();\n    });\n    _defineProperty(this, \"onFocus\", e => {\n      this.setState({\n        isFocused: true\n      });\n      // @ts-ignore\n      this.props.onFocus(e);\n    });\n    _defineProperty(this, \"onBlur\", e => {\n      this.setState({\n        isFocused: false\n      });\n      // @ts-ignore\n      this.props.onBlur(e);\n    });\n    _defineProperty(this, \"handleFocusForMaskToggle\", event => {\n      if ((0, _focusVisible.isFocusVisible)(event)) {\n        this.setState({\n          isFocusVisibleForMaskToggle: true\n        });\n      }\n    });\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _defineProperty(this, \"handleBlurForMaskToggle\", event => {\n      if (this.state.isFocusVisibleForMaskToggle !== false) {\n        this.setState({\n          isFocusVisibleForMaskToggle: false\n        });\n      }\n    });\n    _defineProperty(this, \"handleFocusForClear\", event => {\n      if ((0, _focusVisible.isFocusVisible)(event)) {\n        this.setState({\n          isFocusVisibleForClear: true\n        });\n      }\n    });\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _defineProperty(this, \"handleBlurForClear\", event => {\n      if (this.state.isFocusVisibleForClear !== false) {\n        this.setState({\n          isFocusVisibleForClear: false\n        });\n      }\n    });\n  }\n  componentDidMount() {\n    const {\n      autoFocus,\n      clearable\n    } = this.props;\n    if (this.inputRef.current) {\n      if (autoFocus) {\n        this.inputRef.current.focus();\n      }\n      if (clearable) {\n        // @ts-ignore\n        this.inputRef.current.addEventListener('keydown', this.onInputKeyDown);\n      }\n    }\n  }\n  componentWillUnmount() {\n    const {\n      clearable\n    } = this.props;\n    if (clearable && this.inputRef.current) {\n      // @ts-ignore\n      this.inputRef.current.removeEventListener('keydown', this.onInputKeyDown);\n    }\n  }\n  clearValue() {\n    // trigger a fake input change event (as if all text was deleted)\n    const input = this.inputRef.current;\n    if (input) {\n      const nativeInputValue = Object.getOwnPropertyDescriptor(this.props.type === _constants.CUSTOM_INPUT_TYPE.textarea ?\n      // todo(flow->ts): globals, not props of window object\n      HTMLTextAreaElement.prototype : HTMLInputElement.prototype, 'value');\n      if (nativeInputValue) {\n        const nativeInputValueSetter = nativeInputValue.set;\n        if (nativeInputValueSetter) {\n          nativeInputValueSetter.call(input, '');\n          const event = (0, _createEvent.default)('input');\n          input.dispatchEvent(event);\n        }\n      }\n    }\n  }\n  getInputType() {\n    // If the type prop is equal to \"password\" we allow the user to toggle between\n    // masked and non masked text. Internally, we toggle between type \"password\"\n    // and \"text\".\n    if (this.props.type === 'password') {\n      return this.state.isMasked ? 'password' : 'text';\n    } else {\n      return this.props.type;\n    }\n  }\n  renderMaskToggle() {\n    if (this.props.type !== 'password') return null;\n    const [MaskToggleButton, maskToggleButtonProps] = (0, _overrides.getOverrides)(\n    // @ts-ignore\n    this.props.overrides.MaskToggleButton, _styledComponents.StyledMaskToggleButton);\n    const [MaskToggleShowIcon, maskToggleIconShowProps] = (0, _overrides.getOverrides)(\n    // @ts-ignore\n    this.props.overrides.MaskToggleShowIcon, _show.default);\n    const [MaskToggleHideIcon, maskToggleIconHideProps] = (0, _overrides.getOverrides)(\n    // @ts-ignore\n    this.props.overrides.MaskToggleHideIcon, _hide.default);\n    const label = this.state.isMasked ? 'Show password text' : 'Hide password text';\n    const iconSize = {\n      [_constants.SIZE.mini]: '12px',\n      [_constants.SIZE.compact]: '16px',\n      [_constants.SIZE.default]: '20px',\n      [_constants.SIZE.large]: '24px'\n      // @ts-ignore\n    }[this.props.size];\n    return /*#__PURE__*/React.createElement(MaskToggleButton, _extends({\n      $size: this.props.size,\n      $isFocusVisible: this.state.isFocusVisibleForMaskToggle,\n      \"aria-label\": label,\n      onClick: () => this.setState(state => ({\n        isMasked: !state.isMasked\n      })),\n      title: label,\n      type: \"button\"\n    }, maskToggleButtonProps, {\n      onFocus: (0, _focusVisible.forkFocus)(maskToggleButtonProps, this.handleFocusForMaskToggle),\n      onBlur: (0, _focusVisible.forkBlur)(maskToggleButtonProps, this.handleBlurForMaskToggle)\n    }), this.state.isMasked ? /*#__PURE__*/React.createElement(MaskToggleShowIcon, _extends({\n      size: iconSize,\n      title: label\n    }, maskToggleIconShowProps)) : /*#__PURE__*/React.createElement(MaskToggleHideIcon, _extends({\n      size: iconSize,\n      title: label\n    }, maskToggleIconHideProps)));\n  }\n  renderClear() {\n    const {\n      clearable,\n      value,\n      disabled,\n      readOnly,\n      overrides = {}\n    } = this.props;\n    if (disabled || readOnly || !clearable || value == null || typeof value === 'string' && value.length === 0) {\n      return null;\n    }\n    const [ClearIconContainer, clearIconContainerProps] = (0, _overrides.getOverrides)(overrides.ClearIconContainer, _styledComponents.StyledClearIconContainer);\n    const [ClearIcon, clearIconProps] = (0, _overrides.getOverrides)(overrides.ClearIcon, _styledComponents.StyledClearIcon);\n    const ariaLabel = 'Clear value';\n    const sharedProps = (0, _utils.getSharedProps)(this.props, this.state);\n    const iconSize = {\n      [_constants.SIZE.mini]: '14px',\n      [_constants.SIZE.compact]: '14px',\n      [_constants.SIZE.default]: '16px',\n      [_constants.SIZE.large]: '22px'\n      // @ts-ignore\n    }[this.props.size];\n    return /*#__PURE__*/React.createElement(ClearIconContainer, _extends({\n      $alignTop: this.props.type === _constants.CUSTOM_INPUT_TYPE.textarea\n    }, sharedProps, clearIconContainerProps), /*#__PURE__*/React.createElement(ClearIcon, _extends({\n      size: iconSize,\n      tabIndex: 0,\n      title: ariaLabel,\n      \"aria-label\": ariaLabel,\n      onClick: this.onClearIconClick\n      // @ts-ignore\n      ,\n      onKeyDown: event => {\n        if (event.key && (event.key === 'Enter' || event.key === ' ')) {\n          event.preventDefault();\n          this.onClearIconClick();\n        }\n      },\n      role: \"button\",\n      $isFocusVisible: this.state.isFocusVisibleForClear\n    }, sharedProps, clearIconProps, {\n      onFocus: (0, _focusVisible.forkFocus)(clearIconProps, this.handleFocusForClear),\n      onBlur: (0, _focusVisible.forkBlur)(clearIconProps, this.handleBlurForClear)\n    })));\n  }\n  render() {\n    const {\n      overrides: {\n        // @ts-ignore\n        InputContainer: InputContainerOverride,\n        // @ts-ignore\n        Input: InputOverride,\n        // @ts-ignore\n        Before: BeforeOverride,\n        // @ts-ignore\n        After: AfterOverride\n      }\n    } = this.props;\n\n    // more here https://developer.mozilla.org/en-US/docs/Web/Security/Securing_your_site/Turning_off_form_autocompletion#Preventing_autofilling_with_autocompletenew-password\n    const autoComplete = this.state.initialType === 'password' && this.props.autoComplete === BaseInput.defaultProps.autoComplete ? 'new-password' : this.props.autoComplete;\n    const sharedProps = (0, _utils.getSharedProps)(this.props, this.state);\n    const [InputContainer, inputContainerProps] = (0, _overrides.getOverrides)(InputContainerOverride, _styledComponents.InputContainer);\n    const [Input, inputProps] = (0, _overrides.getOverrides)(InputOverride, _styledComponents.Input);\n    const [Before, beforeProps] = (0, _overrides.getOverrides)(BeforeOverride, NullComponent);\n    const [After, afterProps] = (0, _overrides.getOverrides)(AfterOverride, NullComponent);\n    return /*#__PURE__*/React.createElement(InputContainer, _extends({\n      \"data-baseweb\": this.props['data-baseweb'] || 'base-input'\n    }, sharedProps, inputContainerProps), /*#__PURE__*/React.createElement(Before, _extends({}, sharedProps, beforeProps)), /*#__PURE__*/React.createElement(Input, _extends({\n      ref: this.inputRef,\n      \"aria-activedescendant\": this.props['aria-activedescendant'],\n      \"aria-autocomplete\": this.props['aria-autocomplete'],\n      \"aria-controls\": this.props['aria-controls'],\n      \"aria-errormessage\": this.props['aria-errormessage'],\n      \"aria-haspopup\": this.props['aria-haspopup'],\n      \"aria-label\": this.props['aria-label'],\n      \"aria-labelledby\": this.props['aria-labelledby'],\n      \"aria-describedby\": this.props['aria-describedby'],\n      \"aria-invalid\": this.props.error,\n      \"aria-required\": this.props.required,\n      autoComplete: autoComplete,\n      disabled: this.props.disabled,\n      readOnly: this.props.readOnly,\n      id: this.props.id,\n      inputMode: this.props.inputMode,\n      maxLength: this.props.maxLength,\n      name: this.props.name,\n      onBlur: this.onBlur,\n      onChange: this.props.onChange,\n      onFocus: this.onFocus,\n      onKeyDown: this.props.onKeyDown,\n      onKeyPress: this.props.onKeyPress,\n      onKeyUp: this.props.onKeyUp,\n      pattern: this.props.pattern,\n      placeholder: this.props.placeholder,\n      type: this.getInputType(),\n      required: this.props.required,\n      role: this.props.role,\n      value: this.props.value,\n      min: this.props.min,\n      max: this.props.max,\n      step: this.props.step,\n      rows: this.props.type === _constants.CUSTOM_INPUT_TYPE.textarea ? this.props.rows : null\n    }, sharedProps, inputProps)), this.renderClear(), this.renderMaskToggle(), /*#__PURE__*/React.createElement(After, _extends({}, sharedProps, afterProps)));\n  }\n}\n_defineProperty(BaseInput, \"defaultProps\", {\n  // @ts-ignore\n  'aria-activedescendant': null,\n  // @ts-ignore\n  'aria-autocomplete': null,\n  // @ts-ignore\n  'aria-controls': null,\n  // @ts-ignore\n  'aria-errormessage': null,\n  // @ts-ignore\n  'aria-haspopup': null,\n  // @ts-ignore\n  'aria-label': null,\n  // @ts-ignore\n  'aria-labelledby': null,\n  // @ts-ignore\n  'aria-describedby': null,\n  adjoined: _constants.ADJOINED.none,\n  autoComplete: 'on',\n  autoFocus: false,\n  disabled: false,\n  error: false,\n  positive: false,\n  name: '',\n  inputMode: 'text',\n  onBlur: () => {},\n  onChange: () => {},\n  onKeyDown: () => {},\n  onKeyPress: () => {},\n  onKeyUp: () => {},\n  onFocus: () => {},\n  onClear: () => {},\n  clearable: false,\n  clearOnEscape: true,\n  overrides: {},\n  // @ts-ignore\n  pattern: null,\n  placeholder: '',\n  required: false,\n  // @ts-ignore\n  role: null,\n  size: _constants.SIZE.default,\n  type: 'text',\n  readOnly: false\n});\nvar _default = exports.default = BaseInput;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}