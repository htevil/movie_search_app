{"ast":null,"code":"// src/components/carousel/autoplay-controller.ts\nvar AutoplayController = class {\n  constructor(host, tickCallback) {\n    this.timerId = 0;\n    this.activeInteractions = 0;\n    this.paused = false;\n    this.stopped = true;\n    this.pause = () => {\n      if (!this.activeInteractions++) {\n        this.paused = true;\n        this.host.requestUpdate();\n      }\n    };\n    this.resume = () => {\n      if (! --this.activeInteractions) {\n        this.paused = false;\n        this.host.requestUpdate();\n      }\n    };\n    host.addController(this);\n    this.host = host;\n    this.tickCallback = tickCallback;\n  }\n  hostConnected() {\n    this.host.addEventListener(\"mouseenter\", this.pause);\n    this.host.addEventListener(\"mouseleave\", this.resume);\n    this.host.addEventListener(\"focusin\", this.pause);\n    this.host.addEventListener(\"focusout\", this.resume);\n    this.host.addEventListener(\"touchstart\", this.pause, {\n      passive: true\n    });\n    this.host.addEventListener(\"touchend\", this.resume);\n  }\n  hostDisconnected() {\n    this.stop();\n    this.host.removeEventListener(\"mouseenter\", this.pause);\n    this.host.removeEventListener(\"mouseleave\", this.resume);\n    this.host.removeEventListener(\"focusin\", this.pause);\n    this.host.removeEventListener(\"focusout\", this.resume);\n    this.host.removeEventListener(\"touchstart\", this.pause);\n    this.host.removeEventListener(\"touchend\", this.resume);\n  }\n  start(interval) {\n    this.stop();\n    this.stopped = false;\n    this.timerId = window.setInterval(() => {\n      if (!this.paused) {\n        this.tickCallback();\n      }\n    }, interval);\n  }\n  stop() {\n    clearInterval(this.timerId);\n    this.stopped = true;\n    this.host.requestUpdate();\n  }\n};\nexport { AutoplayController };","map":{"version":3,"names":["AutoplayController","constructor","host","tickCallback","timerId","activeInteractions","paused","stopped","pause","requestUpdate","resume","addController","hostConnected","addEventListener","passive","hostDisconnected","stop","removeEventListener","start","interval","window","setInterval","clearInterval"],"sources":["C:/Users/ASUS/Project/Web Project/Greekforgreek_project/React project/movie_search_app/node_modules/@shoelace-style/shoelace/dist/chunks/chunk.F4VGSDIW.js"],"sourcesContent":["// src/components/carousel/autoplay-controller.ts\nvar AutoplayController = class {\n  constructor(host, tickCallback) {\n    this.timerId = 0;\n    this.activeInteractions = 0;\n    this.paused = false;\n    this.stopped = true;\n    this.pause = () => {\n      if (!this.activeInteractions++) {\n        this.paused = true;\n        this.host.requestUpdate();\n      }\n    };\n    this.resume = () => {\n      if (!--this.activeInteractions) {\n        this.paused = false;\n        this.host.requestUpdate();\n      }\n    };\n    host.addController(this);\n    this.host = host;\n    this.tickCallback = tickCallback;\n  }\n  hostConnected() {\n    this.host.addEventListener(\"mouseenter\", this.pause);\n    this.host.addEventListener(\"mouseleave\", this.resume);\n    this.host.addEventListener(\"focusin\", this.pause);\n    this.host.addEventListener(\"focusout\", this.resume);\n    this.host.addEventListener(\"touchstart\", this.pause, { passive: true });\n    this.host.addEventListener(\"touchend\", this.resume);\n  }\n  hostDisconnected() {\n    this.stop();\n    this.host.removeEventListener(\"mouseenter\", this.pause);\n    this.host.removeEventListener(\"mouseleave\", this.resume);\n    this.host.removeEventListener(\"focusin\", this.pause);\n    this.host.removeEventListener(\"focusout\", this.resume);\n    this.host.removeEventListener(\"touchstart\", this.pause);\n    this.host.removeEventListener(\"touchend\", this.resume);\n  }\n  start(interval) {\n    this.stop();\n    this.stopped = false;\n    this.timerId = window.setInterval(() => {\n      if (!this.paused) {\n        this.tickCallback();\n      }\n    }, interval);\n  }\n  stop() {\n    clearInterval(this.timerId);\n    this.stopped = true;\n    this.host.requestUpdate();\n  }\n};\n\nexport {\n  AutoplayController\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}