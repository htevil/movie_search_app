{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Project\\\\Web Project\\\\Greekforgreek_project\\\\React project\\\\movie_search_app\\\\src\\\\components\\\\Pagination\\\\index.js\";\n// Pagination.js\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pagination = ({\n  totalPages,\n  currentPage,\n  handlePageChange\n}) => {\n  if (totalPages <= 1) return null; // No pagination needed if only one page\n\n  const pageNumbers = [];\n  for (let i = 1; i <= totalPages; i++) {\n    pageNumbers.push(i);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pagination\",\n    style: {\n      margin: '30px 30px 0px 30px',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: [currentPage > 1 &&\n    /*#__PURE__*/\n    // Previous button if not on first page\n    _jsxDEV(\"span\", {\n      onClick: () => handlePageChange(currentPage - 1),\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), pageNumbers.map(pageNumber => /*#__PURE__*/_jsxDEV(\"span\", {\n      className: pageNumber === currentPage ? \"\" : \"\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          width: '25px',\n          backgroundColor: 'white',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        onClick: () => handlePageChange(pageNumber),\n        children: pageNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)\n    }, pageNumber, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)), currentPage < totalPages &&\n    /*#__PURE__*/\n    // Next button if not on last page\n    _jsxDEV(\"span\", {\n      onClick: () => handlePageChange(currentPage + 1),\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          width: '25px',\n          backgroundColor: 'white'\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = Pagination;\nexport default Pagination;\nvar _c;\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Pagination","totalPages","currentPage","handlePageChange","pageNumbers","i","push","className","style","margin","display","justifyContent","alignItems","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","pageNumber","width","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Project/Web Project/Greekforgreek_project/React project/movie_search_app/src/components/Pagination/index.js"],"sourcesContent":["// Pagination.js\r\nimport React from 'react';\r\n\r\nconst Pagination = ({ totalPages, currentPage, handlePageChange }) => {\r\n  if (totalPages <= 1) return null; // No pagination needed if only one page\r\n\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= totalPages; i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <div className=\"pagination\" style={{ margin: '30px 30px 0px 30px', display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n      {currentPage > 1 && ( // Previous button if not on first page\r\n        <span onClick={() => handlePageChange(currentPage - 1)}>\r\n          <button>Previous</button>\r\n        </span>\r\n      )}\r\n      {pageNumbers.map((pageNumber) => (\r\n        <span key={pageNumber} className={pageNumber === currentPage ? \"\" : \"\"}>\r\n          <button style={{ width: '25px',  backgroundColor: 'white', display: 'flex', justifyContent: 'center', alignItems: 'center' }} onClick={() => handlePageChange(pageNumber)}>{pageNumber}</button>\r\n        </span>\r\n      ))}\r\n      {currentPage < totalPages && ( // Next button if not on last page\r\n        <span onClick={() => handlePageChange(currentPage + 1)}>\r\n          <button style={{ width: '25px',  backgroundColor: 'white' }}>Next</button>\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC,UAAU;EAAEC,WAAW;EAAEC;AAAiB,CAAC,KAAK;EACpE,IAAIF,UAAU,IAAI,CAAC,EAAE,OAAO,IAAI,CAAC,CAAC;;EAElC,MAAMG,WAAW,GAAG,EAAE;EACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIJ,UAAU,EAAEI,CAAC,EAAE,EAAE;IACpCD,WAAW,CAACE,IAAI,CAACD,CAAC,CAAC;EACrB;EAEA,oBACEN,OAAA;IAAKQ,SAAS,EAAC,YAAY;IAACC,KAAK,EAAE;MAAEC,MAAM,EAAE,oBAAoB;MAAEC,OAAO,EAAE,MAAM;MAAEC,cAAc,EAAE,QAAQ;MAAEC,UAAU,EAAE;IAAQ,CAAE;IAAAC,QAAA,GACjIX,WAAW,GAAG,CAAC;IAAA;IAAM;IACpBH,OAAA;MAAMe,OAAO,EAAEA,CAAA,KAAMX,gBAAgB,CAACD,WAAW,GAAG,CAAC,CAAE;MAAAW,QAAA,eACrDd,OAAA;QAAAc,QAAA,EAAQ;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CACP,EACAd,WAAW,CAACe,GAAG,CAAEC,UAAU,iBAC1BrB,OAAA;MAAuBQ,SAAS,EAAEa,UAAU,KAAKlB,WAAW,GAAG,EAAE,GAAG,EAAG;MAAAW,QAAA,eACrEd,OAAA;QAAQS,KAAK,EAAE;UAAEa,KAAK,EAAE,MAAM;UAAGC,eAAe,EAAE,OAAO;UAAEZ,OAAO,EAAE,MAAM;UAAEC,cAAc,EAAE,QAAQ;UAAEC,UAAU,EAAE;QAAS,CAAE;QAACE,OAAO,EAAEA,CAAA,KAAMX,gBAAgB,CAACiB,UAAU,CAAE;QAAAP,QAAA,EAAEO;MAAU;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS;IAAC,GADvLE,UAAU;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEf,CACP,CAAC,EACDhB,WAAW,GAAGD,UAAU;IAAA;IAAM;IAC7BF,OAAA;MAAMe,OAAO,EAAEA,CAAA,KAAMX,gBAAgB,CAACD,WAAW,GAAG,CAAC,CAAE;MAAAW,QAAA,eACrDd,OAAA;QAAQS,KAAK,EAAE;UAAEa,KAAK,EAAE,MAAM;UAAGC,eAAe,EAAE;QAAQ,CAAE;QAAAT,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACK,EAAA,GA3BIvB,UAAU;AA6BhB,eAAeA,UAAU;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}