{"ast":null,"code":"/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t = t => (e, o) => {\n  void 0 !== o ? o.addInitializer(() => {\n    customElements.define(t, e);\n  }) : customElements.define(t, e);\n};\nexport { t as customElement };","map":{"version":3,"names":["t","e","o","addInitializer","customElements","define","customElement"],"sources":["C:\\Users\\ASUS\\Project\\Web Project\\Greekforgreek_project\\React project\\movie_search_app\\node_modules\\@lit\\reactive-element\\src\\decorators\\custom-element.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport type {Constructor} from './base.js';\n\n/**\n * Allow for custom element classes with private constructors\n */\ntype CustomElementClass = Omit<typeof HTMLElement, 'new'>;\n\nexport type CustomElementDecorator = {\n  // legacy\n  (cls: CustomElementClass): void;\n\n  // standard\n  (\n    target: CustomElementClass,\n    context: ClassDecoratorContext<Constructor<HTMLElement>>\n  ): void;\n};\n\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```js\n * @customElement('my-element')\n * class MyElement extends LitElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n * @category Decorator\n * @param tagName The tag name of the custom element to define.\n */\nexport const customElement =\n  (tagName: string): CustomElementDecorator =>\n  (\n    classOrTarget: CustomElementClass | Constructor<HTMLElement>,\n    context?: ClassDecoratorContext<Constructor<HTMLElement>>\n  ) => {\n    if (context !== undefined) {\n      context.addInitializer(() => {\n        customElements.define(\n          tagName,\n          classOrTarget as CustomElementConstructor\n        );\n      });\n    } else {\n      customElements.define(tagName, classOrTarget as CustomElementConstructor);\n    }\n  };\n"],"mappings":";;;;;AA6CO,MAAMA,CAAA,GACVA,CAAA,IACD,CACEC,CAAA,EACAC,CAAA;EAAA,KAEgB,MAAZA,CAAA,GACFA,CAAA,CAAQC,cAAA,CAAe;IACrBC,cAAA,CAAeC,MAAA,CACbL,CAAA,EACAC,CAAA,CACD;EAAA,KAGHG,cAAA,CAAeC,MAAA,CAAOL,CAAA,EAASC,CAAA,CAChC;AAAA;AAAA,SAAAD,CAAA,IAAAM,aAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}