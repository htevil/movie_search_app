{"ast":null,"code":"// src/internal/offset.ts\nfunction getOffset(element, parent) {\n  return {\n    top: Math.round(element.getBoundingClientRect().top - parent.getBoundingClientRect().top),\n    left: Math.round(element.getBoundingClientRect().left - parent.getBoundingClientRect().left)\n  };\n}\n\n// src/internal/scroll.ts\nvar locks = /* @__PURE__ */new Set();\nfunction getScrollbarWidth() {\n  const documentWidth = document.documentElement.clientWidth;\n  return Math.abs(window.innerWidth - documentWidth);\n}\nfunction getExistingBodyPadding() {\n  const padding = Number(getComputedStyle(document.body).paddingRight.replace(/px/, \"\"));\n  if (isNaN(padding) || !padding) {\n    return 0;\n  }\n  return padding;\n}\nfunction lockBodyScrolling(lockingEl) {\n  locks.add(lockingEl);\n  if (!document.documentElement.classList.contains(\"sl-scroll-lock\")) {\n    const scrollbarWidth = getScrollbarWidth() + getExistingBodyPadding();\n    let scrollbarGutterProperty = getComputedStyle(document.documentElement).scrollbarGutter;\n    if (!scrollbarGutterProperty || scrollbarGutterProperty === \"auto\") {\n      scrollbarGutterProperty = \"stable\";\n    }\n    if (scrollbarWidth < 2) {\n      scrollbarGutterProperty = \"\";\n    }\n    document.documentElement.style.setProperty(\"--sl-scroll-lock-gutter\", scrollbarGutterProperty);\n    document.documentElement.classList.add(\"sl-scroll-lock\");\n    document.documentElement.style.setProperty(\"--sl-scroll-lock-size\", `${scrollbarWidth}px`);\n  }\n}\nfunction unlockBodyScrolling(lockingEl) {\n  locks.delete(lockingEl);\n  if (locks.size === 0) {\n    document.documentElement.classList.remove(\"sl-scroll-lock\");\n    document.documentElement.style.removeProperty(\"--sl-scroll-lock-size\");\n  }\n}\nfunction scrollIntoView(element, container, direction = \"vertical\", behavior = \"smooth\") {\n  const offset = getOffset(element, container);\n  const offsetTop = offset.top + container.scrollTop;\n  const offsetLeft = offset.left + container.scrollLeft;\n  const minX = container.scrollLeft;\n  const maxX = container.scrollLeft + container.offsetWidth;\n  const minY = container.scrollTop;\n  const maxY = container.scrollTop + container.offsetHeight;\n  if (direction === \"horizontal\" || direction === \"both\") {\n    if (offsetLeft < minX) {\n      container.scrollTo({\n        left: offsetLeft,\n        behavior\n      });\n    } else if (offsetLeft + element.clientWidth > maxX) {\n      container.scrollTo({\n        left: offsetLeft - container.offsetWidth + element.clientWidth,\n        behavior\n      });\n    }\n  }\n  if (direction === \"vertical\" || direction === \"both\") {\n    if (offsetTop < minY) {\n      container.scrollTo({\n        top: offsetTop,\n        behavior\n      });\n    } else if (offsetTop + element.clientHeight > maxY) {\n      container.scrollTo({\n        top: offsetTop - container.offsetHeight + element.clientHeight,\n        behavior\n      });\n    }\n  }\n}\nexport { lockBodyScrolling, unlockBodyScrolling, scrollIntoView };","map":{"version":3,"names":["getOffset","element","parent","top","Math","round","getBoundingClientRect","left","locks","Set","getScrollbarWidth","documentWidth","document","documentElement","clientWidth","abs","window","innerWidth","getExistingBodyPadding","padding","Number","getComputedStyle","body","paddingRight","replace","isNaN","lockBodyScrolling","lockingEl","add","classList","contains","scrollbarWidth","scrollbarGutterProperty","scrollbarGutter","style","setProperty","unlockBodyScrolling","delete","size","remove","removeProperty","scrollIntoView","container","direction","behavior","offset","offsetTop","scrollTop","offsetLeft","scrollLeft","minX","maxX","offsetWidth","minY","maxY","offsetHeight","scrollTo","clientHeight"],"sources":["C:/Users/ASUS/Project/Web Project/Greekforgreek_project/React project/movie_search_app/node_modules/@shoelace-style/shoelace/dist/chunks/chunk.RWUUFNUL.js"],"sourcesContent":["// src/internal/offset.ts\nfunction getOffset(element, parent) {\n  return {\n    top: Math.round(element.getBoundingClientRect().top - parent.getBoundingClientRect().top),\n    left: Math.round(element.getBoundingClientRect().left - parent.getBoundingClientRect().left)\n  };\n}\n\n// src/internal/scroll.ts\nvar locks = /* @__PURE__ */ new Set();\nfunction getScrollbarWidth() {\n  const documentWidth = document.documentElement.clientWidth;\n  return Math.abs(window.innerWidth - documentWidth);\n}\nfunction getExistingBodyPadding() {\n  const padding = Number(getComputedStyle(document.body).paddingRight.replace(/px/, \"\"));\n  if (isNaN(padding) || !padding) {\n    return 0;\n  }\n  return padding;\n}\nfunction lockBodyScrolling(lockingEl) {\n  locks.add(lockingEl);\n  if (!document.documentElement.classList.contains(\"sl-scroll-lock\")) {\n    const scrollbarWidth = getScrollbarWidth() + getExistingBodyPadding();\n    let scrollbarGutterProperty = getComputedStyle(document.documentElement).scrollbarGutter;\n    if (!scrollbarGutterProperty || scrollbarGutterProperty === \"auto\") {\n      scrollbarGutterProperty = \"stable\";\n    }\n    if (scrollbarWidth < 2) {\n      scrollbarGutterProperty = \"\";\n    }\n    document.documentElement.style.setProperty(\"--sl-scroll-lock-gutter\", scrollbarGutterProperty);\n    document.documentElement.classList.add(\"sl-scroll-lock\");\n    document.documentElement.style.setProperty(\"--sl-scroll-lock-size\", `${scrollbarWidth}px`);\n  }\n}\nfunction unlockBodyScrolling(lockingEl) {\n  locks.delete(lockingEl);\n  if (locks.size === 0) {\n    document.documentElement.classList.remove(\"sl-scroll-lock\");\n    document.documentElement.style.removeProperty(\"--sl-scroll-lock-size\");\n  }\n}\nfunction scrollIntoView(element, container, direction = \"vertical\", behavior = \"smooth\") {\n  const offset = getOffset(element, container);\n  const offsetTop = offset.top + container.scrollTop;\n  const offsetLeft = offset.left + container.scrollLeft;\n  const minX = container.scrollLeft;\n  const maxX = container.scrollLeft + container.offsetWidth;\n  const minY = container.scrollTop;\n  const maxY = container.scrollTop + container.offsetHeight;\n  if (direction === \"horizontal\" || direction === \"both\") {\n    if (offsetLeft < minX) {\n      container.scrollTo({ left: offsetLeft, behavior });\n    } else if (offsetLeft + element.clientWidth > maxX) {\n      container.scrollTo({ left: offsetLeft - container.offsetWidth + element.clientWidth, behavior });\n    }\n  }\n  if (direction === \"vertical\" || direction === \"both\") {\n    if (offsetTop < minY) {\n      container.scrollTo({ top: offsetTop, behavior });\n    } else if (offsetTop + element.clientHeight > maxY) {\n      container.scrollTo({ top: offsetTop - container.offsetHeight + element.clientHeight, behavior });\n    }\n  }\n}\n\nexport {\n  lockBodyScrolling,\n  unlockBodyScrolling,\n  scrollIntoView\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}