{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Project\\\\Web Project\\\\Greekforgreek_project\\\\React project\\\\movie_search_app\\\\src\\\\components\\\\SelectorComponent\\\\index.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { getMoviesByGenre } from '../../api/movies';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllGenres } from \"../../api/movies\";\nimport { getMoviesByRating } from \"../../api/movies\";\nimport { debounce } from \"lodash\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SelectorComponent({\n  name,\n  value\n}) {\n  _s();\n  const dispatch = useDispatch();\n  const [selectedValue, setSelectedValue] = useState('');\n  const handleChange = event => {\n    setSelectedValue(event.target.value);\n    dispatch(getMoviesByGenre(event.target.value));\n  };\n  useEffect(() => {\n    dispatch(getAllGenres());\n  }, []);\n  const onRatingChange = debounce(e => {\n    dispatch(getMoviesByRating(e.target.value));\n    console.log(e.target.value);\n  }, 1000);\n  const {\n    genres,\n    rating\n  } = useSelector(state => state.movies);\n  console.log(genres, rating, \"dokd\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Filter by: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn btn-secondary dropdown-toggle\",\n        type: \"button\",\n        id: \"dropdownMenu2\",\n        \"data-toggle\": \"dropdown\",\n        \"aria-haspopup\": \"true\",\n        \"aria-expanded\": \"false\",\n        value: selectedValue,\n        label: name,\n        onChange: handleChange,\n        children: \"Genres\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"dropdown-menu\",\n        \"aria-labelledby\": \"dropdownMenu2\",\n        children: (genres === null || genres === void 0 ? void 0 : genres.length) > 0 && genres.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"dropdown-item\",\n          type: \"button\",\n          value: item,\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 55\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(SelectorComponent, \"NV80gH/YqfhTUz7R7D9WUsR8aRA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = SelectorComponent;\nvar _c;\n$RefreshReg$(_c, \"SelectorComponent\");","map":{"version":3,"names":["React","getMoviesByGenre","useState","useEffect","useDispatch","useSelector","getAllGenres","getMoviesByRating","debounce","jsxDEV","_jsxDEV","Fragment","_Fragment","SelectorComponent","name","value","_s","dispatch","selectedValue","setSelectedValue","handleChange","event","target","onRatingChange","e","console","log","genres","rating","state","movies","children","fileName","_jsxFileName","lineNumber","columnNumber","class","type","id","label","onChange","length","map","item","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Project/Web Project/Greekforgreek_project/React project/movie_search_app/src/components/SelectorComponent/index.js"],"sourcesContent":["import * as React from 'react';\r\nimport { getMoviesByGenre } from '../../api/movies';\r\nimport { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllGenres } from \"../../api/movies\";\r\nimport { getMoviesByRating } from \"../../api/movies\";\r\nimport { debounce } from \"lodash\";\r\n\r\nexport default function SelectorComponent({ name, value }) {\r\n  const dispatch = useDispatch();\r\n  const [selectedValue, setSelectedValue] = useState('');\r\n\r\n  const handleChange = (event) => {\r\n    setSelectedValue(event.target.value);\r\n    dispatch(getMoviesByGenre(event.target.value));\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllGenres());\r\n  }, []);\r\n\r\n  const onRatingChange = debounce((e) => {\r\n    dispatch(getMoviesByRating(e.target.value));\r\n    console.log(e.target.value);\r\n  }, 1000);\r\n\r\n  const { genres, rating } = useSelector((state) => state.movies);\r\n  console.log(genres, rating, \"dokd\");\r\n\r\n  return (\r\n    <>\r\n      <label>Filter by: </label>\r\n\r\n      <label></label>\r\n      <select >\r\n        \r\n      </select>\r\n      \r\n      <div class=\"dropdown\">\r\n        <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenu2\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" value={selectedValue} label={name} onChange={handleChange}>Genres</button>\r\n        <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenu2\">\r\n          {genres?.length > 0 && genres.map((item) => <button class=\"dropdown-item\" type=\"button\" value={item}>{item}</button>)}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}