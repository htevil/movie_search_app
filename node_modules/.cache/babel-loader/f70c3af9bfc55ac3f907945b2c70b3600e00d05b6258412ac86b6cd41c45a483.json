{"ast":null,"code":"import axios from 'axios';\nimport { setMovies, setGenres } from '../slice/movieSlice';\nconst BaseURL = \"http://localhost:3000/api/movies\";\nlet value1 = \"\";\nlet value2 = 1;\nexport const getMovies = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await axios.get(BaseURL);\n    dispatch(setMovies(data));\n    return data;\n  } catch (err) {\n    return err;\n  }\n};\nexport const getMoviesBySearch = value => async dispatch => {\n  const url = BaseURL + '/search';\n  try {\n    const {\n      data\n    } = await axios.get(url, {\n      params: {\n        search: value\n      }\n    });\n    dispatch(setMovies(data));\n  } catch (err) {\n    return err;\n  }\n};\nexport const getAllGenres = () => async dispatch => {\n  const url = BaseURL + '/genres';\n  try {\n    const {\n      data\n    } = await axios.get(url);\n    dispatch(setGenres(data));\n  } catch (err) {\n    return err;\n  }\n};\n\n/*export const getMoviesByGenre = (value) => async dispatch => {\r\n    const url = BaseURL + '/genre';\r\n    try {\r\n        const {data} = await axios.get(url,{\r\n            params: {\r\n                genre: value\r\n            }\r\n        });\r\n        dispatch(setMovies(data));\r\n    }catch(err){\r\n        return err\r\n    }\r\n}\r\n\r\nexport const getMoviesByRating = (value) => async dispatch => {\r\n    const url = BaseURL + '/rating';\r\n    try {\r\n        const {data} = await axios.get(url,{\r\n            params: {\r\n                rating: value\r\n            }\r\n        });\r\n        dispatch(setMovies(data));\r\n    }catch(err){\r\n        return err\r\n    }\r\n}*/\n\nexport const getMoviesByfilter = value => async dispatch => {\n  if (value.includes(\"genre\")) {\n    let index = value.search(\":\");\n    value1 = value.slice(index + 1);\n  } else {\n    let index = value.search(\":\");\n    value2 = value.slice(index + 1);\n  }\n  const url = BaseURL + '/filter';\n  try {\n    const {\n      data\n    } = await axios.get(url, {\n      params: {\n        genre: value1,\n        rating: value2\n      }\n    });\n    dispatch(setMovies(data));\n  } catch (err) {\n    return err;\n  }\n};","map":{"version":3,"names":["axios","setMovies","setGenres","BaseURL","value1","value2","getMovies","dispatch","data","get","err","getMoviesBySearch","value","url","params","search","getAllGenres","getMoviesByfilter","includes","index","slice","genre","rating"],"sources":["C:/Users/ASUS/Project/Web Project/Greekforgreek_project/React project/movie_search_app/src/api/movies.js"],"sourcesContent":["import axios from 'axios';\r\nimport { setMovies, setGenres } from '../slice/movieSlice';\r\n\r\nconst BaseURL = \"http://localhost:3000/api/movies\";\r\nlet value1 = \"\";\r\nlet value2 = 1;\r\n\r\nexport const getMovies = () => async dispatch => {\r\n    try {\r\n        const {data} = await axios.get(BaseURL);\r\n        dispatch(setMovies(data))\r\n        return data\r\n    }catch(err){\r\n        return err\r\n    }\r\n}\r\n\r\nexport const getMoviesBySearch = (value) => async dispatch => {\r\n    const url = BaseURL + '/search';\r\n    try {\r\n        const {data} = await axios.get(url,{\r\n            params: {\r\n                search: value\r\n            }\r\n        });\r\n        dispatch(setMovies(data));\r\n    }catch(err){\r\n        return err\r\n    }\r\n}\r\n\r\nexport const getAllGenres = () => async dispatch => {\r\n    const url = BaseURL + '/genres';\r\n    try {\r\n        const {data} = await axios.get(url);\r\n        dispatch(setGenres(data));\r\n    }catch(err){\r\n        return err\r\n    }\r\n}\r\n\r\n/*export const getMoviesByGenre = (value) => async dispatch => {\r\n    const url = BaseURL + '/genre';\r\n    try {\r\n        const {data} = await axios.get(url,{\r\n            params: {\r\n                genre: value\r\n            }\r\n        });\r\n        dispatch(setMovies(data));\r\n    }catch(err){\r\n        return err\r\n    }\r\n}\r\n\r\nexport const getMoviesByRating = (value) => async dispatch => {\r\n    const url = BaseURL + '/rating';\r\n    try {\r\n        const {data} = await axios.get(url,{\r\n            params: {\r\n                rating: value\r\n            }\r\n        });\r\n        dispatch(setMovies(data));\r\n    }catch(err){\r\n        return err\r\n    }\r\n}*/\r\n\r\nexport const getMoviesByfilter = (value) => async dispatch => {\r\n\r\n\r\n    if (value.includes(\"genre\")){\r\n        let index = value.search(\":\");\r\n        value1 = value.slice(index+1);\r\n    } else{\r\n        let index =  value.search(\":\");\r\n        value2 = value.slice(index+1);\r\n    }\r\n\r\n    const url = BaseURL + '/filter';\r\n\r\n    try {\r\n        const {data} = await axios.get(url,{\r\n            params: {\r\n                genre: value1,\r\n                rating: value2\r\n            }\r\n        });\r\n        dispatch(setMovies(data));\r\n    }catch(err){\r\n        return err\r\n    }\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,SAAS,QAAQ,qBAAqB;AAE1D,MAAMC,OAAO,GAAG,kCAAkC;AAClD,IAAIC,MAAM,GAAG,EAAE;AACf,IAAIC,MAAM,GAAG,CAAC;AAEd,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM,MAAMC,QAAQ,IAAI;EAC7C,IAAI;IACA,MAAM;MAACC;IAAI,CAAC,GAAG,MAAMR,KAAK,CAACS,GAAG,CAACN,OAAO,CAAC;IACvCI,QAAQ,CAACN,SAAS,CAACO,IAAI,CAAC,CAAC;IACzB,OAAOA,IAAI;EACf,CAAC,QAAME,GAAG,EAAC;IACP,OAAOA,GAAG;EACd;AACJ,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAIC,KAAK,IAAK,MAAML,QAAQ,IAAI;EAC1D,MAAMM,GAAG,GAAGV,OAAO,GAAG,SAAS;EAC/B,IAAI;IACA,MAAM;MAACK;IAAI,CAAC,GAAG,MAAMR,KAAK,CAACS,GAAG,CAACI,GAAG,EAAC;MAC/BC,MAAM,EAAE;QACJC,MAAM,EAAEH;MACZ;IACJ,CAAC,CAAC;IACFL,QAAQ,CAACN,SAAS,CAACO,IAAI,CAAC,CAAC;EAC7B,CAAC,QAAME,GAAG,EAAC;IACP,OAAOA,GAAG;EACd;AACJ,CAAC;AAED,OAAO,MAAMM,YAAY,GAAGA,CAAA,KAAM,MAAMT,QAAQ,IAAI;EAChD,MAAMM,GAAG,GAAGV,OAAO,GAAG,SAAS;EAC/B,IAAI;IACA,MAAM;MAACK;IAAI,CAAC,GAAG,MAAMR,KAAK,CAACS,GAAG,CAACI,GAAG,CAAC;IACnCN,QAAQ,CAACL,SAAS,CAACM,IAAI,CAAC,CAAC;EAC7B,CAAC,QAAME,GAAG,EAAC;IACP,OAAOA,GAAG;EACd;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMO,iBAAiB,GAAIL,KAAK,IAAK,MAAML,QAAQ,IAAI;EAG1D,IAAIK,KAAK,CAACM,QAAQ,CAAC,OAAO,CAAC,EAAC;IACxB,IAAIC,KAAK,GAAGP,KAAK,CAACG,MAAM,CAAC,GAAG,CAAC;IAC7BX,MAAM,GAAGQ,KAAK,CAACQ,KAAK,CAACD,KAAK,GAAC,CAAC,CAAC;EACjC,CAAC,MAAK;IACF,IAAIA,KAAK,GAAIP,KAAK,CAACG,MAAM,CAAC,GAAG,CAAC;IAC9BV,MAAM,GAAGO,KAAK,CAACQ,KAAK,CAACD,KAAK,GAAC,CAAC,CAAC;EACjC;EAEA,MAAMN,GAAG,GAAGV,OAAO,GAAG,SAAS;EAE/B,IAAI;IACA,MAAM;MAACK;IAAI,CAAC,GAAG,MAAMR,KAAK,CAACS,GAAG,CAACI,GAAG,EAAC;MAC/BC,MAAM,EAAE;QACJO,KAAK,EAAEjB,MAAM;QACbkB,MAAM,EAAEjB;MACZ;IACJ,CAAC,CAAC;IACFE,QAAQ,CAACN,SAAS,CAACO,IAAI,CAAC,CAAC;EAC7B,CAAC,QAAME,GAAG,EAAC;IACP,OAAOA,GAAG;EACd;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}