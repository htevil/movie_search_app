{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Project\\\\Web Project\\\\Greekforgreek_project\\\\React project\\\\movie_search_app\\\\src\\\\components\\\\Pagination\\\\index.js\",\n  _s = $RefreshSig$();\n// Pagination.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pagination = ({\n  totalPages,\n  currentPage,\n  handlePageChange\n}) => {\n  _s();\n  if (totalPages <= 1) return null; // No pagination needed if only one page\n\n  const [activePage, setActivePage] = useState(currentPage);\n  const pageNumbers = [];\n  for (let i = 1; i <= totalPages; i++) {\n    pageNumbers.push(i);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pagination\",\n    style: {\n      fontSize: '18px',\n      margin: '30px 30px 0px 30px',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      gap: '18px'\n    },\n    children: [currentPage > 1 &&\n    /*#__PURE__*/\n    // Previous button if not on first page\n    _jsxDEV(\"span\", {\n      onClick: () => handlePageChange(currentPage - 1),\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          width: '65px',\n          height: '30px',\n          color: 'white',\n          padding: '2px 5px 2px 5px',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          borderRadius: '4px',\n          backgroundColor: 'transparent'\n        },\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), pageNumbers.map(pageNumber => /*#__PURE__*/_jsxDEV(\"span\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: pageNumber === activePage ? 'active' : '',\n        style: {\n          width: '30px',\n          height: '30px',\n          color: 'white',\n          padding: '2px 5px 2px 5px',\n          borderRadius: '4px',\n          backgroundColor: 'transparent',\n          ':hover': {\n            backgroundColor: '#23527c' // hover background color\n          }\n        },\n        onClick: () => {\n          handlePageChange(pageNumber);\n          setActivePage(pageNumber);\n        },\n        children: pageNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)\n    }, pageNumber, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)), currentPage < totalPages &&\n    /*#__PURE__*/\n    // Next button if not on last page\n    _jsxDEV(\"span\", {\n      onClick: () => handlePageChange(currentPage + 1),\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          color: 'white',\n          height: '30px',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          padding: '2px 5px 2px 5px',\n          borderRadius: '4px',\n          backgroundColor: 'transparent'\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(Pagination, \"frmYcPhG7sOCrKyDH8oOV2EkSRw=\");\n_c = Pagination;\nexport default Pagination;\nvar _c;\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Pagination","totalPages","currentPage","handlePageChange","_s","activePage","setActivePage","pageNumbers","i","push","className","style","fontSize","margin","display","justifyContent","alignItems","gap","children","onClick","width","height","color","padding","borderRadius","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","map","pageNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Project/Web Project/Greekforgreek_project/React project/movie_search_app/src/components/Pagination/index.js"],"sourcesContent":["// Pagination.js\r\nimport React, { useState } from 'react';\r\n\r\nconst Pagination = ({ totalPages, currentPage, handlePageChange }) => {\r\n  if (totalPages <= 1) return null; // No pagination needed if only one page\r\n\r\n  const [activePage, setActivePage] = useState(currentPage);\r\n\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= totalPages; i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <div className=\"pagination\" style={{ fontSize: '18px', margin: '30px 30px 0px 30px', display: 'flex', justifyContent: 'center', alignItems: 'center', gap: '18px' }}>\r\n      {currentPage > 1 && ( // Previous button if not on first page\r\n        <span onClick={() => handlePageChange(currentPage - 1)}>\r\n          <button style={{ width: '65px', height: '30px', color: 'white', padding: '2px 5px 2px 5px', display: 'flex', justifyContent: 'center', alignItems: 'center', borderRadius: '4px', backgroundColor: 'transparent' }} >Previous</button>\r\n        </span>\r\n      )}\r\n      {pageNumbers.map((pageNumber) => (\r\n        <span key={pageNumber}>\r\n          <button\r\n            className={pageNumber === activePage ? 'active' : ''}\r\n            style={{\r\n              width: '30px',\r\n              height: '30px',\r\n              color: 'white',\r\n              padding: '2px 5px 2px 5px',\r\n              borderRadius: '4px',\r\n              backgroundColor: 'transparent',\r\n              ':hover': {\r\n                backgroundColor: '#23527c' // hover background color\r\n              }\r\n            }}\r\n            onClick={() => {\r\n              handlePageChange(pageNumber);\r\n              setActivePage(pageNumber);\r\n            }}\r\n          >\r\n            {pageNumber}\r\n          </button>\r\n        </span>\r\n      ))}\r\n      {currentPage < totalPages && ( // Next button if not on last page\r\n        <span onClick={() => handlePageChange(currentPage + 1)}>\r\n          <button style={{ color: 'white', height: '30px', display: 'flex', justifyContent: 'center', alignItems: 'center', padding: '2px 5px 2px 5px', borderRadius: '4px', backgroundColor: 'transparent' }}>Next</button>\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}