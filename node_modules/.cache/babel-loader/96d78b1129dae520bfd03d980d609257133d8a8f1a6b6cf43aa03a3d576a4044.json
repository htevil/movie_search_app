{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Project\\\\Web Project\\\\Greekforgreek_project\\\\React project\\\\movie_search_app\\\\src\\\\components\\\\SelectorComponent\\\\Dropdown\\\\index.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getMoviesByfilter } from '../../../api/movies';\nimport { getAllGenres } from \"../../../api/movies\";\nimport { SlButton, SlDivider, SlDropdown, SlMenu, SlMenuItem } from '@shoelace-style/shoelace/dist/react';\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dropdown() {\n  _s();\n  const dispatch = useDispatch();\n  const [selectedValue, setSelectedValue] = useState('');\n  const {\n    genres\n  } = useSelector(state => state.movies);\n  const [isActive, setIsActive] = useState(false); // renamed activedb to isActive\n\n  const handleChange = event => {\n    if (event.target.value === selectedValue) {\n      setSelectedValue(\"\");\n      dispatch(getMoviesByfilter(\"genre:\"));\n    } else {\n      setSelectedValue(event.target.value);\n      console.log(event.target.value);\n      let value = `genre:${event.target.value}`;\n      dispatch(getMoviesByfilter(value));\n    }\n    setIsActive(!isActive); // toggle isActive state\n  };\n  useEffect(() => {\n    dispatch(getAllGenres());\n  }, []);\n  useEffect(() => {\n    if (selectedValue === id) {\n      setisActive1(true);\n    } else {\n      setisActive1(false);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(SlDropdown, {\n    placement: \"top-start\",\n    children: [/*#__PURE__*/_jsxDEV(SlButton, {\n      className: `btn2 ${isActive ? 'activedb' : ''}`,\n      variant: \"text\",\n      slot: \"trigger\",\n      value: selectedValue,\n      children: selectedValue === \"\" ? \"Genres\" : selectedValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SlMenu, {\n      children: (genres === null || genres === void 0 ? void 0 : genres.length) > 0 && genres.map(item => /*#__PURE__*/_jsxDEV(SlMenuItem, {\n        className: `menu ${isActive ? 'active' : ''}`,\n        value: item,\n        id: item,\n        onClick: handleChange,\n        children: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this);\n}\n_s(Dropdown, \"s4wCOWavUQd31kSGgqFl/12DQMo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Dropdown;\nvar _c;\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","getMoviesByfilter","getAllGenres","SlButton","SlDivider","SlDropdown","SlMenu","SlMenuItem","jsxDEV","_jsxDEV","Dropdown","_s","dispatch","selectedValue","setSelectedValue","genres","state","movies","isActive","setIsActive","handleChange","event","target","value","console","log","id","setisActive1","placement","children","className","variant","slot","fileName","_jsxFileName","lineNumber","columnNumber","length","map","item","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Project/Web Project/Greekforgreek_project/React project/movie_search_app/src/components/SelectorComponent/Dropdown/index.js"],"sourcesContent":["import * as React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getMoviesByfilter } from '../../../api/movies';\r\nimport { getAllGenres } from \"../../../api/movies\";\r\nimport { SlButton, SlDivider, SlDropdown, SlMenu, SlMenuItem } from '@shoelace-style/shoelace/dist/react';\r\nimport \"./index.css\"\r\n\r\nexport default function Dropdown() { \r\n    const dispatch = useDispatch();\r\n    const [selectedValue, setSelectedValue] = useState('');\r\n    const { genres } = useSelector((state) => state.movies);\r\n    const [isActive, setIsActive] = useState(false); // renamed activedb to isActive\r\n    \r\n    const handleChange = (event) => {\r\n      if(event.target.value===selectedValue){\r\n        setSelectedValue(\"\");\r\n        dispatch(getMoviesByfilter(\"genre:\"));\r\n      }else{\r\n        setSelectedValue(event.target.value);\r\n        console.log(event.target.value)\r\n        let value = `genre:${event.target.value}`\r\n        dispatch(getMoviesByfilter(value));\r\n      }\r\n      setIsActive(!isActive); // toggle isActive state\r\n    };\r\n\r\n    useEffect(() => {\r\n      dispatch(getAllGenres());\r\n    }, []);\r\n    \r\n    useEffect(() => {\r\n      if (selectedValue===id){\r\n        setisActive1(true)\r\n      }else{\r\n        setisActive1(false)\r\n      }\r\n    }, );\r\n\r\n    return (\r\n      <SlDropdown placement=\"top-start\">\r\n        <SlButton className={`btn2 ${isActive ? 'activedb' : ''}`} variant=\"text\" slot=\"trigger\" value={selectedValue}>\r\n          { (selectedValue === \"\")? \"Genres\" : selectedValue  }\r\n        </SlButton>\r\n        <SlMenu>\r\n          {genres?.length > 0 && genres.map((item) => (\r\n            <SlMenuItem className={`menu ${isActive ? 'active' : ''}`} value={item} id={item} onClick={handleChange} >\r\n              {item}\r\n            </SlMenuItem>\r\n          ))}\r\n        </SlMenu>\r\n      </SlDropdown>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}