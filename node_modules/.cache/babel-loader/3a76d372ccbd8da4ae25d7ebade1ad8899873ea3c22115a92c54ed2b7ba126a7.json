{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Project\\\\Web Project\\\\Greekforgreek_project\\\\React project\\\\movie_search_app\\\\src\\\\components\\\\SelectorComponent\\\\Popup\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setcurrentPage } from '../../../slice/movieSlice/movieSlice';\nimport { getMoviesByfilter, getAllGenres } from '../../../api/movies';\nimport { SlButton, SlDropdown, SlMenu, SlMenuItem } from '@shoelace-style/shoelace/dist/react';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dropdown() {\n  _s();\n  const dispatch = useDispatch();\n  const [selectedValue, setSelectedValue] = useState('');\n  const {\n    genres\n  } = useSelector(state => state.movies);\n  const [isActive, setIsActive] = useState(false);\n  const handleChange = event => {\n    const genre = event.target.value;\n    if (genre === selectedValue) {\n      setSelectedValue('');\n      dispatch(getMoviesByfilter('genre:'));\n    } else {\n      setSelectedValue(genre);\n      const value = `genre:${genre}`;\n      window.scrollTo(0, 0);\n      dispatch(setcurrentPage(1));\n      dispatch(getMoviesByfilter(value));\n    }\n    setIsActive(!isActive);\n  };\n  useEffect(() => {\n    dispatch(getAllGenres());\n  }, [dispatch]);\n  useEffect(() => {\n    setIsActive(!!selectedValue);\n  }, [selectedValue]);\n  return /*#__PURE__*/_jsxDEV(SlDropdown, {\n    placement: \"top-start\",\n    children: [/*#__PURE__*/_jsxDEV(SlButton, {\n      className: `btn2 ${isActive ? 'activedb' : ''}`,\n      variant: \"text\",\n      slot: \"trigger\",\n      value: selectedValue,\n      children: selectedValue || 'Genres'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SlMenu, {\n      children: (genres === null || genres === void 0 ? void 0 : genres.length) > 0 && genres.map(item => /*#__PURE__*/_jsxDEV(SlMenuItem, {\n        className: `menu ${isActive && item === selectedValue ? 'activedd' : ''}`,\n        value: item,\n        onClick: handleChange,\n        children: item\n      }, item, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Dropdown, \"s4wCOWavUQd31kSGgqFl/12DQMo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Dropdown;\nvar _c;\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","setcurrentPage","getMoviesByfilter","getAllGenres","SlButton","SlDropdown","SlMenu","SlMenuItem","jsxDEV","_jsxDEV","Dropdown","_s","dispatch","selectedValue","setSelectedValue","genres","state","movies","isActive","setIsActive","handleChange","event","genre","target","value","window","scrollTo","placement","children","className","variant","slot","fileName","_jsxFileName","lineNumber","columnNumber","length","map","item","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Project/Web Project/Greekforgreek_project/React project/movie_search_app/src/components/SelectorComponent/Popup/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setcurrentPage } from '../../../slice/movieSlice/movieSlice';\r\nimport { getMoviesByfilter, getAllGenres } from '../../../api/movies';\r\nimport { SlButton, SlDropdown, SlMenu, SlMenuItem } from '@shoelace-style/shoelace/dist/react';\r\nimport './index.css';\r\n\r\nexport default function Dropdown() { \r\n  const dispatch = useDispatch();\r\n  const [selectedValue, setSelectedValue] = useState('');\r\n  const { genres } = useSelector((state) => state.movies);\r\n  const [isActive, setIsActive] = useState(false);\r\n\r\n  const handleChange = (event) => {\r\n    const genre = event.target.value;\r\n\r\n    if (genre === selectedValue) {\r\n      setSelectedValue('');\r\n      dispatch(getMoviesByfilter('genre:'));\r\n    } else {\r\n      setSelectedValue(genre);\r\n      const value = `genre:${genre}`;\r\n      window.scrollTo(0, 0);\r\n      dispatch(setcurrentPage(1));\r\n      dispatch(getMoviesByfilter(value));\r\n    }\r\n    \r\n    setIsActive(!isActive);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllGenres());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    setIsActive(!!selectedValue);\r\n  }, [selectedValue]);\r\n\r\n  return (\r\n    <SlDropdown placement=\"top-start\">\r\n      <SlButton\r\n        className={`btn2 ${isActive ? 'activedb' : ''}`}\r\n        variant=\"text\"\r\n        slot=\"trigger\"\r\n        value={selectedValue}\r\n      >\r\n        {selectedValue || 'Genres'}\r\n      </SlButton>\r\n      <SlMenu>\r\n        {genres?.length > 0 && genres.map((item) => (\r\n          <SlMenuItem\r\n            key={item}\r\n            className={`menu ${isActive && item === selectedValue ? 'activedd' : ''}`}\r\n            value={item}\r\n            onClick={handleChange}\r\n          >\r\n            {item}\r\n          </SlMenuItem>\r\n        ))}\r\n      </SlMenu>\r\n    </SlDropdown>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}