{"ast":null,"code":"import axios from 'axios';\nimport { setMovies, setGenres } from '../slice/movieSlice';\nconst BaseURL = \"http://localhost:3000/api/movies\";\nexport const getMovies = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await axios.get(BaseURL);\n    dispatch(setMovies(data));\n    return data;\n  } catch (err) {\n    return err;\n  }\n};\nexport const getMoviesBySearch = value => async dispatch => {\n  const url = BaseURL + '/search';\n  try {\n    const {\n      data\n    } = await axios.get(url, {\n      params: {\n        search: value\n      }\n    });\n    dispatch(setMovies(data));\n  } catch (err) {\n    return err;\n  }\n};\nexport const getAllGenres = () => async dispatch => {\n  const url = BaseURL + '/genres';\n  try {\n    const {\n      data\n    } = await axios.get(url);\n    dispatch(setGenres(data));\n  } catch (err) {\n    return err;\n  }\n};\nexport const getMoviesByGenre = value => async dispatch => {\n  const url = BaseURL + '/genre';\n  try {\n    const {\n      data\n    } = await axios.get(url, {\n      params: {\n        genre: value\n      }\n    });\n    dispatch(setMovies(data));\n  } catch (err) {\n    return err;\n  }\n};\nexport const getMoviesByRating = value => async dispatch => {\n  const url = BaseURL + '/rating';\n  try {\n    const {\n      data\n    } = await axios.get(url, {\n      params: {\n        rating: value\n      }\n    });\n    dispatch(setMovies(data));\n  } catch (err) {\n    return err;\n  }\n};\nexport const addmovie = value => {\n  console.log(movie);\n};","map":{"version":3,"names":["axios","setMovies","setGenres","BaseURL","getMovies","dispatch","data","get","err","getMoviesBySearch","value","url","params","search","getAllGenres","getMoviesByGenre","genre","getMoviesByRating","rating","addmovie","console","log","movie"],"sources":["C:/Users/ASUS/Project/Web Project/Greekforgreek_project/React project/movie_search_app/src/api/movies.js"],"sourcesContent":["import axios from 'axios';\r\nimport { setMovies, setGenres } from '../slice/movieSlice';\r\n\r\nconst BaseURL = \"http://localhost:3000/api/movies\";\r\n\r\nexport const getMovies = () => async dispatch => {\r\n    try {\r\n        const {data} = await axios.get(BaseURL);\r\n        dispatch(setMovies(data))\r\n        return data\r\n    }catch(err){\r\n        return err\r\n    }\r\n}\r\n\r\nexport const getMoviesBySearch = (value) => async dispatch => {\r\n    const url = BaseURL + '/search';\r\n    try {\r\n        const {data} = await axios.get(url,{\r\n            params: {\r\n                search: value\r\n            }\r\n        });\r\n        dispatch(setMovies(data));\r\n    }catch(err){\r\n        return err\r\n    }\r\n}\r\n\r\nexport const getAllGenres = () => async dispatch => {\r\n    const url = BaseURL + '/genres';\r\n    try {\r\n        const {data} = await axios.get(url);\r\n        dispatch(setGenres(data));\r\n    }catch(err){\r\n        return err\r\n    }\r\n}\r\n\r\nexport const getMoviesByGenre = (value) => async dispatch => {\r\n    const url = BaseURL + '/genre';\r\n    try {\r\n        const {data} = await axios.get(url,{\r\n            params: {\r\n                genre: value\r\n            }\r\n        });\r\n        dispatch(setMovies(data));\r\n    }catch(err){\r\n        return err\r\n    }\r\n}\r\n\r\nexport const getMoviesByRating = (value) => async dispatch => {\r\n    const url = BaseURL + '/rating';\r\n    try {\r\n        const {data} = await axios.get(url,{\r\n            params: {\r\n                rating: value\r\n            }\r\n        });\r\n        dispatch(setMovies(data));\r\n    }catch(err){\r\n        return err\r\n    }\r\n}\r\n\r\nexport const addmovie = (value) => {\r\n    console.log(movie)\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,SAAS,QAAQ,qBAAqB;AAE1D,MAAMC,OAAO,GAAG,kCAAkC;AAElD,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM,MAAMC,QAAQ,IAAI;EAC7C,IAAI;IACA,MAAM;MAACC;IAAI,CAAC,GAAG,MAAMN,KAAK,CAACO,GAAG,CAACJ,OAAO,CAAC;IACvCE,QAAQ,CAACJ,SAAS,CAACK,IAAI,CAAC,CAAC;IACzB,OAAOA,IAAI;EACf,CAAC,QAAME,GAAG,EAAC;IACP,OAAOA,GAAG;EACd;AACJ,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAIC,KAAK,IAAK,MAAML,QAAQ,IAAI;EAC1D,MAAMM,GAAG,GAAGR,OAAO,GAAG,SAAS;EAC/B,IAAI;IACA,MAAM;MAACG;IAAI,CAAC,GAAG,MAAMN,KAAK,CAACO,GAAG,CAACI,GAAG,EAAC;MAC/BC,MAAM,EAAE;QACJC,MAAM,EAAEH;MACZ;IACJ,CAAC,CAAC;IACFL,QAAQ,CAACJ,SAAS,CAACK,IAAI,CAAC,CAAC;EAC7B,CAAC,QAAME,GAAG,EAAC;IACP,OAAOA,GAAG;EACd;AACJ,CAAC;AAED,OAAO,MAAMM,YAAY,GAAGA,CAAA,KAAM,MAAMT,QAAQ,IAAI;EAChD,MAAMM,GAAG,GAAGR,OAAO,GAAG,SAAS;EAC/B,IAAI;IACA,MAAM;MAACG;IAAI,CAAC,GAAG,MAAMN,KAAK,CAACO,GAAG,CAACI,GAAG,CAAC;IACnCN,QAAQ,CAACH,SAAS,CAACI,IAAI,CAAC,CAAC;EAC7B,CAAC,QAAME,GAAG,EAAC;IACP,OAAOA,GAAG;EACd;AACJ,CAAC;AAED,OAAO,MAAMO,gBAAgB,GAAIL,KAAK,IAAK,MAAML,QAAQ,IAAI;EACzD,MAAMM,GAAG,GAAGR,OAAO,GAAG,QAAQ;EAC9B,IAAI;IACA,MAAM;MAACG;IAAI,CAAC,GAAG,MAAMN,KAAK,CAACO,GAAG,CAACI,GAAG,EAAC;MAC/BC,MAAM,EAAE;QACJI,KAAK,EAAEN;MACX;IACJ,CAAC,CAAC;IACFL,QAAQ,CAACJ,SAAS,CAACK,IAAI,CAAC,CAAC;EAC7B,CAAC,QAAME,GAAG,EAAC;IACP,OAAOA,GAAG;EACd;AACJ,CAAC;AAED,OAAO,MAAMS,iBAAiB,GAAIP,KAAK,IAAK,MAAML,QAAQ,IAAI;EAC1D,MAAMM,GAAG,GAAGR,OAAO,GAAG,SAAS;EAC/B,IAAI;IACA,MAAM;MAACG;IAAI,CAAC,GAAG,MAAMN,KAAK,CAACO,GAAG,CAACI,GAAG,EAAC;MAC/BC,MAAM,EAAE;QACJM,MAAM,EAAER;MACZ;IACJ,CAAC,CAAC;IACFL,QAAQ,CAACJ,SAAS,CAACK,IAAI,CAAC,CAAC;EAC7B,CAAC,QAAME,GAAG,EAAC;IACP,OAAOA,GAAG;EACd;AACJ,CAAC;AAED,OAAO,MAAMW,QAAQ,GAAIT,KAAK,IAAK;EAC/BU,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}